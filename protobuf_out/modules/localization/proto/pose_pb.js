// source: modules/localization/proto/pose.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var modules_common_proto_geometry_pb = require('../../../modules/common/proto/geometry_pb.js');
goog.object.extend(proto, modules_common_proto_geometry_pb);
goog.exportSymbol('proto.apollo.localization.Pose', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.localization.Pose = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.localization.Pose, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.localization.Pose.displayName = 'proto.apollo.localization.Pose';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.localization.Pose.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.localization.Pose.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.localization.Pose} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.localization.Pose.toObject = function(includeInstance, msg) {
  var f, obj = {
    position: (f = msg.getPosition()) && modules_common_proto_geometry_pb.PointENU.toObject(includeInstance, f),
    orientation: (f = msg.getOrientation()) && modules_common_proto_geometry_pb.Quaternion.toObject(includeInstance, f),
    linearVelocity: (f = msg.getLinearVelocity()) && modules_common_proto_geometry_pb.Point3D.toObject(includeInstance, f),
    linearAcceleration: (f = msg.getLinearAcceleration()) && modules_common_proto_geometry_pb.Point3D.toObject(includeInstance, f),
    angularVelocity: (f = msg.getAngularVelocity()) && modules_common_proto_geometry_pb.Point3D.toObject(includeInstance, f),
    heading: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    linearAccelerationVrf: (f = msg.getLinearAccelerationVrf()) && modules_common_proto_geometry_pb.Point3D.toObject(includeInstance, f),
    angularVelocityVrf: (f = msg.getAngularVelocityVrf()) && modules_common_proto_geometry_pb.Point3D.toObject(includeInstance, f),
    eulerAngles: (f = msg.getEulerAngles()) && modules_common_proto_geometry_pb.Point3D.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Pose as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.localization.Pose.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.position;

  /** @type {?|undefined} */
  this.orientation;

  /** @type {?|undefined} */
  this.linearVelocity;

  /** @type {?|undefined} */
  this.linearAcceleration;

  /** @type {?|undefined} */
  this.angularVelocity;

  /** @type {?|undefined} */
  this.heading;

  /** @type {?|undefined} */
  this.linearAccelerationVrf;

  /** @type {?|undefined} */
  this.angularVelocityVrf;

  /** @type {?|undefined} */
  this.eulerAngles;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.localization.Pose.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.localization.Pose}
 */
proto.apollo.localization.Pose.fromObject = function(obj) {
  var msg = new proto.apollo.localization.Pose();
  obj.position && jspb.Message.setWrapperField(
      msg, 1, modules_common_proto_geometry_pb.PointENU.fromObject(obj.position));
  obj.orientation && jspb.Message.setWrapperField(
      msg, 2, modules_common_proto_geometry_pb.Quaternion.fromObject(obj.orientation));
  obj.linearVelocity && jspb.Message.setWrapperField(
      msg, 3, modules_common_proto_geometry_pb.Point3D.fromObject(obj.linearVelocity));
  obj.linearAcceleration && jspb.Message.setWrapperField(
      msg, 4, modules_common_proto_geometry_pb.Point3D.fromObject(obj.linearAcceleration));
  obj.angularVelocity && jspb.Message.setWrapperField(
      msg, 5, modules_common_proto_geometry_pb.Point3D.fromObject(obj.angularVelocity));
  obj.heading != null && jspb.Message.setField(msg, 6, obj.heading);
  obj.linearAccelerationVrf && jspb.Message.setWrapperField(
      msg, 7, modules_common_proto_geometry_pb.Point3D.fromObject(obj.linearAccelerationVrf));
  obj.angularVelocityVrf && jspb.Message.setWrapperField(
      msg, 8, modules_common_proto_geometry_pb.Point3D.fromObject(obj.angularVelocityVrf));
  obj.eulerAngles && jspb.Message.setWrapperField(
      msg, 9, modules_common_proto_geometry_pb.Point3D.fromObject(obj.eulerAngles));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.localization.Pose}
 */
proto.apollo.localization.Pose.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.localization.Pose;
  return proto.apollo.localization.Pose.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.localization.Pose} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.localization.Pose}
 */
proto.apollo.localization.Pose.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modules_common_proto_geometry_pb.PointENU;
      reader.readMessage(value,modules_common_proto_geometry_pb.PointENU.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    case 2:
      var value = new modules_common_proto_geometry_pb.Quaternion;
      reader.readMessage(value,modules_common_proto_geometry_pb.Quaternion.deserializeBinaryFromReader);
      msg.setOrientation(value);
      break;
    case 3:
      var value = new modules_common_proto_geometry_pb.Point3D;
      reader.readMessage(value,modules_common_proto_geometry_pb.Point3D.deserializeBinaryFromReader);
      msg.setLinearVelocity(value);
      break;
    case 4:
      var value = new modules_common_proto_geometry_pb.Point3D;
      reader.readMessage(value,modules_common_proto_geometry_pb.Point3D.deserializeBinaryFromReader);
      msg.setLinearAcceleration(value);
      break;
    case 5:
      var value = new modules_common_proto_geometry_pb.Point3D;
      reader.readMessage(value,modules_common_proto_geometry_pb.Point3D.deserializeBinaryFromReader);
      msg.setAngularVelocity(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHeading(value);
      break;
    case 7:
      var value = new modules_common_proto_geometry_pb.Point3D;
      reader.readMessage(value,modules_common_proto_geometry_pb.Point3D.deserializeBinaryFromReader);
      msg.setLinearAccelerationVrf(value);
      break;
    case 8:
      var value = new modules_common_proto_geometry_pb.Point3D;
      reader.readMessage(value,modules_common_proto_geometry_pb.Point3D.deserializeBinaryFromReader);
      msg.setAngularVelocityVrf(value);
      break;
    case 9:
      var value = new modules_common_proto_geometry_pb.Point3D;
      reader.readMessage(value,modules_common_proto_geometry_pb.Point3D.deserializeBinaryFromReader);
      msg.setEulerAngles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.localization.Pose.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.localization.Pose.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.localization.Pose} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.localization.Pose.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modules_common_proto_geometry_pb.PointENU.serializeBinaryToWriter
    );
  }
  f = message.getOrientation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      modules_common_proto_geometry_pb.Quaternion.serializeBinaryToWriter
    );
  }
  f = message.getLinearVelocity();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      modules_common_proto_geometry_pb.Point3D.serializeBinaryToWriter
    );
  }
  f = message.getLinearAcceleration();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      modules_common_proto_geometry_pb.Point3D.serializeBinaryToWriter
    );
  }
  f = message.getAngularVelocity();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      modules_common_proto_geometry_pb.Point3D.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getLinearAccelerationVrf();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      modules_common_proto_geometry_pb.Point3D.serializeBinaryToWriter
    );
  }
  f = message.getAngularVelocityVrf();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      modules_common_proto_geometry_pb.Point3D.serializeBinaryToWriter
    );
  }
  f = message.getEulerAngles();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      modules_common_proto_geometry_pb.Point3D.serializeBinaryToWriter
    );
  }
};


/**
 * optional apollo.common.PointENU position = 1;
 * @return {?proto.apollo.common.PointENU}
 */
proto.apollo.localization.Pose.prototype.getPosition = function() {
  return /** @type{?proto.apollo.common.PointENU} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_geometry_pb.PointENU, 1));
};


/**
 * @param {?proto.apollo.common.PointENU|undefined} value
 * @return {!proto.apollo.localization.Pose} returns this
*/
proto.apollo.localization.Pose.prototype.setPosition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.localization.Pose} returns this
 */
proto.apollo.localization.Pose.prototype.clearPosition = function() {
  return this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.Pose.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional apollo.common.Quaternion orientation = 2;
 * @return {?proto.apollo.common.Quaternion}
 */
proto.apollo.localization.Pose.prototype.getOrientation = function() {
  return /** @type{?proto.apollo.common.Quaternion} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_geometry_pb.Quaternion, 2));
};


/**
 * @param {?proto.apollo.common.Quaternion|undefined} value
 * @return {!proto.apollo.localization.Pose} returns this
*/
proto.apollo.localization.Pose.prototype.setOrientation = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.localization.Pose} returns this
 */
proto.apollo.localization.Pose.prototype.clearOrientation = function() {
  return this.setOrientation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.Pose.prototype.hasOrientation = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional apollo.common.Point3D linear_velocity = 3;
 * @return {?proto.apollo.common.Point3D}
 */
proto.apollo.localization.Pose.prototype.getLinearVelocity = function() {
  return /** @type{?proto.apollo.common.Point3D} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_geometry_pb.Point3D, 3));
};


/**
 * @param {?proto.apollo.common.Point3D|undefined} value
 * @return {!proto.apollo.localization.Pose} returns this
*/
proto.apollo.localization.Pose.prototype.setLinearVelocity = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.localization.Pose} returns this
 */
proto.apollo.localization.Pose.prototype.clearLinearVelocity = function() {
  return this.setLinearVelocity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.Pose.prototype.hasLinearVelocity = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional apollo.common.Point3D linear_acceleration = 4;
 * @return {?proto.apollo.common.Point3D}
 */
proto.apollo.localization.Pose.prototype.getLinearAcceleration = function() {
  return /** @type{?proto.apollo.common.Point3D} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_geometry_pb.Point3D, 4));
};


/**
 * @param {?proto.apollo.common.Point3D|undefined} value
 * @return {!proto.apollo.localization.Pose} returns this
*/
proto.apollo.localization.Pose.prototype.setLinearAcceleration = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.localization.Pose} returns this
 */
proto.apollo.localization.Pose.prototype.clearLinearAcceleration = function() {
  return this.setLinearAcceleration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.Pose.prototype.hasLinearAcceleration = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional apollo.common.Point3D angular_velocity = 5;
 * @return {?proto.apollo.common.Point3D}
 */
proto.apollo.localization.Pose.prototype.getAngularVelocity = function() {
  return /** @type{?proto.apollo.common.Point3D} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_geometry_pb.Point3D, 5));
};


/**
 * @param {?proto.apollo.common.Point3D|undefined} value
 * @return {!proto.apollo.localization.Pose} returns this
*/
proto.apollo.localization.Pose.prototype.setAngularVelocity = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.localization.Pose} returns this
 */
proto.apollo.localization.Pose.prototype.clearAngularVelocity = function() {
  return this.setAngularVelocity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.Pose.prototype.hasAngularVelocity = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double heading = 6;
 * @return {number}
 */
proto.apollo.localization.Pose.prototype.getHeading = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.localization.Pose} returns this
 */
proto.apollo.localization.Pose.prototype.setHeading = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.localization.Pose} returns this
 */
proto.apollo.localization.Pose.prototype.clearHeading = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.Pose.prototype.hasHeading = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional apollo.common.Point3D linear_acceleration_vrf = 7;
 * @return {?proto.apollo.common.Point3D}
 */
proto.apollo.localization.Pose.prototype.getLinearAccelerationVrf = function() {
  return /** @type{?proto.apollo.common.Point3D} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_geometry_pb.Point3D, 7));
};


/**
 * @param {?proto.apollo.common.Point3D|undefined} value
 * @return {!proto.apollo.localization.Pose} returns this
*/
proto.apollo.localization.Pose.prototype.setLinearAccelerationVrf = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.localization.Pose} returns this
 */
proto.apollo.localization.Pose.prototype.clearLinearAccelerationVrf = function() {
  return this.setLinearAccelerationVrf(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.Pose.prototype.hasLinearAccelerationVrf = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional apollo.common.Point3D angular_velocity_vrf = 8;
 * @return {?proto.apollo.common.Point3D}
 */
proto.apollo.localization.Pose.prototype.getAngularVelocityVrf = function() {
  return /** @type{?proto.apollo.common.Point3D} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_geometry_pb.Point3D, 8));
};


/**
 * @param {?proto.apollo.common.Point3D|undefined} value
 * @return {!proto.apollo.localization.Pose} returns this
*/
proto.apollo.localization.Pose.prototype.setAngularVelocityVrf = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.localization.Pose} returns this
 */
proto.apollo.localization.Pose.prototype.clearAngularVelocityVrf = function() {
  return this.setAngularVelocityVrf(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.Pose.prototype.hasAngularVelocityVrf = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional apollo.common.Point3D euler_angles = 9;
 * @return {?proto.apollo.common.Point3D}
 */
proto.apollo.localization.Pose.prototype.getEulerAngles = function() {
  return /** @type{?proto.apollo.common.Point3D} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_geometry_pb.Point3D, 9));
};


/**
 * @param {?proto.apollo.common.Point3D|undefined} value
 * @return {!proto.apollo.localization.Pose} returns this
*/
proto.apollo.localization.Pose.prototype.setEulerAngles = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.localization.Pose} returns this
 */
proto.apollo.localization.Pose.prototype.clearEulerAngles = function() {
  return this.setEulerAngles(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.Pose.prototype.hasEulerAngles = function() {
  return jspb.Message.getField(this, 9) != null;
};


goog.object.extend(exports, proto.apollo.localization);
