// source: modules/drivers/proto/pointcloud.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var modules_common_proto_header_pb = require('../../../modules/common/proto/header_pb.js');
goog.object.extend(proto, modules_common_proto_header_pb);
goog.exportSymbol('proto.apollo.drivers.PointCloud', null, global);
goog.exportSymbol('proto.apollo.drivers.PointXYZIT', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.PointXYZIT = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.PointXYZIT, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.PointXYZIT.displayName = 'proto.apollo.drivers.PointXYZIT';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.PointCloud = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.drivers.PointCloud.repeatedFields_, null);
};
goog.inherits(proto.apollo.drivers.PointCloud, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.PointCloud.displayName = 'proto.apollo.drivers.PointCloud';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.PointXYZIT.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.PointXYZIT.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.PointXYZIT} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.PointXYZIT.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, NaN),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, NaN),
    z: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, NaN),
    intensity: jspb.Message.getFieldWithDefault(msg, 4, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of PointXYZIT as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.PointXYZIT.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.x;

  /** @type {?|undefined} */
  this.y;

  /** @type {?|undefined} */
  this.z;

  /** @type {?|undefined} */
  this.intensity;

  /** @type {?|undefined} */
  this.timestamp;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.PointXYZIT.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.PointXYZIT}
 */
proto.apollo.drivers.PointXYZIT.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.PointXYZIT();
  obj.x != null && jspb.Message.setField(msg, 1, obj.x);
  obj.y != null && jspb.Message.setField(msg, 2, obj.y);
  obj.z != null && jspb.Message.setField(msg, 3, obj.z);
  obj.intensity != null && jspb.Message.setField(msg, 4, obj.intensity);
  obj.timestamp != null && jspb.Message.setField(msg, 5, obj.timestamp);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.PointXYZIT}
 */
proto.apollo.drivers.PointXYZIT.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.PointXYZIT;
  return proto.apollo.drivers.PointXYZIT.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.PointXYZIT} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.PointXYZIT}
 */
proto.apollo.drivers.PointXYZIT.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setZ(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIntensity(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.PointXYZIT.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.PointXYZIT.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.PointXYZIT} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.PointXYZIT.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * optional float x = 1;
 * @return {number}
 */
proto.apollo.drivers.PointXYZIT.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, NaN));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.PointXYZIT} returns this
 */
proto.apollo.drivers.PointXYZIT.prototype.setX = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.PointXYZIT} returns this
 */
proto.apollo.drivers.PointXYZIT.prototype.clearX = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.PointXYZIT.prototype.hasX = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float y = 2;
 * @return {number}
 */
proto.apollo.drivers.PointXYZIT.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, NaN));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.PointXYZIT} returns this
 */
proto.apollo.drivers.PointXYZIT.prototype.setY = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.PointXYZIT} returns this
 */
proto.apollo.drivers.PointXYZIT.prototype.clearY = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.PointXYZIT.prototype.hasY = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float z = 3;
 * @return {number}
 */
proto.apollo.drivers.PointXYZIT.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, NaN));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.PointXYZIT} returns this
 */
proto.apollo.drivers.PointXYZIT.prototype.setZ = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.PointXYZIT} returns this
 */
proto.apollo.drivers.PointXYZIT.prototype.clearZ = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.PointXYZIT.prototype.hasZ = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 intensity = 4;
 * @return {number}
 */
proto.apollo.drivers.PointXYZIT.prototype.getIntensity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.PointXYZIT} returns this
 */
proto.apollo.drivers.PointXYZIT.prototype.setIntensity = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.PointXYZIT} returns this
 */
proto.apollo.drivers.PointXYZIT.prototype.clearIntensity = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.PointXYZIT.prototype.hasIntensity = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 timestamp = 5;
 * @return {number}
 */
proto.apollo.drivers.PointXYZIT.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.PointXYZIT} returns this
 */
proto.apollo.drivers.PointXYZIT.prototype.setTimestamp = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.PointXYZIT} returns this
 */
proto.apollo.drivers.PointXYZIT.prototype.clearTimestamp = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.PointXYZIT.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.drivers.PointCloud.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.PointCloud.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.PointCloud.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.PointCloud} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.PointCloud.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && modules_common_proto_header_pb.Header.toObject(includeInstance, f),
    frameId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    isDense: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    pointList: jspb.Message.toObjectList(msg.getPointList(),
    proto.apollo.drivers.PointXYZIT.toObject, includeInstance),
    measurementTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    width: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    height: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of PointCloud as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.PointCloud.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.header;

  /** @type {?|undefined} */
  this.frameId;

  /** @type {?|undefined} */
  this.isDense;

  /** @type {?|undefined} */
  this.pointList;

  /** @type {?|undefined} */
  this.measurementTime;

  /** @type {?|undefined} */
  this.width;

  /** @type {?|undefined} */
  this.height;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.PointCloud.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.PointCloud}
 */
proto.apollo.drivers.PointCloud.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.PointCloud();
  obj.header && jspb.Message.setWrapperField(
      msg, 1, modules_common_proto_header_pb.Header.fromObject(obj.header));
  obj.frameId != null && jspb.Message.setField(msg, 2, obj.frameId);
  obj.isDense != null && jspb.Message.setField(msg, 3, obj.isDense);
  obj.pointList && jspb.Message.setRepeatedWrapperField(
      msg, 4, obj.pointList.map(
          proto.apollo.drivers.PointXYZIT.fromObject));
  obj.measurementTime != null && jspb.Message.setField(msg, 5, obj.measurementTime);
  obj.width != null && jspb.Message.setField(msg, 6, obj.width);
  obj.height != null && jspb.Message.setField(msg, 7, obj.height);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.PointCloud}
 */
proto.apollo.drivers.PointCloud.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.PointCloud;
  return proto.apollo.drivers.PointCloud.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.PointCloud} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.PointCloud}
 */
proto.apollo.drivers.PointCloud.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modules_common_proto_header_pb.Header;
      reader.readMessage(value,modules_common_proto_header_pb.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDense(value);
      break;
    case 4:
      var value = new proto.apollo.drivers.PointXYZIT;
      reader.readMessage(value,proto.apollo.drivers.PointXYZIT.deserializeBinaryFromReader);
      msg.addPoint(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMeasurementTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWidth(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.PointCloud.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.PointCloud.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.PointCloud} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.PointCloud.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modules_common_proto_header_pb.Header.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getPointList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.apollo.drivers.PointXYZIT.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional apollo.common.Header header = 1;
 * @return {?proto.apollo.common.Header}
 */
proto.apollo.drivers.PointCloud.prototype.getHeader = function() {
  return /** @type{?proto.apollo.common.Header} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_header_pb.Header, 1));
};


/**
 * @param {?proto.apollo.common.Header|undefined} value
 * @return {!proto.apollo.drivers.PointCloud} returns this
*/
proto.apollo.drivers.PointCloud.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.PointCloud} returns this
 */
proto.apollo.drivers.PointCloud.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.PointCloud.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string frame_id = 2;
 * @return {string}
 */
proto.apollo.drivers.PointCloud.prototype.getFrameId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.drivers.PointCloud} returns this
 */
proto.apollo.drivers.PointCloud.prototype.setFrameId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.PointCloud} returns this
 */
proto.apollo.drivers.PointCloud.prototype.clearFrameId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.PointCloud.prototype.hasFrameId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool is_dense = 3;
 * @return {boolean}
 */
proto.apollo.drivers.PointCloud.prototype.getIsDense = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.PointCloud} returns this
 */
proto.apollo.drivers.PointCloud.prototype.setIsDense = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.PointCloud} returns this
 */
proto.apollo.drivers.PointCloud.prototype.clearIsDense = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.PointCloud.prototype.hasIsDense = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated PointXYZIT point = 4;
 * @return {!Array<!proto.apollo.drivers.PointXYZIT>}
 */
proto.apollo.drivers.PointCloud.prototype.getPointList = function() {
  return /** @type{!Array<!proto.apollo.drivers.PointXYZIT>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.drivers.PointXYZIT, 4));
};


/**
 * @param {!Array<!proto.apollo.drivers.PointXYZIT>} value
 * @return {!proto.apollo.drivers.PointCloud} returns this
*/
proto.apollo.drivers.PointCloud.prototype.setPointList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.apollo.drivers.PointXYZIT=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.drivers.PointXYZIT}
 */
proto.apollo.drivers.PointCloud.prototype.addPoint = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.apollo.drivers.PointXYZIT, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.drivers.PointCloud} returns this
 */
proto.apollo.drivers.PointCloud.prototype.clearPointList = function() {
  return this.setPointList([]);
};


/**
 * optional double measurement_time = 5;
 * @return {number}
 */
proto.apollo.drivers.PointCloud.prototype.getMeasurementTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.PointCloud} returns this
 */
proto.apollo.drivers.PointCloud.prototype.setMeasurementTime = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.PointCloud} returns this
 */
proto.apollo.drivers.PointCloud.prototype.clearMeasurementTime = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.PointCloud.prototype.hasMeasurementTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 width = 6;
 * @return {number}
 */
proto.apollo.drivers.PointCloud.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.PointCloud} returns this
 */
proto.apollo.drivers.PointCloud.prototype.setWidth = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.PointCloud} returns this
 */
proto.apollo.drivers.PointCloud.prototype.clearWidth = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.PointCloud.prototype.hasWidth = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 height = 7;
 * @return {number}
 */
proto.apollo.drivers.PointCloud.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.PointCloud} returns this
 */
proto.apollo.drivers.PointCloud.prototype.setHeight = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.PointCloud} returns this
 */
proto.apollo.drivers.PointCloud.prototype.clearHeight = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.PointCloud.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 7) != null;
};


goog.object.extend(exports, proto.apollo.drivers);
