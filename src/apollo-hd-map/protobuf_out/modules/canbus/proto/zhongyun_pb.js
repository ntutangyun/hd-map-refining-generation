// source: modules/canbus/proto/zhongyun.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.apollo.canbus.Brake_control_a4', null, global);
goog.exportSymbol('proto.apollo.canbus.Brake_control_a4.Brake_enable_controlType', null, global);
goog.exportSymbol('proto.apollo.canbus.Enable_state_feedback_c3', null, global);
goog.exportSymbol('proto.apollo.canbus.Enable_state_feedback_c3.Brake_enable_stateType', null, global);
goog.exportSymbol('proto.apollo.canbus.Enable_state_feedback_c3.Driven_enable_stateType', null, global);
goog.exportSymbol('proto.apollo.canbus.Enable_state_feedback_c3.Gear_enable_actualType', null, global);
goog.exportSymbol('proto.apollo.canbus.Enable_state_feedback_c3.Parking_enable_stateType', null, global);
goog.exportSymbol('proto.apollo.canbus.Enable_state_feedback_c3.Steering_enable_stateType', null, global);
goog.exportSymbol('proto.apollo.canbus.Error_state_e1', null, global);
goog.exportSymbol('proto.apollo.canbus.Error_state_e1.Brake_error_codeType', null, global);
goog.exportSymbol('proto.apollo.canbus.Error_state_e1.Driven_error_codeType', null, global);
goog.exportSymbol('proto.apollo.canbus.Error_state_e1.Gear_error_msgType', null, global);
goog.exportSymbol('proto.apollo.canbus.Error_state_e1.Parking_error_codeType', null, global);
goog.exportSymbol('proto.apollo.canbus.Error_state_e1.Steering_error_codeType', null, global);
goog.exportSymbol('proto.apollo.canbus.Gear_control_a1', null, global);
goog.exportSymbol('proto.apollo.canbus.Gear_control_a1.Gear_enable_controlType', null, global);
goog.exportSymbol('proto.apollo.canbus.Gear_control_a1.Gear_state_targetType', null, global);
goog.exportSymbol('proto.apollo.canbus.Parking_control_a5', null, global);
goog.exportSymbol('proto.apollo.canbus.Parking_control_a5.Parking_enable_controlType', null, global);
goog.exportSymbol('proto.apollo.canbus.Parking_control_a5.Parking_targetType', null, global);
goog.exportSymbol('proto.apollo.canbus.Steering_control_a2', null, global);
goog.exportSymbol('proto.apollo.canbus.Steering_control_a2.Steering_enable_controlType', null, global);
goog.exportSymbol('proto.apollo.canbus.Torque_control_a3', null, global);
goog.exportSymbol('proto.apollo.canbus.Torque_control_a3.Driven_enable_controlType', null, global);
goog.exportSymbol('proto.apollo.canbus.Vehicle_state_feedback_2_c4', null, global);
goog.exportSymbol('proto.apollo.canbus.Vehicle_state_feedback_c1', null, global);
goog.exportSymbol('proto.apollo.canbus.Vehicle_state_feedback_c1.Gear_state_actualType', null, global);
goog.exportSymbol('proto.apollo.canbus.Vehicle_state_feedback_c1.Parking_actualType', null, global);
goog.exportSymbol('proto.apollo.canbus.Zhongyun', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Gear_control_a1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Gear_control_a1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Gear_control_a1.displayName = 'proto.apollo.canbus.Gear_control_a1';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Torque_control_a3 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Torque_control_a3, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Torque_control_a3.displayName = 'proto.apollo.canbus.Torque_control_a3';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Steering_control_a2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Steering_control_a2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Steering_control_a2.displayName = 'proto.apollo.canbus.Steering_control_a2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Parking_control_a5 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Parking_control_a5, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Parking_control_a5.displayName = 'proto.apollo.canbus.Parking_control_a5';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Brake_control_a4 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Brake_control_a4, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Brake_control_a4.displayName = 'proto.apollo.canbus.Brake_control_a4';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Enable_state_feedback_c3 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Enable_state_feedback_c3, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Enable_state_feedback_c3.displayName = 'proto.apollo.canbus.Enable_state_feedback_c3';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Vehicle_state_feedback_c1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Vehicle_state_feedback_c1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Vehicle_state_feedback_c1.displayName = 'proto.apollo.canbus.Vehicle_state_feedback_c1';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Error_state_e1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Error_state_e1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Error_state_e1.displayName = 'proto.apollo.canbus.Error_state_e1';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Vehicle_state_feedback_2_c4 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Vehicle_state_feedback_2_c4, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Vehicle_state_feedback_2_c4.displayName = 'proto.apollo.canbus.Vehicle_state_feedback_2_c4';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Zhongyun = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Zhongyun, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Zhongyun.displayName = 'proto.apollo.canbus.Zhongyun';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Gear_control_a1.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Gear_control_a1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Gear_control_a1} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Gear_control_a1.toObject = function(includeInstance, msg) {
  var f, obj = {
    gearStateTarget: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    gearEnableControl: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Gear_control_a1 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Gear_control_a1.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.gearStateTarget;

  /** @type {?|undefined} */
  this.gearEnableControl;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Gear_control_a1.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Gear_control_a1}
 */
proto.apollo.canbus.Gear_control_a1.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Gear_control_a1();
  obj.gearStateTarget != null && jspb.Message.setField(msg, 1, obj.gearStateTarget);
  obj.gearEnableControl != null && jspb.Message.setField(msg, 2, obj.gearEnableControl);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Gear_control_a1}
 */
proto.apollo.canbus.Gear_control_a1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Gear_control_a1;
  return proto.apollo.canbus.Gear_control_a1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Gear_control_a1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Gear_control_a1}
 */
proto.apollo.canbus.Gear_control_a1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.canbus.Gear_control_a1.Gear_state_targetType} */ (reader.readEnum());
      msg.setGearStateTarget(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.canbus.Gear_control_a1.Gear_enable_controlType} */ (reader.readEnum());
      msg.setGearEnableControl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Gear_control_a1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Gear_control_a1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Gear_control_a1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Gear_control_a1.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.canbus.Gear_control_a1.Gear_state_targetType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Gear_control_a1.Gear_enable_controlType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Gear_control_a1.Gear_state_targetType = {
  GEAR_STATE_TARGET_P: 1,
  GEAR_STATE_TARGET_N: 2,
  GEAR_STATE_TARGET_D: 3,
  GEAR_STATE_TARGET_R: 4,
  GEAR_STATE_TARGET_INVALID: 5
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Gear_control_a1.Gear_enable_controlType = {
  GEAR_ENABLE_CONTROL_GEAR_MANUALCONTROL: 0,
  GEAR_ENABLE_CONTROL_GEAR_AUTOCONTROL: 1
};

/**
 * optional Gear_state_targetType gear_state_target = 1;
 * @return {!proto.apollo.canbus.Gear_control_a1.Gear_state_targetType}
 */
proto.apollo.canbus.Gear_control_a1.prototype.getGearStateTarget = function() {
  return /** @type {!proto.apollo.canbus.Gear_control_a1.Gear_state_targetType} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.apollo.canbus.Gear_control_a1.Gear_state_targetType} value
 * @return {!proto.apollo.canbus.Gear_control_a1} returns this
 */
proto.apollo.canbus.Gear_control_a1.prototype.setGearStateTarget = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Gear_control_a1} returns this
 */
proto.apollo.canbus.Gear_control_a1.prototype.clearGearStateTarget = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Gear_control_a1.prototype.hasGearStateTarget = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Gear_enable_controlType gear_enable_control = 2;
 * @return {!proto.apollo.canbus.Gear_control_a1.Gear_enable_controlType}
 */
proto.apollo.canbus.Gear_control_a1.prototype.getGearEnableControl = function() {
  return /** @type {!proto.apollo.canbus.Gear_control_a1.Gear_enable_controlType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.apollo.canbus.Gear_control_a1.Gear_enable_controlType} value
 * @return {!proto.apollo.canbus.Gear_control_a1} returns this
 */
proto.apollo.canbus.Gear_control_a1.prototype.setGearEnableControl = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Gear_control_a1} returns this
 */
proto.apollo.canbus.Gear_control_a1.prototype.clearGearEnableControl = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Gear_control_a1.prototype.hasGearEnableControl = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Torque_control_a3.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Torque_control_a3.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Torque_control_a3} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Torque_control_a3.toObject = function(includeInstance, msg) {
  var f, obj = {
    drivenTorque: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    drivenEnableControl: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Torque_control_a3 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Torque_control_a3.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.drivenTorque;

  /** @type {?|undefined} */
  this.drivenEnableControl;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Torque_control_a3.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Torque_control_a3}
 */
proto.apollo.canbus.Torque_control_a3.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Torque_control_a3();
  obj.drivenTorque != null && jspb.Message.setField(msg, 1, obj.drivenTorque);
  obj.drivenEnableControl != null && jspb.Message.setField(msg, 2, obj.drivenEnableControl);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Torque_control_a3}
 */
proto.apollo.canbus.Torque_control_a3.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Torque_control_a3;
  return proto.apollo.canbus.Torque_control_a3.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Torque_control_a3} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Torque_control_a3}
 */
proto.apollo.canbus.Torque_control_a3.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDrivenTorque(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.canbus.Torque_control_a3.Driven_enable_controlType} */ (reader.readEnum());
      msg.setDrivenEnableControl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Torque_control_a3.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Torque_control_a3.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Torque_control_a3} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Torque_control_a3.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Torque_control_a3.Driven_enable_controlType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Torque_control_a3.Driven_enable_controlType = {
  DRIVEN_ENABLE_CONTROL_DRIVE_MANUAL: 0,
  DRIVEN_ENABLE_CONTROL_DRIVE_AUTO: 1
};

/**
 * optional double driven_torque = 1;
 * @return {number}
 */
proto.apollo.canbus.Torque_control_a3.prototype.getDrivenTorque = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Torque_control_a3} returns this
 */
proto.apollo.canbus.Torque_control_a3.prototype.setDrivenTorque = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Torque_control_a3} returns this
 */
proto.apollo.canbus.Torque_control_a3.prototype.clearDrivenTorque = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Torque_control_a3.prototype.hasDrivenTorque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Driven_enable_controlType driven_enable_control = 2;
 * @return {!proto.apollo.canbus.Torque_control_a3.Driven_enable_controlType}
 */
proto.apollo.canbus.Torque_control_a3.prototype.getDrivenEnableControl = function() {
  return /** @type {!proto.apollo.canbus.Torque_control_a3.Driven_enable_controlType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.apollo.canbus.Torque_control_a3.Driven_enable_controlType} value
 * @return {!proto.apollo.canbus.Torque_control_a3} returns this
 */
proto.apollo.canbus.Torque_control_a3.prototype.setDrivenEnableControl = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Torque_control_a3} returns this
 */
proto.apollo.canbus.Torque_control_a3.prototype.clearDrivenEnableControl = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Torque_control_a3.prototype.hasDrivenEnableControl = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Steering_control_a2.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Steering_control_a2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Steering_control_a2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Steering_control_a2.toObject = function(includeInstance, msg) {
  var f, obj = {
    steeringTarget: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    steeringEnableControl: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Steering_control_a2 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Steering_control_a2.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.steeringTarget;

  /** @type {?|undefined} */
  this.steeringEnableControl;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Steering_control_a2.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Steering_control_a2}
 */
proto.apollo.canbus.Steering_control_a2.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Steering_control_a2();
  obj.steeringTarget != null && jspb.Message.setField(msg, 1, obj.steeringTarget);
  obj.steeringEnableControl != null && jspb.Message.setField(msg, 2, obj.steeringEnableControl);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Steering_control_a2}
 */
proto.apollo.canbus.Steering_control_a2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Steering_control_a2;
  return proto.apollo.canbus.Steering_control_a2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Steering_control_a2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Steering_control_a2}
 */
proto.apollo.canbus.Steering_control_a2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSteeringTarget(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.canbus.Steering_control_a2.Steering_enable_controlType} */ (reader.readEnum());
      msg.setSteeringEnableControl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Steering_control_a2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Steering_control_a2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Steering_control_a2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Steering_control_a2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Steering_control_a2.Steering_enable_controlType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Steering_control_a2.Steering_enable_controlType = {
  STEERING_ENABLE_CONTROL_STEERING_MANUALCONTROL: 0,
  STEERING_ENABLE_CONTROL_STEERING_AUTOCONTROL: 1
};

/**
 * optional double steering_target = 1;
 * @return {number}
 */
proto.apollo.canbus.Steering_control_a2.prototype.getSteeringTarget = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Steering_control_a2} returns this
 */
proto.apollo.canbus.Steering_control_a2.prototype.setSteeringTarget = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Steering_control_a2} returns this
 */
proto.apollo.canbus.Steering_control_a2.prototype.clearSteeringTarget = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Steering_control_a2.prototype.hasSteeringTarget = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Steering_enable_controlType steering_enable_control = 2;
 * @return {!proto.apollo.canbus.Steering_control_a2.Steering_enable_controlType}
 */
proto.apollo.canbus.Steering_control_a2.prototype.getSteeringEnableControl = function() {
  return /** @type {!proto.apollo.canbus.Steering_control_a2.Steering_enable_controlType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.apollo.canbus.Steering_control_a2.Steering_enable_controlType} value
 * @return {!proto.apollo.canbus.Steering_control_a2} returns this
 */
proto.apollo.canbus.Steering_control_a2.prototype.setSteeringEnableControl = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Steering_control_a2} returns this
 */
proto.apollo.canbus.Steering_control_a2.prototype.clearSteeringEnableControl = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Steering_control_a2.prototype.hasSteeringEnableControl = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Parking_control_a5.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Parking_control_a5.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Parking_control_a5} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Parking_control_a5.toObject = function(includeInstance, msg) {
  var f, obj = {
    parkingTarget: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    parkingEnableControl: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Parking_control_a5 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Parking_control_a5.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.parkingTarget;

  /** @type {?|undefined} */
  this.parkingEnableControl;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Parking_control_a5.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Parking_control_a5}
 */
proto.apollo.canbus.Parking_control_a5.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Parking_control_a5();
  obj.parkingTarget != null && jspb.Message.setField(msg, 1, obj.parkingTarget);
  obj.parkingEnableControl != null && jspb.Message.setField(msg, 2, obj.parkingEnableControl);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Parking_control_a5}
 */
proto.apollo.canbus.Parking_control_a5.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Parking_control_a5;
  return proto.apollo.canbus.Parking_control_a5.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Parking_control_a5} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Parking_control_a5}
 */
proto.apollo.canbus.Parking_control_a5.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.canbus.Parking_control_a5.Parking_targetType} */ (reader.readEnum());
      msg.setParkingTarget(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.canbus.Parking_control_a5.Parking_enable_controlType} */ (reader.readEnum());
      msg.setParkingEnableControl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Parking_control_a5.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Parking_control_a5.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Parking_control_a5} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Parking_control_a5.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.canbus.Parking_control_a5.Parking_targetType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Parking_control_a5.Parking_enable_controlType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Parking_control_a5.Parking_targetType = {
  PARKING_TARGET_RELEASE: 0,
  PARKING_TARGET_PARKING_TRIGGER: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Parking_control_a5.Parking_enable_controlType = {
  PARKING_ENABLE_CONTROL_PARKING_MANUALCONTROL: 0,
  PARKING_ENABLE_CONTROL_PARKING_AUTOCONTROL: 1
};

/**
 * optional Parking_targetType parking_target = 1;
 * @return {!proto.apollo.canbus.Parking_control_a5.Parking_targetType}
 */
proto.apollo.canbus.Parking_control_a5.prototype.getParkingTarget = function() {
  return /** @type {!proto.apollo.canbus.Parking_control_a5.Parking_targetType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.canbus.Parking_control_a5.Parking_targetType} value
 * @return {!proto.apollo.canbus.Parking_control_a5} returns this
 */
proto.apollo.canbus.Parking_control_a5.prototype.setParkingTarget = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Parking_control_a5} returns this
 */
proto.apollo.canbus.Parking_control_a5.prototype.clearParkingTarget = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Parking_control_a5.prototype.hasParkingTarget = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Parking_enable_controlType parking_enable_control = 2;
 * @return {!proto.apollo.canbus.Parking_control_a5.Parking_enable_controlType}
 */
proto.apollo.canbus.Parking_control_a5.prototype.getParkingEnableControl = function() {
  return /** @type {!proto.apollo.canbus.Parking_control_a5.Parking_enable_controlType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.apollo.canbus.Parking_control_a5.Parking_enable_controlType} value
 * @return {!proto.apollo.canbus.Parking_control_a5} returns this
 */
proto.apollo.canbus.Parking_control_a5.prototype.setParkingEnableControl = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Parking_control_a5} returns this
 */
proto.apollo.canbus.Parking_control_a5.prototype.clearParkingEnableControl = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Parking_control_a5.prototype.hasParkingEnableControl = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Brake_control_a4.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Brake_control_a4.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Brake_control_a4} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Brake_control_a4.toObject = function(includeInstance, msg) {
  var f, obj = {
    brakeTorque: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    brakeEnableControl: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Brake_control_a4 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Brake_control_a4.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.brakeTorque;

  /** @type {?|undefined} */
  this.brakeEnableControl;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Brake_control_a4.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Brake_control_a4}
 */
proto.apollo.canbus.Brake_control_a4.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Brake_control_a4();
  obj.brakeTorque != null && jspb.Message.setField(msg, 1, obj.brakeTorque);
  obj.brakeEnableControl != null && jspb.Message.setField(msg, 2, obj.brakeEnableControl);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Brake_control_a4}
 */
proto.apollo.canbus.Brake_control_a4.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Brake_control_a4;
  return proto.apollo.canbus.Brake_control_a4.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Brake_control_a4} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Brake_control_a4}
 */
proto.apollo.canbus.Brake_control_a4.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBrakeTorque(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.canbus.Brake_control_a4.Brake_enable_controlType} */ (reader.readEnum());
      msg.setBrakeEnableControl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Brake_control_a4.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Brake_control_a4.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Brake_control_a4} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Brake_control_a4.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Brake_control_a4.Brake_enable_controlType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Brake_control_a4.Brake_enable_controlType = {
  BRAKE_ENABLE_CONTROL_BRAKE_MANUAL: 0,
  BRAKE_ENABLE_CONTROL_BRAKE_AUTO: 1
};

/**
 * optional double brake_torque = 1;
 * @return {number}
 */
proto.apollo.canbus.Brake_control_a4.prototype.getBrakeTorque = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Brake_control_a4} returns this
 */
proto.apollo.canbus.Brake_control_a4.prototype.setBrakeTorque = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Brake_control_a4} returns this
 */
proto.apollo.canbus.Brake_control_a4.prototype.clearBrakeTorque = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Brake_control_a4.prototype.hasBrakeTorque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Brake_enable_controlType brake_enable_control = 2;
 * @return {!proto.apollo.canbus.Brake_control_a4.Brake_enable_controlType}
 */
proto.apollo.canbus.Brake_control_a4.prototype.getBrakeEnableControl = function() {
  return /** @type {!proto.apollo.canbus.Brake_control_a4.Brake_enable_controlType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.apollo.canbus.Brake_control_a4.Brake_enable_controlType} value
 * @return {!proto.apollo.canbus.Brake_control_a4} returns this
 */
proto.apollo.canbus.Brake_control_a4.prototype.setBrakeEnableControl = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Brake_control_a4} returns this
 */
proto.apollo.canbus.Brake_control_a4.prototype.clearBrakeEnableControl = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Brake_control_a4.prototype.hasBrakeEnableControl = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Enable_state_feedback_c3.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Enable_state_feedback_c3.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Enable_state_feedback_c3} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Enable_state_feedback_c3.toObject = function(includeInstance, msg) {
  var f, obj = {
    parkingEnableState: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    steeringEnableState: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    gearEnableActual: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    drivenEnableState: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    brakeEnableState: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Enable_state_feedback_c3 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Enable_state_feedback_c3.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.parkingEnableState;

  /** @type {?|undefined} */
  this.steeringEnableState;

  /** @type {?|undefined} */
  this.gearEnableActual;

  /** @type {?|undefined} */
  this.drivenEnableState;

  /** @type {?|undefined} */
  this.brakeEnableState;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Enable_state_feedback_c3.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Enable_state_feedback_c3}
 */
proto.apollo.canbus.Enable_state_feedback_c3.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Enable_state_feedback_c3();
  obj.parkingEnableState != null && jspb.Message.setField(msg, 1, obj.parkingEnableState);
  obj.steeringEnableState != null && jspb.Message.setField(msg, 2, obj.steeringEnableState);
  obj.gearEnableActual != null && jspb.Message.setField(msg, 3, obj.gearEnableActual);
  obj.drivenEnableState != null && jspb.Message.setField(msg, 4, obj.drivenEnableState);
  obj.brakeEnableState != null && jspb.Message.setField(msg, 5, obj.brakeEnableState);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Enable_state_feedback_c3}
 */
proto.apollo.canbus.Enable_state_feedback_c3.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Enable_state_feedback_c3;
  return proto.apollo.canbus.Enable_state_feedback_c3.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Enable_state_feedback_c3} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Enable_state_feedback_c3}
 */
proto.apollo.canbus.Enable_state_feedback_c3.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.canbus.Enable_state_feedback_c3.Parking_enable_stateType} */ (reader.readEnum());
      msg.setParkingEnableState(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.canbus.Enable_state_feedback_c3.Steering_enable_stateType} */ (reader.readEnum());
      msg.setSteeringEnableState(value);
      break;
    case 3:
      var value = /** @type {!proto.apollo.canbus.Enable_state_feedback_c3.Gear_enable_actualType} */ (reader.readEnum());
      msg.setGearEnableActual(value);
      break;
    case 4:
      var value = /** @type {!proto.apollo.canbus.Enable_state_feedback_c3.Driven_enable_stateType} */ (reader.readEnum());
      msg.setDrivenEnableState(value);
      break;
    case 5:
      var value = /** @type {!proto.apollo.canbus.Enable_state_feedback_c3.Brake_enable_stateType} */ (reader.readEnum());
      msg.setBrakeEnableState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Enable_state_feedback_c3.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Enable_state_feedback_c3.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Enable_state_feedback_c3} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Enable_state_feedback_c3.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.canbus.Enable_state_feedback_c3.Parking_enable_stateType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Enable_state_feedback_c3.Steering_enable_stateType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Enable_state_feedback_c3.Gear_enable_actualType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Enable_state_feedback_c3.Driven_enable_stateType} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Enable_state_feedback_c3.Brake_enable_stateType} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Enable_state_feedback_c3.Parking_enable_stateType = {
  PARKING_ENABLE_STATE_PARKING_MANUALCONTROL: 0,
  PARKING_ENABLE_STATE_PARKING_AUTOCONTROL: 1,
  PARKING_ENABLE_STATE_PARKING_TAKEOVER: 2
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Enable_state_feedback_c3.Steering_enable_stateType = {
  STEERING_ENABLE_STATE_STEERING_MANUALCONTROL: 0,
  STEERING_ENABLE_STATE_STEERING_AUTOCONTROL: 1,
  STEERING_ENABLE_STATE_STEERING_MANUAL_TAKEOVER: 2
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Enable_state_feedback_c3.Gear_enable_actualType = {
  GEAR_ENABLE_ACTUAL_GEAR_MANUALCONTROL: 0,
  GEAR_ENABLE_ACTUAL_GEAR_AUTOCONTROL: 1,
  GEAR_ENABLE_ACTUAL_GEAR_MANUAL_TAKEOVER: 2
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Enable_state_feedback_c3.Driven_enable_stateType = {
  DRIVEN_ENABLE_STATE_DRIVE_MANUAL: 0,
  DRIVEN_ENABLE_STATE_DRIVE_AUTO: 1,
  DRIVEN_ENABLE_STATE_DRIVE_TAKEOVER: 2
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Enable_state_feedback_c3.Brake_enable_stateType = {
  BRAKE_ENABLE_STATE_BRAKE_MANUAL: 0,
  BRAKE_ENABLE_STATE_BRAKE_AUTO: 1,
  BRAKE_ENABLE_STATE_BRAKE_TAKEOVER: 2
};

/**
 * optional Parking_enable_stateType parking_enable_state = 1;
 * @return {!proto.apollo.canbus.Enable_state_feedback_c3.Parking_enable_stateType}
 */
proto.apollo.canbus.Enable_state_feedback_c3.prototype.getParkingEnableState = function() {
  return /** @type {!proto.apollo.canbus.Enable_state_feedback_c3.Parking_enable_stateType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.canbus.Enable_state_feedback_c3.Parking_enable_stateType} value
 * @return {!proto.apollo.canbus.Enable_state_feedback_c3} returns this
 */
proto.apollo.canbus.Enable_state_feedback_c3.prototype.setParkingEnableState = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Enable_state_feedback_c3} returns this
 */
proto.apollo.canbus.Enable_state_feedback_c3.prototype.clearParkingEnableState = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Enable_state_feedback_c3.prototype.hasParkingEnableState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Steering_enable_stateType steering_enable_state = 2;
 * @return {!proto.apollo.canbus.Enable_state_feedback_c3.Steering_enable_stateType}
 */
proto.apollo.canbus.Enable_state_feedback_c3.prototype.getSteeringEnableState = function() {
  return /** @type {!proto.apollo.canbus.Enable_state_feedback_c3.Steering_enable_stateType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.apollo.canbus.Enable_state_feedback_c3.Steering_enable_stateType} value
 * @return {!proto.apollo.canbus.Enable_state_feedback_c3} returns this
 */
proto.apollo.canbus.Enable_state_feedback_c3.prototype.setSteeringEnableState = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Enable_state_feedback_c3} returns this
 */
proto.apollo.canbus.Enable_state_feedback_c3.prototype.clearSteeringEnableState = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Enable_state_feedback_c3.prototype.hasSteeringEnableState = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Gear_enable_actualType gear_enable_actual = 3;
 * @return {!proto.apollo.canbus.Enable_state_feedback_c3.Gear_enable_actualType}
 */
proto.apollo.canbus.Enable_state_feedback_c3.prototype.getGearEnableActual = function() {
  return /** @type {!proto.apollo.canbus.Enable_state_feedback_c3.Gear_enable_actualType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.apollo.canbus.Enable_state_feedback_c3.Gear_enable_actualType} value
 * @return {!proto.apollo.canbus.Enable_state_feedback_c3} returns this
 */
proto.apollo.canbus.Enable_state_feedback_c3.prototype.setGearEnableActual = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Enable_state_feedback_c3} returns this
 */
proto.apollo.canbus.Enable_state_feedback_c3.prototype.clearGearEnableActual = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Enable_state_feedback_c3.prototype.hasGearEnableActual = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Driven_enable_stateType driven_enable_state = 4;
 * @return {!proto.apollo.canbus.Enable_state_feedback_c3.Driven_enable_stateType}
 */
proto.apollo.canbus.Enable_state_feedback_c3.prototype.getDrivenEnableState = function() {
  return /** @type {!proto.apollo.canbus.Enable_state_feedback_c3.Driven_enable_stateType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.apollo.canbus.Enable_state_feedback_c3.Driven_enable_stateType} value
 * @return {!proto.apollo.canbus.Enable_state_feedback_c3} returns this
 */
proto.apollo.canbus.Enable_state_feedback_c3.prototype.setDrivenEnableState = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Enable_state_feedback_c3} returns this
 */
proto.apollo.canbus.Enable_state_feedback_c3.prototype.clearDrivenEnableState = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Enable_state_feedback_c3.prototype.hasDrivenEnableState = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Brake_enable_stateType brake_enable_state = 5;
 * @return {!proto.apollo.canbus.Enable_state_feedback_c3.Brake_enable_stateType}
 */
proto.apollo.canbus.Enable_state_feedback_c3.prototype.getBrakeEnableState = function() {
  return /** @type {!proto.apollo.canbus.Enable_state_feedback_c3.Brake_enable_stateType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.apollo.canbus.Enable_state_feedback_c3.Brake_enable_stateType} value
 * @return {!proto.apollo.canbus.Enable_state_feedback_c3} returns this
 */
proto.apollo.canbus.Enable_state_feedback_c3.prototype.setBrakeEnableState = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Enable_state_feedback_c3} returns this
 */
proto.apollo.canbus.Enable_state_feedback_c3.prototype.clearBrakeEnableState = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Enable_state_feedback_c3.prototype.hasBrakeEnableState = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Vehicle_state_feedback_c1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Vehicle_state_feedback_c1} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.toObject = function(includeInstance, msg) {
  var f, obj = {
    parkingActual: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    brakeTorqueFeedback: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    gearStateActual: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    steeringActual: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    speed: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Vehicle_state_feedback_c1 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.parkingActual;

  /** @type {?|undefined} */
  this.brakeTorqueFeedback;

  /** @type {?|undefined} */
  this.gearStateActual;

  /** @type {?|undefined} */
  this.steeringActual;

  /** @type {?|undefined} */
  this.speed;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Vehicle_state_feedback_c1.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Vehicle_state_feedback_c1}
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Vehicle_state_feedback_c1();
  obj.parkingActual != null && jspb.Message.setField(msg, 1, obj.parkingActual);
  obj.brakeTorqueFeedback != null && jspb.Message.setField(msg, 2, obj.brakeTorqueFeedback);
  obj.gearStateActual != null && jspb.Message.setField(msg, 3, obj.gearStateActual);
  obj.steeringActual != null && jspb.Message.setField(msg, 4, obj.steeringActual);
  obj.speed != null && jspb.Message.setField(msg, 5, obj.speed);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Vehicle_state_feedback_c1}
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Vehicle_state_feedback_c1;
  return proto.apollo.canbus.Vehicle_state_feedback_c1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Vehicle_state_feedback_c1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Vehicle_state_feedback_c1}
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.canbus.Vehicle_state_feedback_c1.Parking_actualType} */ (reader.readEnum());
      msg.setParkingActual(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBrakeTorqueFeedback(value);
      break;
    case 3:
      var value = /** @type {!proto.apollo.canbus.Vehicle_state_feedback_c1.Gear_state_actualType} */ (reader.readEnum());
      msg.setGearStateActual(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSteeringActual(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSpeed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Vehicle_state_feedback_c1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Vehicle_state_feedback_c1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.canbus.Vehicle_state_feedback_c1.Parking_actualType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Vehicle_state_feedback_c1.Gear_state_actualType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.Parking_actualType = {
  PARKING_ACTUAL_RELEASE: 0,
  PARKING_ACTUAL_PARKING_TRIGGER: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.Gear_state_actualType = {
  GEAR_STATE_ACTUAL_P: 1,
  GEAR_STATE_ACTUAL_N: 2,
  GEAR_STATE_ACTUAL_D: 3,
  GEAR_STATE_ACTUAL_R: 4,
  GEAR_STATE_ACTUAL_INVALID: 5
};

/**
 * optional Parking_actualType parking_actual = 1;
 * @return {!proto.apollo.canbus.Vehicle_state_feedback_c1.Parking_actualType}
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.prototype.getParkingActual = function() {
  return /** @type {!proto.apollo.canbus.Vehicle_state_feedback_c1.Parking_actualType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.canbus.Vehicle_state_feedback_c1.Parking_actualType} value
 * @return {!proto.apollo.canbus.Vehicle_state_feedback_c1} returns this
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.prototype.setParkingActual = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Vehicle_state_feedback_c1} returns this
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.prototype.clearParkingActual = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.prototype.hasParkingActual = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double brake_torque_feedback = 2;
 * @return {number}
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.prototype.getBrakeTorqueFeedback = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Vehicle_state_feedback_c1} returns this
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.prototype.setBrakeTorqueFeedback = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Vehicle_state_feedback_c1} returns this
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.prototype.clearBrakeTorqueFeedback = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.prototype.hasBrakeTorqueFeedback = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Gear_state_actualType gear_state_actual = 3;
 * @return {!proto.apollo.canbus.Vehicle_state_feedback_c1.Gear_state_actualType}
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.prototype.getGearStateActual = function() {
  return /** @type {!proto.apollo.canbus.Vehicle_state_feedback_c1.Gear_state_actualType} */ (jspb.Message.getFieldWithDefault(this, 3, 1));
};


/**
 * @param {!proto.apollo.canbus.Vehicle_state_feedback_c1.Gear_state_actualType} value
 * @return {!proto.apollo.canbus.Vehicle_state_feedback_c1} returns this
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.prototype.setGearStateActual = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Vehicle_state_feedback_c1} returns this
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.prototype.clearGearStateActual = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.prototype.hasGearStateActual = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double steering_actual = 4;
 * @return {number}
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.prototype.getSteeringActual = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Vehicle_state_feedback_c1} returns this
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.prototype.setSteeringActual = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Vehicle_state_feedback_c1} returns this
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.prototype.clearSteeringActual = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.prototype.hasSteeringActual = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double speed = 5;
 * @return {number}
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.prototype.getSpeed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Vehicle_state_feedback_c1} returns this
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.prototype.setSpeed = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Vehicle_state_feedback_c1} returns this
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.prototype.clearSpeed = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Vehicle_state_feedback_c1.prototype.hasSpeed = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Error_state_e1.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Error_state_e1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Error_state_e1} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Error_state_e1.toObject = function(includeInstance, msg) {
  var f, obj = {
    brakeErrorCode: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    drivenErrorCode: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    steeringErrorCode: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    parkingErrorCode: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    gearErrorMsg: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Error_state_e1 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Error_state_e1.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.brakeErrorCode;

  /** @type {?|undefined} */
  this.drivenErrorCode;

  /** @type {?|undefined} */
  this.steeringErrorCode;

  /** @type {?|undefined} */
  this.parkingErrorCode;

  /** @type {?|undefined} */
  this.gearErrorMsg;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Error_state_e1.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Error_state_e1}
 */
proto.apollo.canbus.Error_state_e1.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Error_state_e1();
  obj.brakeErrorCode != null && jspb.Message.setField(msg, 1, obj.brakeErrorCode);
  obj.drivenErrorCode != null && jspb.Message.setField(msg, 2, obj.drivenErrorCode);
  obj.steeringErrorCode != null && jspb.Message.setField(msg, 3, obj.steeringErrorCode);
  obj.parkingErrorCode != null && jspb.Message.setField(msg, 4, obj.parkingErrorCode);
  obj.gearErrorMsg != null && jspb.Message.setField(msg, 5, obj.gearErrorMsg);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Error_state_e1}
 */
proto.apollo.canbus.Error_state_e1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Error_state_e1;
  return proto.apollo.canbus.Error_state_e1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Error_state_e1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Error_state_e1}
 */
proto.apollo.canbus.Error_state_e1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.canbus.Error_state_e1.Brake_error_codeType} */ (reader.readEnum());
      msg.setBrakeErrorCode(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.canbus.Error_state_e1.Driven_error_codeType} */ (reader.readEnum());
      msg.setDrivenErrorCode(value);
      break;
    case 3:
      var value = /** @type {!proto.apollo.canbus.Error_state_e1.Steering_error_codeType} */ (reader.readEnum());
      msg.setSteeringErrorCode(value);
      break;
    case 4:
      var value = /** @type {!proto.apollo.canbus.Error_state_e1.Parking_error_codeType} */ (reader.readEnum());
      msg.setParkingErrorCode(value);
      break;
    case 5:
      var value = /** @type {!proto.apollo.canbus.Error_state_e1.Gear_error_msgType} */ (reader.readEnum());
      msg.setGearErrorMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Error_state_e1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Error_state_e1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Error_state_e1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Error_state_e1.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.canbus.Error_state_e1.Brake_error_codeType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Error_state_e1.Driven_error_codeType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Error_state_e1.Steering_error_codeType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Error_state_e1.Parking_error_codeType} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Error_state_e1.Gear_error_msgType} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Error_state_e1.Brake_error_codeType = {
  BRAKE_ERROR_CODE_NO_ERROR: 0,
  BRAKE_ERROR_CODE_ERROR: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Error_state_e1.Driven_error_codeType = {
  DRIVEN_ERROR_CODE_NO_ERROR: 0,
  DRIVEN_ERROR_CODE_ERROR: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Error_state_e1.Steering_error_codeType = {
  STEERING_ERROR_CODE_NO_ERROR: 0,
  STEERING_ERROR_CODE_ERROR: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Error_state_e1.Parking_error_codeType = {
  PARKING_ERROR_CODE_NO_ERROR: 0,
  PARKING_ERROR_CODE_ERROR: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Error_state_e1.Gear_error_msgType = {
  GEAR_ERROR_MSG_NO_ERROR: 0,
  GEAR_ERROR_MSG_ERROR: 1
};

/**
 * optional Brake_error_codeType brake_error_code = 1;
 * @return {!proto.apollo.canbus.Error_state_e1.Brake_error_codeType}
 */
proto.apollo.canbus.Error_state_e1.prototype.getBrakeErrorCode = function() {
  return /** @type {!proto.apollo.canbus.Error_state_e1.Brake_error_codeType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.canbus.Error_state_e1.Brake_error_codeType} value
 * @return {!proto.apollo.canbus.Error_state_e1} returns this
 */
proto.apollo.canbus.Error_state_e1.prototype.setBrakeErrorCode = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Error_state_e1} returns this
 */
proto.apollo.canbus.Error_state_e1.prototype.clearBrakeErrorCode = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Error_state_e1.prototype.hasBrakeErrorCode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Driven_error_codeType driven_error_code = 2;
 * @return {!proto.apollo.canbus.Error_state_e1.Driven_error_codeType}
 */
proto.apollo.canbus.Error_state_e1.prototype.getDrivenErrorCode = function() {
  return /** @type {!proto.apollo.canbus.Error_state_e1.Driven_error_codeType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.apollo.canbus.Error_state_e1.Driven_error_codeType} value
 * @return {!proto.apollo.canbus.Error_state_e1} returns this
 */
proto.apollo.canbus.Error_state_e1.prototype.setDrivenErrorCode = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Error_state_e1} returns this
 */
proto.apollo.canbus.Error_state_e1.prototype.clearDrivenErrorCode = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Error_state_e1.prototype.hasDrivenErrorCode = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Steering_error_codeType steering_error_code = 3;
 * @return {!proto.apollo.canbus.Error_state_e1.Steering_error_codeType}
 */
proto.apollo.canbus.Error_state_e1.prototype.getSteeringErrorCode = function() {
  return /** @type {!proto.apollo.canbus.Error_state_e1.Steering_error_codeType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.apollo.canbus.Error_state_e1.Steering_error_codeType} value
 * @return {!proto.apollo.canbus.Error_state_e1} returns this
 */
proto.apollo.canbus.Error_state_e1.prototype.setSteeringErrorCode = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Error_state_e1} returns this
 */
proto.apollo.canbus.Error_state_e1.prototype.clearSteeringErrorCode = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Error_state_e1.prototype.hasSteeringErrorCode = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Parking_error_codeType parking_error_code = 4;
 * @return {!proto.apollo.canbus.Error_state_e1.Parking_error_codeType}
 */
proto.apollo.canbus.Error_state_e1.prototype.getParkingErrorCode = function() {
  return /** @type {!proto.apollo.canbus.Error_state_e1.Parking_error_codeType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.apollo.canbus.Error_state_e1.Parking_error_codeType} value
 * @return {!proto.apollo.canbus.Error_state_e1} returns this
 */
proto.apollo.canbus.Error_state_e1.prototype.setParkingErrorCode = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Error_state_e1} returns this
 */
proto.apollo.canbus.Error_state_e1.prototype.clearParkingErrorCode = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Error_state_e1.prototype.hasParkingErrorCode = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Gear_error_msgType gear_error_msg = 5;
 * @return {!proto.apollo.canbus.Error_state_e1.Gear_error_msgType}
 */
proto.apollo.canbus.Error_state_e1.prototype.getGearErrorMsg = function() {
  return /** @type {!proto.apollo.canbus.Error_state_e1.Gear_error_msgType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.apollo.canbus.Error_state_e1.Gear_error_msgType} value
 * @return {!proto.apollo.canbus.Error_state_e1} returns this
 */
proto.apollo.canbus.Error_state_e1.prototype.setGearErrorMsg = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Error_state_e1} returns this
 */
proto.apollo.canbus.Error_state_e1.prototype.clearGearErrorMsg = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Error_state_e1.prototype.hasGearErrorMsg = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Vehicle_state_feedback_2_c4.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Vehicle_state_feedback_2_c4.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Vehicle_state_feedback_2_c4} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Vehicle_state_feedback_2_c4.toObject = function(includeInstance, msg) {
  var f, obj = {
    motorSpeed: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    drivenTorqueFeedback: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Vehicle_state_feedback_2_c4 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Vehicle_state_feedback_2_c4.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.motorSpeed;

  /** @type {?|undefined} */
  this.drivenTorqueFeedback;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Vehicle_state_feedback_2_c4.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Vehicle_state_feedback_2_c4}
 */
proto.apollo.canbus.Vehicle_state_feedback_2_c4.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Vehicle_state_feedback_2_c4();
  obj.motorSpeed != null && jspb.Message.setField(msg, 1, obj.motorSpeed);
  obj.drivenTorqueFeedback != null && jspb.Message.setField(msg, 2, obj.drivenTorqueFeedback);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Vehicle_state_feedback_2_c4}
 */
proto.apollo.canbus.Vehicle_state_feedback_2_c4.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Vehicle_state_feedback_2_c4;
  return proto.apollo.canbus.Vehicle_state_feedback_2_c4.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Vehicle_state_feedback_2_c4} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Vehicle_state_feedback_2_c4}
 */
proto.apollo.canbus.Vehicle_state_feedback_2_c4.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMotorSpeed(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDrivenTorqueFeedback(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Vehicle_state_feedback_2_c4.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Vehicle_state_feedback_2_c4.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Vehicle_state_feedback_2_c4} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Vehicle_state_feedback_2_c4.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional int32 motor_speed = 1;
 * @return {number}
 */
proto.apollo.canbus.Vehicle_state_feedback_2_c4.prototype.getMotorSpeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Vehicle_state_feedback_2_c4} returns this
 */
proto.apollo.canbus.Vehicle_state_feedback_2_c4.prototype.setMotorSpeed = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Vehicle_state_feedback_2_c4} returns this
 */
proto.apollo.canbus.Vehicle_state_feedback_2_c4.prototype.clearMotorSpeed = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Vehicle_state_feedback_2_c4.prototype.hasMotorSpeed = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double driven_torque_feedback = 2;
 * @return {number}
 */
proto.apollo.canbus.Vehicle_state_feedback_2_c4.prototype.getDrivenTorqueFeedback = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Vehicle_state_feedback_2_c4} returns this
 */
proto.apollo.canbus.Vehicle_state_feedback_2_c4.prototype.setDrivenTorqueFeedback = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Vehicle_state_feedback_2_c4} returns this
 */
proto.apollo.canbus.Vehicle_state_feedback_2_c4.prototype.clearDrivenTorqueFeedback = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Vehicle_state_feedback_2_c4.prototype.hasDrivenTorqueFeedback = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Zhongyun.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Zhongyun.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Zhongyun} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Zhongyun.toObject = function(includeInstance, msg) {
  var f, obj = {
    gearControlA1: (f = msg.getGearControlA1()) && proto.apollo.canbus.Gear_control_a1.toObject(includeInstance, f),
    torqueControlA3: (f = msg.getTorqueControlA3()) && proto.apollo.canbus.Torque_control_a3.toObject(includeInstance, f),
    steeringControlA2: (f = msg.getSteeringControlA2()) && proto.apollo.canbus.Steering_control_a2.toObject(includeInstance, f),
    parkingControlA5: (f = msg.getParkingControlA5()) && proto.apollo.canbus.Parking_control_a5.toObject(includeInstance, f),
    brakeControlA4: (f = msg.getBrakeControlA4()) && proto.apollo.canbus.Brake_control_a4.toObject(includeInstance, f),
    enableStateFeedbackC3: (f = msg.getEnableStateFeedbackC3()) && proto.apollo.canbus.Enable_state_feedback_c3.toObject(includeInstance, f),
    vehicleStateFeedbackC1: (f = msg.getVehicleStateFeedbackC1()) && proto.apollo.canbus.Vehicle_state_feedback_c1.toObject(includeInstance, f),
    errorStateE1: (f = msg.getErrorStateE1()) && proto.apollo.canbus.Error_state_e1.toObject(includeInstance, f),
    vehicleStateFeedback2C4: (f = msg.getVehicleStateFeedback2C4()) && proto.apollo.canbus.Vehicle_state_feedback_2_c4.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Zhongyun as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Zhongyun.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.gearControlA1;

  /** @type {?|undefined} */
  this.torqueControlA3;

  /** @type {?|undefined} */
  this.steeringControlA2;

  /** @type {?|undefined} */
  this.parkingControlA5;

  /** @type {?|undefined} */
  this.brakeControlA4;

  /** @type {?|undefined} */
  this.enableStateFeedbackC3;

  /** @type {?|undefined} */
  this.vehicleStateFeedbackC1;

  /** @type {?|undefined} */
  this.errorStateE1;

  /** @type {?|undefined} */
  this.vehicleStateFeedback2C4;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Zhongyun.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Zhongyun}
 */
proto.apollo.canbus.Zhongyun.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Zhongyun();
  obj.gearControlA1 && jspb.Message.setWrapperField(
      msg, 1, proto.apollo.canbus.Gear_control_a1.fromObject(obj.gearControlA1));
  obj.torqueControlA3 && jspb.Message.setWrapperField(
      msg, 2, proto.apollo.canbus.Torque_control_a3.fromObject(obj.torqueControlA3));
  obj.steeringControlA2 && jspb.Message.setWrapperField(
      msg, 3, proto.apollo.canbus.Steering_control_a2.fromObject(obj.steeringControlA2));
  obj.parkingControlA5 && jspb.Message.setWrapperField(
      msg, 4, proto.apollo.canbus.Parking_control_a5.fromObject(obj.parkingControlA5));
  obj.brakeControlA4 && jspb.Message.setWrapperField(
      msg, 5, proto.apollo.canbus.Brake_control_a4.fromObject(obj.brakeControlA4));
  obj.enableStateFeedbackC3 && jspb.Message.setWrapperField(
      msg, 6, proto.apollo.canbus.Enable_state_feedback_c3.fromObject(obj.enableStateFeedbackC3));
  obj.vehicleStateFeedbackC1 && jspb.Message.setWrapperField(
      msg, 7, proto.apollo.canbus.Vehicle_state_feedback_c1.fromObject(obj.vehicleStateFeedbackC1));
  obj.errorStateE1 && jspb.Message.setWrapperField(
      msg, 8, proto.apollo.canbus.Error_state_e1.fromObject(obj.errorStateE1));
  obj.vehicleStateFeedback2C4 && jspb.Message.setWrapperField(
      msg, 9, proto.apollo.canbus.Vehicle_state_feedback_2_c4.fromObject(obj.vehicleStateFeedback2C4));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Zhongyun}
 */
proto.apollo.canbus.Zhongyun.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Zhongyun;
  return proto.apollo.canbus.Zhongyun.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Zhongyun} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Zhongyun}
 */
proto.apollo.canbus.Zhongyun.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.apollo.canbus.Gear_control_a1;
      reader.readMessage(value,proto.apollo.canbus.Gear_control_a1.deserializeBinaryFromReader);
      msg.setGearControlA1(value);
      break;
    case 2:
      var value = new proto.apollo.canbus.Torque_control_a3;
      reader.readMessage(value,proto.apollo.canbus.Torque_control_a3.deserializeBinaryFromReader);
      msg.setTorqueControlA3(value);
      break;
    case 3:
      var value = new proto.apollo.canbus.Steering_control_a2;
      reader.readMessage(value,proto.apollo.canbus.Steering_control_a2.deserializeBinaryFromReader);
      msg.setSteeringControlA2(value);
      break;
    case 4:
      var value = new proto.apollo.canbus.Parking_control_a5;
      reader.readMessage(value,proto.apollo.canbus.Parking_control_a5.deserializeBinaryFromReader);
      msg.setParkingControlA5(value);
      break;
    case 5:
      var value = new proto.apollo.canbus.Brake_control_a4;
      reader.readMessage(value,proto.apollo.canbus.Brake_control_a4.deserializeBinaryFromReader);
      msg.setBrakeControlA4(value);
      break;
    case 6:
      var value = new proto.apollo.canbus.Enable_state_feedback_c3;
      reader.readMessage(value,proto.apollo.canbus.Enable_state_feedback_c3.deserializeBinaryFromReader);
      msg.setEnableStateFeedbackC3(value);
      break;
    case 7:
      var value = new proto.apollo.canbus.Vehicle_state_feedback_c1;
      reader.readMessage(value,proto.apollo.canbus.Vehicle_state_feedback_c1.deserializeBinaryFromReader);
      msg.setVehicleStateFeedbackC1(value);
      break;
    case 8:
      var value = new proto.apollo.canbus.Error_state_e1;
      reader.readMessage(value,proto.apollo.canbus.Error_state_e1.deserializeBinaryFromReader);
      msg.setErrorStateE1(value);
      break;
    case 9:
      var value = new proto.apollo.canbus.Vehicle_state_feedback_2_c4;
      reader.readMessage(value,proto.apollo.canbus.Vehicle_state_feedback_2_c4.deserializeBinaryFromReader);
      msg.setVehicleStateFeedback2C4(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Zhongyun.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Zhongyun.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Zhongyun} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Zhongyun.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGearControlA1();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.apollo.canbus.Gear_control_a1.serializeBinaryToWriter
    );
  }
  f = message.getTorqueControlA3();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.apollo.canbus.Torque_control_a3.serializeBinaryToWriter
    );
  }
  f = message.getSteeringControlA2();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.apollo.canbus.Steering_control_a2.serializeBinaryToWriter
    );
  }
  f = message.getParkingControlA5();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.apollo.canbus.Parking_control_a5.serializeBinaryToWriter
    );
  }
  f = message.getBrakeControlA4();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.apollo.canbus.Brake_control_a4.serializeBinaryToWriter
    );
  }
  f = message.getEnableStateFeedbackC3();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.apollo.canbus.Enable_state_feedback_c3.serializeBinaryToWriter
    );
  }
  f = message.getVehicleStateFeedbackC1();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.apollo.canbus.Vehicle_state_feedback_c1.serializeBinaryToWriter
    );
  }
  f = message.getErrorStateE1();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.apollo.canbus.Error_state_e1.serializeBinaryToWriter
    );
  }
  f = message.getVehicleStateFeedback2C4();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.apollo.canbus.Vehicle_state_feedback_2_c4.serializeBinaryToWriter
    );
  }
};


/**
 * optional Gear_control_a1 gear_control_a1 = 1;
 * @return {?proto.apollo.canbus.Gear_control_a1}
 */
proto.apollo.canbus.Zhongyun.prototype.getGearControlA1 = function() {
  return /** @type{?proto.apollo.canbus.Gear_control_a1} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Gear_control_a1, 1));
};


/**
 * @param {?proto.apollo.canbus.Gear_control_a1|undefined} value
 * @return {!proto.apollo.canbus.Zhongyun} returns this
*/
proto.apollo.canbus.Zhongyun.prototype.setGearControlA1 = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Zhongyun} returns this
 */
proto.apollo.canbus.Zhongyun.prototype.clearGearControlA1 = function() {
  return this.setGearControlA1(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Zhongyun.prototype.hasGearControlA1 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Torque_control_a3 torque_control_a3 = 2;
 * @return {?proto.apollo.canbus.Torque_control_a3}
 */
proto.apollo.canbus.Zhongyun.prototype.getTorqueControlA3 = function() {
  return /** @type{?proto.apollo.canbus.Torque_control_a3} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Torque_control_a3, 2));
};


/**
 * @param {?proto.apollo.canbus.Torque_control_a3|undefined} value
 * @return {!proto.apollo.canbus.Zhongyun} returns this
*/
proto.apollo.canbus.Zhongyun.prototype.setTorqueControlA3 = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Zhongyun} returns this
 */
proto.apollo.canbus.Zhongyun.prototype.clearTorqueControlA3 = function() {
  return this.setTorqueControlA3(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Zhongyun.prototype.hasTorqueControlA3 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Steering_control_a2 steering_control_a2 = 3;
 * @return {?proto.apollo.canbus.Steering_control_a2}
 */
proto.apollo.canbus.Zhongyun.prototype.getSteeringControlA2 = function() {
  return /** @type{?proto.apollo.canbus.Steering_control_a2} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Steering_control_a2, 3));
};


/**
 * @param {?proto.apollo.canbus.Steering_control_a2|undefined} value
 * @return {!proto.apollo.canbus.Zhongyun} returns this
*/
proto.apollo.canbus.Zhongyun.prototype.setSteeringControlA2 = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Zhongyun} returns this
 */
proto.apollo.canbus.Zhongyun.prototype.clearSteeringControlA2 = function() {
  return this.setSteeringControlA2(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Zhongyun.prototype.hasSteeringControlA2 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Parking_control_a5 parking_control_a5 = 4;
 * @return {?proto.apollo.canbus.Parking_control_a5}
 */
proto.apollo.canbus.Zhongyun.prototype.getParkingControlA5 = function() {
  return /** @type{?proto.apollo.canbus.Parking_control_a5} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Parking_control_a5, 4));
};


/**
 * @param {?proto.apollo.canbus.Parking_control_a5|undefined} value
 * @return {!proto.apollo.canbus.Zhongyun} returns this
*/
proto.apollo.canbus.Zhongyun.prototype.setParkingControlA5 = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Zhongyun} returns this
 */
proto.apollo.canbus.Zhongyun.prototype.clearParkingControlA5 = function() {
  return this.setParkingControlA5(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Zhongyun.prototype.hasParkingControlA5 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Brake_control_a4 brake_control_a4 = 5;
 * @return {?proto.apollo.canbus.Brake_control_a4}
 */
proto.apollo.canbus.Zhongyun.prototype.getBrakeControlA4 = function() {
  return /** @type{?proto.apollo.canbus.Brake_control_a4} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Brake_control_a4, 5));
};


/**
 * @param {?proto.apollo.canbus.Brake_control_a4|undefined} value
 * @return {!proto.apollo.canbus.Zhongyun} returns this
*/
proto.apollo.canbus.Zhongyun.prototype.setBrakeControlA4 = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Zhongyun} returns this
 */
proto.apollo.canbus.Zhongyun.prototype.clearBrakeControlA4 = function() {
  return this.setBrakeControlA4(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Zhongyun.prototype.hasBrakeControlA4 = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Enable_state_feedback_c3 enable_state_feedback_c3 = 6;
 * @return {?proto.apollo.canbus.Enable_state_feedback_c3}
 */
proto.apollo.canbus.Zhongyun.prototype.getEnableStateFeedbackC3 = function() {
  return /** @type{?proto.apollo.canbus.Enable_state_feedback_c3} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Enable_state_feedback_c3, 6));
};


/**
 * @param {?proto.apollo.canbus.Enable_state_feedback_c3|undefined} value
 * @return {!proto.apollo.canbus.Zhongyun} returns this
*/
proto.apollo.canbus.Zhongyun.prototype.setEnableStateFeedbackC3 = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Zhongyun} returns this
 */
proto.apollo.canbus.Zhongyun.prototype.clearEnableStateFeedbackC3 = function() {
  return this.setEnableStateFeedbackC3(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Zhongyun.prototype.hasEnableStateFeedbackC3 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Vehicle_state_feedback_c1 vehicle_state_feedback_c1 = 7;
 * @return {?proto.apollo.canbus.Vehicle_state_feedback_c1}
 */
proto.apollo.canbus.Zhongyun.prototype.getVehicleStateFeedbackC1 = function() {
  return /** @type{?proto.apollo.canbus.Vehicle_state_feedback_c1} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Vehicle_state_feedback_c1, 7));
};


/**
 * @param {?proto.apollo.canbus.Vehicle_state_feedback_c1|undefined} value
 * @return {!proto.apollo.canbus.Zhongyun} returns this
*/
proto.apollo.canbus.Zhongyun.prototype.setVehicleStateFeedbackC1 = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Zhongyun} returns this
 */
proto.apollo.canbus.Zhongyun.prototype.clearVehicleStateFeedbackC1 = function() {
  return this.setVehicleStateFeedbackC1(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Zhongyun.prototype.hasVehicleStateFeedbackC1 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Error_state_e1 error_state_e1 = 8;
 * @return {?proto.apollo.canbus.Error_state_e1}
 */
proto.apollo.canbus.Zhongyun.prototype.getErrorStateE1 = function() {
  return /** @type{?proto.apollo.canbus.Error_state_e1} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Error_state_e1, 8));
};


/**
 * @param {?proto.apollo.canbus.Error_state_e1|undefined} value
 * @return {!proto.apollo.canbus.Zhongyun} returns this
*/
proto.apollo.canbus.Zhongyun.prototype.setErrorStateE1 = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Zhongyun} returns this
 */
proto.apollo.canbus.Zhongyun.prototype.clearErrorStateE1 = function() {
  return this.setErrorStateE1(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Zhongyun.prototype.hasErrorStateE1 = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Vehicle_state_feedback_2_c4 vehicle_state_feedback_2_c4 = 9;
 * @return {?proto.apollo.canbus.Vehicle_state_feedback_2_c4}
 */
proto.apollo.canbus.Zhongyun.prototype.getVehicleStateFeedback2C4 = function() {
  return /** @type{?proto.apollo.canbus.Vehicle_state_feedback_2_c4} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Vehicle_state_feedback_2_c4, 9));
};


/**
 * @param {?proto.apollo.canbus.Vehicle_state_feedback_2_c4|undefined} value
 * @return {!proto.apollo.canbus.Zhongyun} returns this
*/
proto.apollo.canbus.Zhongyun.prototype.setVehicleStateFeedback2C4 = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Zhongyun} returns this
 */
proto.apollo.canbus.Zhongyun.prototype.clearVehicleStateFeedback2C4 = function() {
  return this.setVehicleStateFeedback2C4(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Zhongyun.prototype.hasVehicleStateFeedback2C4 = function() {
  return jspb.Message.getField(this, 9) != null;
};


goog.object.extend(exports, proto.apollo.canbus);
