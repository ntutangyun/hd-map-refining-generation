// source: modules/planning/proto/math/fem_pos_deviation_smoother_config.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.apollo.planning.FemPosDeviationSmootherConfig', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.planning.FemPosDeviationSmootherConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.planning.FemPosDeviationSmootherConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.planning.FemPosDeviationSmootherConfig.displayName = 'proto.apollo.planning.FemPosDeviationSmootherConfig';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.planning.FemPosDeviationSmootherConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.planning.FemPosDeviationSmootherConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    weightFemPosDeviation: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 10000000000.0),
    weightRefDeviation: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 1.0),
    weightPathLength: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 1.0),
    applyCurvatureConstraint: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    weightCurvatureConstraintSlackVar: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 100.0),
    curvatureConstraint: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.2),
    useSqp: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    sqpFtol: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0001),
    sqpCtol: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.001),
    sqpPenMaxIter: jspb.Message.getFieldWithDefault(msg, 11, 10),
    sqpSubMaxIter: jspb.Message.getFieldWithDefault(msg, 12, 100),
    maxIter: jspb.Message.getFieldWithDefault(msg, 100, 500),
    timeLimit: jspb.Message.getFloatingPointFieldWithDefault(msg, 101, 0.0),
    verbose: jspb.Message.getBooleanFieldWithDefault(msg, 102, false),
    scaledTermination: jspb.Message.getBooleanFieldWithDefault(msg, 103, true),
    warmStart: jspb.Message.getBooleanFieldWithDefault(msg, 104, true),
    printLevel: jspb.Message.getFieldWithDefault(msg, 200, 0),
    maxNumOfIterations: jspb.Message.getFieldWithDefault(msg, 201, 500),
    acceptableNumOfIterations: jspb.Message.getFieldWithDefault(msg, 202, 15),
    tol: jspb.Message.getFloatingPointFieldWithDefault(msg, 203, 1.0E-8),
    acceptableTol: jspb.Message.getFloatingPointFieldWithDefault(msg, 204, 0.1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of FemPosDeviationSmootherConfig as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.weightFemPosDeviation;

  /** @type {?|undefined} */
  this.weightRefDeviation;

  /** @type {?|undefined} */
  this.weightPathLength;

  /** @type {?|undefined} */
  this.applyCurvatureConstraint;

  /** @type {?|undefined} */
  this.weightCurvatureConstraintSlackVar;

  /** @type {?|undefined} */
  this.curvatureConstraint;

  /** @type {?|undefined} */
  this.useSqp;

  /** @type {?|undefined} */
  this.sqpFtol;

  /** @type {?|undefined} */
  this.sqpCtol;

  /** @type {?|undefined} */
  this.sqpPenMaxIter;

  /** @type {?|undefined} */
  this.sqpSubMaxIter;

  /** @type {?|undefined} */
  this.maxIter;

  /** @type {?|undefined} */
  this.timeLimit;

  /** @type {?|undefined} */
  this.verbose;

  /** @type {?|undefined} */
  this.scaledTermination;

  /** @type {?|undefined} */
  this.warmStart;

  /** @type {?|undefined} */
  this.printLevel;

  /** @type {?|undefined} */
  this.maxNumOfIterations;

  /** @type {?|undefined} */
  this.acceptableNumOfIterations;

  /** @type {?|undefined} */
  this.tol;

  /** @type {?|undefined} */
  this.acceptableTol;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.planning.FemPosDeviationSmootherConfig.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.fromObject = function(obj) {
  var msg = new proto.apollo.planning.FemPosDeviationSmootherConfig();
  obj.weightFemPosDeviation != null && jspb.Message.setField(msg, 2, obj.weightFemPosDeviation);
  obj.weightRefDeviation != null && jspb.Message.setField(msg, 3, obj.weightRefDeviation);
  obj.weightPathLength != null && jspb.Message.setField(msg, 4, obj.weightPathLength);
  obj.applyCurvatureConstraint != null && jspb.Message.setField(msg, 5, obj.applyCurvatureConstraint);
  obj.weightCurvatureConstraintSlackVar != null && jspb.Message.setField(msg, 6, obj.weightCurvatureConstraintSlackVar);
  obj.curvatureConstraint != null && jspb.Message.setField(msg, 7, obj.curvatureConstraint);
  obj.useSqp != null && jspb.Message.setField(msg, 8, obj.useSqp);
  obj.sqpFtol != null && jspb.Message.setField(msg, 9, obj.sqpFtol);
  obj.sqpCtol != null && jspb.Message.setField(msg, 10, obj.sqpCtol);
  obj.sqpPenMaxIter != null && jspb.Message.setField(msg, 11, obj.sqpPenMaxIter);
  obj.sqpSubMaxIter != null && jspb.Message.setField(msg, 12, obj.sqpSubMaxIter);
  obj.maxIter != null && jspb.Message.setField(msg, 100, obj.maxIter);
  obj.timeLimit != null && jspb.Message.setField(msg, 101, obj.timeLimit);
  obj.verbose != null && jspb.Message.setField(msg, 102, obj.verbose);
  obj.scaledTermination != null && jspb.Message.setField(msg, 103, obj.scaledTermination);
  obj.warmStart != null && jspb.Message.setField(msg, 104, obj.warmStart);
  obj.printLevel != null && jspb.Message.setField(msg, 200, obj.printLevel);
  obj.maxNumOfIterations != null && jspb.Message.setField(msg, 201, obj.maxNumOfIterations);
  obj.acceptableNumOfIterations != null && jspb.Message.setField(msg, 202, obj.acceptableNumOfIterations);
  obj.tol != null && jspb.Message.setField(msg, 203, obj.tol);
  obj.acceptableTol != null && jspb.Message.setField(msg, 204, obj.acceptableTol);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.planning.FemPosDeviationSmootherConfig;
  return proto.apollo.planning.FemPosDeviationSmootherConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.planning.FemPosDeviationSmootherConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWeightFemPosDeviation(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWeightRefDeviation(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWeightPathLength(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApplyCurvatureConstraint(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWeightCurvatureConstraintSlackVar(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurvatureConstraint(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseSqp(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSqpFtol(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSqpCtol(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSqpPenMaxIter(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSqpSubMaxIter(value);
      break;
    case 100:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxIter(value);
      break;
    case 101:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimeLimit(value);
      break;
    case 102:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVerbose(value);
      break;
    case 103:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setScaledTermination(value);
      break;
    case 104:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWarmStart(value);
      break;
    case 200:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPrintLevel(value);
      break;
    case 201:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxNumOfIterations(value);
      break;
    case 202:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAcceptableNumOfIterations(value);
      break;
    case 203:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTol(value);
      break;
    case 204:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAcceptableTol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.planning.FemPosDeviationSmootherConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.planning.FemPosDeviationSmootherConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 100));
  if (f != null) {
    writer.writeInt32(
      100,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 101));
  if (f != null) {
    writer.writeDouble(
      101,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 102));
  if (f != null) {
    writer.writeBool(
      102,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 103));
  if (f != null) {
    writer.writeBool(
      103,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 104));
  if (f != null) {
    writer.writeBool(
      104,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 200));
  if (f != null) {
    writer.writeInt32(
      200,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 201));
  if (f != null) {
    writer.writeInt32(
      201,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 202));
  if (f != null) {
    writer.writeInt32(
      202,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 203));
  if (f != null) {
    writer.writeDouble(
      203,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 204));
  if (f != null) {
    writer.writeDouble(
      204,
      f
    );
  }
};


/**
 * optional double weight_fem_pos_deviation = 2;
 * @return {number}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.getWeightFemPosDeviation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 10000000000.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.setWeightFemPosDeviation = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.clearWeightFemPosDeviation = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.hasWeightFemPosDeviation = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double weight_ref_deviation = 3;
 * @return {number}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.getWeightRefDeviation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 1.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.setWeightRefDeviation = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.clearWeightRefDeviation = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.hasWeightRefDeviation = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double weight_path_length = 4;
 * @return {number}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.getWeightPathLength = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 1.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.setWeightPathLength = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.clearWeightPathLength = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.hasWeightPathLength = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool apply_curvature_constraint = 5;
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.getApplyCurvatureConstraint = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.setApplyCurvatureConstraint = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.clearApplyCurvatureConstraint = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.hasApplyCurvatureConstraint = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double weight_curvature_constraint_slack_var = 6;
 * @return {number}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.getWeightCurvatureConstraintSlackVar = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 100.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.setWeightCurvatureConstraintSlackVar = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.clearWeightCurvatureConstraintSlackVar = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.hasWeightCurvatureConstraintSlackVar = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double curvature_constraint = 7;
 * @return {number}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.getCurvatureConstraint = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.2));
};


/**
 * @param {number} value
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.setCurvatureConstraint = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.clearCurvatureConstraint = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.hasCurvatureConstraint = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool use_sqp = 8;
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.getUseSqp = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.setUseSqp = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.clearUseSqp = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.hasUseSqp = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double sqp_ftol = 9;
 * @return {number}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.getSqpFtol = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0001));
};


/**
 * @param {number} value
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.setSqpFtol = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.clearSqpFtol = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.hasSqpFtol = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional double sqp_ctol = 10;
 * @return {number}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.getSqpCtol = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.001));
};


/**
 * @param {number} value
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.setSqpCtol = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.clearSqpCtol = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.hasSqpCtol = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int32 sqp_pen_max_iter = 11;
 * @return {number}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.getSqpPenMaxIter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 10));
};


/**
 * @param {number} value
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.setSqpPenMaxIter = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.clearSqpPenMaxIter = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.hasSqpPenMaxIter = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int32 sqp_sub_max_iter = 12;
 * @return {number}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.getSqpSubMaxIter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 100));
};


/**
 * @param {number} value
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.setSqpSubMaxIter = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.clearSqpSubMaxIter = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.hasSqpSubMaxIter = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int32 max_iter = 100;
 * @return {number}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.getMaxIter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 100, 500));
};


/**
 * @param {number} value
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.setMaxIter = function(value) {
  return jspb.Message.setField(this, 100, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.clearMaxIter = function() {
  return jspb.Message.setField(this, 100, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.hasMaxIter = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional double time_limit = 101;
 * @return {number}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.getTimeLimit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 101, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.setTimeLimit = function(value) {
  return jspb.Message.setField(this, 101, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.clearTimeLimit = function() {
  return jspb.Message.setField(this, 101, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.hasTimeLimit = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional bool verbose = 102;
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.getVerbose = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 102, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.setVerbose = function(value) {
  return jspb.Message.setField(this, 102, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.clearVerbose = function() {
  return jspb.Message.setField(this, 102, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.hasVerbose = function() {
  return jspb.Message.getField(this, 102) != null;
};


/**
 * optional bool scaled_termination = 103;
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.getScaledTermination = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 103, true));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.setScaledTermination = function(value) {
  return jspb.Message.setField(this, 103, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.clearScaledTermination = function() {
  return jspb.Message.setField(this, 103, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.hasScaledTermination = function() {
  return jspb.Message.getField(this, 103) != null;
};


/**
 * optional bool warm_start = 104;
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.getWarmStart = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 104, true));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.setWarmStart = function(value) {
  return jspb.Message.setField(this, 104, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.clearWarmStart = function() {
  return jspb.Message.setField(this, 104, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.hasWarmStart = function() {
  return jspb.Message.getField(this, 104) != null;
};


/**
 * optional int32 print_level = 200;
 * @return {number}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.getPrintLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 200, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.setPrintLevel = function(value) {
  return jspb.Message.setField(this, 200, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.clearPrintLevel = function() {
  return jspb.Message.setField(this, 200, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.hasPrintLevel = function() {
  return jspb.Message.getField(this, 200) != null;
};


/**
 * optional int32 max_num_of_iterations = 201;
 * @return {number}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.getMaxNumOfIterations = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 201, 500));
};


/**
 * @param {number} value
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.setMaxNumOfIterations = function(value) {
  return jspb.Message.setField(this, 201, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.clearMaxNumOfIterations = function() {
  return jspb.Message.setField(this, 201, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.hasMaxNumOfIterations = function() {
  return jspb.Message.getField(this, 201) != null;
};


/**
 * optional int32 acceptable_num_of_iterations = 202;
 * @return {number}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.getAcceptableNumOfIterations = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 202, 15));
};


/**
 * @param {number} value
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.setAcceptableNumOfIterations = function(value) {
  return jspb.Message.setField(this, 202, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.clearAcceptableNumOfIterations = function() {
  return jspb.Message.setField(this, 202, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.hasAcceptableNumOfIterations = function() {
  return jspb.Message.getField(this, 202) != null;
};


/**
 * optional double tol = 203;
 * @return {number}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.getTol = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 203, 1.0E-8));
};


/**
 * @param {number} value
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.setTol = function(value) {
  return jspb.Message.setField(this, 203, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.clearTol = function() {
  return jspb.Message.setField(this, 203, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.hasTol = function() {
  return jspb.Message.getField(this, 203) != null;
};


/**
 * optional double acceptable_tol = 204;
 * @return {number}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.getAcceptableTol = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 204, 0.1));
};


/**
 * @param {number} value
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.setAcceptableTol = function(value) {
  return jspb.Message.setField(this, 204, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.FemPosDeviationSmootherConfig} returns this
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.clearAcceptableTol = function() {
  return jspb.Message.setField(this, 204, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.FemPosDeviationSmootherConfig.prototype.hasAcceptableTol = function() {
  return jspb.Message.getField(this, 204) != null;
};


goog.object.extend(exports, proto.apollo.planning);
