// source: modules/perception/camera/lib/traffic_light/detector/recognition/proto/recognition.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam', null, global);
goog.exportSymbol('proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.displayName = 'proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.displayName = 'proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelName: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    modelType: jspb.Message.getFieldWithDefault(msg, 2, "CaffeNet"),
    inputBlob: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    outputBlob: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    weightFile: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    protoFile: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    classifyThreshold: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    classifyResizeWidth: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    classifyResizeHeight: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    scale: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    meanB: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 95.0),
    meanG: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 99.0),
    meanR: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 96.0),
    isBgr: jspb.Message.getBooleanFieldWithDefault(msg, 15, true)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ClassifyParam as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.modelName;

  /** @type {?|undefined} */
  this.modelType;

  /** @type {?|undefined} */
  this.inputBlob;

  /** @type {?|undefined} */
  this.outputBlob;

  /** @type {?|undefined} */
  this.weightFile;

  /** @type {?|undefined} */
  this.protoFile;

  /** @type {?|undefined} */
  this.classifyThreshold;

  /** @type {?|undefined} */
  this.classifyResizeWidth;

  /** @type {?|undefined} */
  this.classifyResizeHeight;

  /** @type {?|undefined} */
  this.scale;

  /** @type {?|undefined} */
  this.meanB;

  /** @type {?|undefined} */
  this.meanG;

  /** @type {?|undefined} */
  this.meanR;

  /** @type {?|undefined} */
  this.isBgr;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.fromObject = function(obj) {
  var msg = new proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam();
  obj.modelName != null && jspb.Message.setField(msg, 1, obj.modelName);
  obj.modelType != null && jspb.Message.setField(msg, 2, obj.modelType);
  obj.inputBlob != null && jspb.Message.setField(msg, 3, obj.inputBlob);
  obj.outputBlob != null && jspb.Message.setField(msg, 4, obj.outputBlob);
  obj.weightFile != null && jspb.Message.setField(msg, 5, obj.weightFile);
  obj.protoFile != null && jspb.Message.setField(msg, 6, obj.protoFile);
  obj.classifyThreshold != null && jspb.Message.setField(msg, 7, obj.classifyThreshold);
  obj.classifyResizeWidth != null && jspb.Message.setField(msg, 8, obj.classifyResizeWidth);
  obj.classifyResizeHeight != null && jspb.Message.setField(msg, 9, obj.classifyResizeHeight);
  obj.scale != null && jspb.Message.setField(msg, 10, obj.scale);
  obj.meanB != null && jspb.Message.setField(msg, 12, obj.meanB);
  obj.meanG != null && jspb.Message.setField(msg, 13, obj.meanG);
  obj.meanR != null && jspb.Message.setField(msg, 14, obj.meanR);
  obj.isBgr != null && jspb.Message.setField(msg, 15, obj.isBgr);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam;
  return proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInputBlob(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutputBlob(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setWeightFile(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setProtoFile(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setClassifyThreshold(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClassifyResizeWidth(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClassifyResizeHeight(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setScale(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMeanB(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMeanG(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMeanR(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsBgr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeFloat(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeFloat(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
};


/**
 * optional string model_name = 1;
 * @return {string}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.getModelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.setModelName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.clearModelName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.hasModelName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string model_type = 2;
 * @return {string}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.getModelType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "CaffeNet"));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.setModelType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.clearModelType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.hasModelType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string input_blob = 3;
 * @return {string}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.getInputBlob = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.setInputBlob = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.clearInputBlob = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.hasInputBlob = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string output_blob = 4;
 * @return {string}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.getOutputBlob = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.setOutputBlob = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.clearOutputBlob = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.hasOutputBlob = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string weight_file = 5;
 * @return {string}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.getWeightFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.setWeightFile = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.clearWeightFile = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.hasWeightFile = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string proto_file = 6;
 * @return {string}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.getProtoFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.setProtoFile = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.clearProtoFile = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.hasProtoFile = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional float classify_threshold = 7;
 * @return {number}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.getClassifyThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.setClassifyThreshold = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.clearClassifyThreshold = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.hasClassifyThreshold = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 classify_resize_width = 8;
 * @return {number}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.getClassifyResizeWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.setClassifyResizeWidth = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.clearClassifyResizeWidth = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.hasClassifyResizeWidth = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 classify_resize_height = 9;
 * @return {number}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.getClassifyResizeHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.setClassifyResizeHeight = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.clearClassifyResizeHeight = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.hasClassifyResizeHeight = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional float scale = 10;
 * @return {number}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.getScale = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.setScale = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.clearScale = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.hasScale = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional float mean_b = 12;
 * @return {number}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.getMeanB = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 95.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.setMeanB = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.clearMeanB = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.hasMeanB = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional float mean_g = 13;
 * @return {number}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.getMeanG = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 99.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.setMeanG = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.clearMeanG = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.hasMeanG = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional float mean_r = 14;
 * @return {number}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.getMeanR = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 96.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.setMeanR = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.clearMeanR = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.hasMeanR = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool is_bgr = 15;
 * @return {boolean}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.getIsBgr = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, true));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.setIsBgr = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.clearIsBgr = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.prototype.hasIsBgr = function() {
  return jspb.Message.getField(this, 15) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    verticalModel: (f = msg.getVerticalModel()) && proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.toObject(includeInstance, f),
    quadrateModel: (f = msg.getQuadrateModel()) && proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.toObject(includeInstance, f),
    horizontalModel: (f = msg.getHorizontalModel()) && proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of RecognizeBoxParam as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.verticalModel;

  /** @type {?|undefined} */
  this.quadrateModel;

  /** @type {?|undefined} */
  this.horizontalModel;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam}
 */
proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.fromObject = function(obj) {
  var msg = new proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam();
  obj.verticalModel && jspb.Message.setWrapperField(
      msg, 1, proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.fromObject(obj.verticalModel));
  obj.quadrateModel && jspb.Message.setWrapperField(
      msg, 2, proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.fromObject(obj.quadrateModel));
  obj.horizontalModel && jspb.Message.setWrapperField(
      msg, 3, proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.fromObject(obj.horizontalModel));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam}
 */
proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam;
  return proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam}
 */
proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam;
      reader.readMessage(value,proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.deserializeBinaryFromReader);
      msg.setVerticalModel(value);
      break;
    case 2:
      var value = new proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam;
      reader.readMessage(value,proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.deserializeBinaryFromReader);
      msg.setQuadrateModel(value);
      break;
    case 3:
      var value = new proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam;
      reader.readMessage(value,proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.deserializeBinaryFromReader);
      msg.setHorizontalModel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVerticalModel();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.serializeBinaryToWriter
    );
  }
  f = message.getQuadrateModel();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.serializeBinaryToWriter
    );
  }
  f = message.getHorizontalModel();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam.serializeBinaryToWriter
    );
  }
};


/**
 * optional ClassifyParam vertical_model = 1;
 * @return {?proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam}
 */
proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.prototype.getVerticalModel = function() {
  return /** @type{?proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} */ (
    jspb.Message.getWrapperField(this, proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam, 1));
};


/**
 * @param {?proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam|undefined} value
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam} returns this
*/
proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.prototype.setVerticalModel = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.prototype.clearVerticalModel = function() {
  return this.setVerticalModel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.prototype.hasVerticalModel = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ClassifyParam quadrate_model = 2;
 * @return {?proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam}
 */
proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.prototype.getQuadrateModel = function() {
  return /** @type{?proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} */ (
    jspb.Message.getWrapperField(this, proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam, 2));
};


/**
 * @param {?proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam|undefined} value
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam} returns this
*/
proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.prototype.setQuadrateModel = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.prototype.clearQuadrateModel = function() {
  return this.setQuadrateModel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.prototype.hasQuadrateModel = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ClassifyParam horizontal_model = 3;
 * @return {?proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam}
 */
proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.prototype.getHorizontalModel = function() {
  return /** @type{?proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam} */ (
    jspb.Message.getWrapperField(this, proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam, 3));
};


/**
 * @param {?proto.apollo.perception.camera.traffic_light.recognition.ClassifyParam|undefined} value
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam} returns this
*/
proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.prototype.setHorizontalModel = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam} returns this
 */
proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.prototype.clearHorizontalModel = function() {
  return this.setHorizontalModel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam.prototype.hasHorizontalModel = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.apollo.perception.camera.traffic_light.recognition);
