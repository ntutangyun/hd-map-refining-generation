// source: modules/perception/proto/probabilistic_fusion_config.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.apollo.perception.fusion.ProbabilisticFusionConfig', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.perception.fusion.ProbabilisticFusionConfig.repeatedFields_, null);
};
goog.inherits(proto.apollo.perception.fusion.ProbabilisticFusionConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.perception.fusion.ProbabilisticFusionConfig.displayName = 'proto.apollo.perception.fusion.ProbabilisticFusionConfig';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.perception.fusion.ProbabilisticFusionConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    useLidar: jspb.Message.getBooleanFieldWithDefault(msg, 1, true),
    useRadar: jspb.Message.getBooleanFieldWithDefault(msg, 2, true),
    useCamera: jspb.Message.getBooleanFieldWithDefault(msg, 3, true),
    trackerMethod: jspb.Message.getFieldWithDefault(msg, 4, "PbfTracker"),
    dataAssociationMethod: jspb.Message.getFieldWithDefault(msg, 5, "HMAssociation"),
    gateKeeperMethod: jspb.Message.getFieldWithDefault(msg, 6, "PbfGatekeeper"),
    prohibitionSensorsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    maxLidarInvisiblePeriod: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.25),
    maxRadarInvisiblePeriod: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.5),
    maxCameraInvisiblePeriod: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.75),
    maxCachedFrameNum: jspb.Message.getFieldWithDefault(msg, 11, 50)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ProbabilisticFusionConfig as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.useLidar;

  /** @type {?|undefined} */
  this.useRadar;

  /** @type {?|undefined} */
  this.useCamera;

  /** @type {?|undefined} */
  this.trackerMethod;

  /** @type {?|undefined} */
  this.dataAssociationMethod;

  /** @type {?|undefined} */
  this.gateKeeperMethod;

  /** @type {?|undefined} */
  this.prohibitionSensorsList;

  /** @type {?|undefined} */
  this.maxLidarInvisiblePeriod;

  /** @type {?|undefined} */
  this.maxRadarInvisiblePeriod;

  /** @type {?|undefined} */
  this.maxCameraInvisiblePeriod;

  /** @type {?|undefined} */
  this.maxCachedFrameNum;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.perception.fusion.ProbabilisticFusionConfig.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.fromObject = function(obj) {
  var msg = new proto.apollo.perception.fusion.ProbabilisticFusionConfig();
  obj.useLidar != null && jspb.Message.setField(msg, 1, obj.useLidar);
  obj.useRadar != null && jspb.Message.setField(msg, 2, obj.useRadar);
  obj.useCamera != null && jspb.Message.setField(msg, 3, obj.useCamera);
  obj.trackerMethod != null && jspb.Message.setField(msg, 4, obj.trackerMethod);
  obj.dataAssociationMethod != null && jspb.Message.setField(msg, 5, obj.dataAssociationMethod);
  obj.gateKeeperMethod != null && jspb.Message.setField(msg, 6, obj.gateKeeperMethod);
  obj.prohibitionSensorsList != null && jspb.Message.setField(msg, 7, obj.prohibitionSensorsList);
  obj.maxLidarInvisiblePeriod != null && jspb.Message.setField(msg, 8, obj.maxLidarInvisiblePeriod);
  obj.maxRadarInvisiblePeriod != null && jspb.Message.setField(msg, 9, obj.maxRadarInvisiblePeriod);
  obj.maxCameraInvisiblePeriod != null && jspb.Message.setField(msg, 10, obj.maxCameraInvisiblePeriod);
  obj.maxCachedFrameNum != null && jspb.Message.setField(msg, 11, obj.maxCachedFrameNum);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.perception.fusion.ProbabilisticFusionConfig;
  return proto.apollo.perception.fusion.ProbabilisticFusionConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseLidar(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseRadar(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseCamera(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTrackerMethod(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataAssociationMethod(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateKeeperMethod(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addProhibitionSensors(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxLidarInvisiblePeriod(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxRadarInvisiblePeriod(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxCameraInvisiblePeriod(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxCachedFrameNum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.perception.fusion.ProbabilisticFusionConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getProhibitionSensorsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt64(
      11,
      f
    );
  }
};


/**
 * optional bool use_lidar = 1;
 * @return {boolean}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.getUseLidar = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, true));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.setUseLidar = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.clearUseLidar = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.hasUseLidar = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool use_radar = 2;
 * @return {boolean}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.getUseRadar = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, true));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.setUseRadar = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.clearUseRadar = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.hasUseRadar = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool use_camera = 3;
 * @return {boolean}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.getUseCamera = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, true));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.setUseCamera = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.clearUseCamera = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.hasUseCamera = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string tracker_method = 4;
 * @return {string}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.getTrackerMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, "PbfTracker"));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.setTrackerMethod = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.clearTrackerMethod = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.hasTrackerMethod = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string data_association_method = 5;
 * @return {string}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.getDataAssociationMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, "HMAssociation"));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.setDataAssociationMethod = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.clearDataAssociationMethod = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.hasDataAssociationMethod = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string gate_keeper_method = 6;
 * @return {string}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.getGateKeeperMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, "PbfGatekeeper"));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.setGateKeeperMethod = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.clearGateKeeperMethod = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.hasGateKeeperMethod = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated string prohibition_sensors = 7;
 * @return {!Array<string>}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.getProhibitionSensorsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.setProhibitionSensorsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.addProhibitionSensors = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.clearProhibitionSensorsList = function() {
  return this.setProhibitionSensorsList([]);
};


/**
 * optional double max_lidar_invisible_period = 8;
 * @return {number}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.getMaxLidarInvisiblePeriod = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.25));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.setMaxLidarInvisiblePeriod = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.clearMaxLidarInvisiblePeriod = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.hasMaxLidarInvisiblePeriod = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double max_radar_invisible_period = 9;
 * @return {number}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.getMaxRadarInvisiblePeriod = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.5));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.setMaxRadarInvisiblePeriod = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.clearMaxRadarInvisiblePeriod = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.hasMaxRadarInvisiblePeriod = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional double max_camera_invisible_period = 10;
 * @return {number}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.getMaxCameraInvisiblePeriod = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.75));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.setMaxCameraInvisiblePeriod = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.clearMaxCameraInvisiblePeriod = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.hasMaxCameraInvisiblePeriod = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int64 max_cached_frame_num = 11;
 * @return {number}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.getMaxCachedFrameNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 50));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.setMaxCachedFrameNum = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.ProbabilisticFusionConfig} returns this
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.clearMaxCachedFrameNum = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.ProbabilisticFusionConfig.prototype.hasMaxCachedFrameNum = function() {
  return jspb.Message.getField(this, 11) != null;
};


goog.object.extend(exports, proto.apollo.perception.fusion);
