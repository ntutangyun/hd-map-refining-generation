// source: cyber/proto/topology_change.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var cyber_proto_role_attributes_pb = require('../../cyber/proto/role_attributes_pb.js');
goog.object.extend(proto, cyber_proto_role_attributes_pb);
goog.exportSymbol('proto.apollo.cyber.proto.ChangeMsg', null, global);
goog.exportSymbol('proto.apollo.cyber.proto.ChangeType', null, global);
goog.exportSymbol('proto.apollo.cyber.proto.OperateType', null, global);
goog.exportSymbol('proto.apollo.cyber.proto.RoleType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.cyber.proto.ChangeMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.cyber.proto.ChangeMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.cyber.proto.ChangeMsg.displayName = 'proto.apollo.cyber.proto.ChangeMsg';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.cyber.proto.ChangeMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.cyber.proto.ChangeMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.cyber.proto.ChangeMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.cyber.proto.ChangeMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    changeType: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    operateType: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    roleType: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    roleAttr: (f = msg.getRoleAttr()) && cyber_proto_role_attributes_pb.RoleAttributes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ChangeMsg as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.cyber.proto.ChangeMsg.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.timestamp;

  /** @type {?|undefined} */
  this.changeType;

  /** @type {?|undefined} */
  this.operateType;

  /** @type {?|undefined} */
  this.roleType;

  /** @type {?|undefined} */
  this.roleAttr;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.cyber.proto.ChangeMsg.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.cyber.proto.ChangeMsg}
 */
proto.apollo.cyber.proto.ChangeMsg.fromObject = function(obj) {
  var msg = new proto.apollo.cyber.proto.ChangeMsg();
  obj.timestamp != null && jspb.Message.setField(msg, 1, obj.timestamp);
  obj.changeType != null && jspb.Message.setField(msg, 2, obj.changeType);
  obj.operateType != null && jspb.Message.setField(msg, 3, obj.operateType);
  obj.roleType != null && jspb.Message.setField(msg, 4, obj.roleType);
  obj.roleAttr && jspb.Message.setWrapperField(
      msg, 5, cyber_proto_role_attributes_pb.RoleAttributes.fromObject(obj.roleAttr));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.cyber.proto.ChangeMsg}
 */
proto.apollo.cyber.proto.ChangeMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.cyber.proto.ChangeMsg;
  return proto.apollo.cyber.proto.ChangeMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.cyber.proto.ChangeMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.cyber.proto.ChangeMsg}
 */
proto.apollo.cyber.proto.ChangeMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.cyber.proto.ChangeType} */ (reader.readEnum());
      msg.setChangeType(value);
      break;
    case 3:
      var value = /** @type {!proto.apollo.cyber.proto.OperateType} */ (reader.readEnum());
      msg.setOperateType(value);
      break;
    case 4:
      var value = /** @type {!proto.apollo.cyber.proto.RoleType} */ (reader.readEnum());
      msg.setRoleType(value);
      break;
    case 5:
      var value = new cyber_proto_role_attributes_pb.RoleAttributes;
      reader.readMessage(value,cyber_proto_role_attributes_pb.RoleAttributes.deserializeBinaryFromReader);
      msg.setRoleAttr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.cyber.proto.ChangeMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.cyber.proto.ChangeMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.cyber.proto.ChangeMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.cyber.proto.ChangeMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {!proto.apollo.cyber.proto.ChangeType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!proto.apollo.cyber.proto.OperateType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!proto.apollo.cyber.proto.RoleType} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getRoleAttr();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cyber_proto_role_attributes_pb.RoleAttributes.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 timestamp = 1;
 * @return {number}
 */
proto.apollo.cyber.proto.ChangeMsg.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.cyber.proto.ChangeMsg} returns this
 */
proto.apollo.cyber.proto.ChangeMsg.prototype.setTimestamp = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.ChangeMsg} returns this
 */
proto.apollo.cyber.proto.ChangeMsg.prototype.clearTimestamp = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.ChangeMsg.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ChangeType change_type = 2;
 * @return {!proto.apollo.cyber.proto.ChangeType}
 */
proto.apollo.cyber.proto.ChangeMsg.prototype.getChangeType = function() {
  return /** @type {!proto.apollo.cyber.proto.ChangeType} */ (jspb.Message.getFieldWithDefault(this, 2, 1));
};


/**
 * @param {!proto.apollo.cyber.proto.ChangeType} value
 * @return {!proto.apollo.cyber.proto.ChangeMsg} returns this
 */
proto.apollo.cyber.proto.ChangeMsg.prototype.setChangeType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.ChangeMsg} returns this
 */
proto.apollo.cyber.proto.ChangeMsg.prototype.clearChangeType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.ChangeMsg.prototype.hasChangeType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional OperateType operate_type = 3;
 * @return {!proto.apollo.cyber.proto.OperateType}
 */
proto.apollo.cyber.proto.ChangeMsg.prototype.getOperateType = function() {
  return /** @type {!proto.apollo.cyber.proto.OperateType} */ (jspb.Message.getFieldWithDefault(this, 3, 1));
};


/**
 * @param {!proto.apollo.cyber.proto.OperateType} value
 * @return {!proto.apollo.cyber.proto.ChangeMsg} returns this
 */
proto.apollo.cyber.proto.ChangeMsg.prototype.setOperateType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.ChangeMsg} returns this
 */
proto.apollo.cyber.proto.ChangeMsg.prototype.clearOperateType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.ChangeMsg.prototype.hasOperateType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RoleType role_type = 4;
 * @return {!proto.apollo.cyber.proto.RoleType}
 */
proto.apollo.cyber.proto.ChangeMsg.prototype.getRoleType = function() {
  return /** @type {!proto.apollo.cyber.proto.RoleType} */ (jspb.Message.getFieldWithDefault(this, 4, 1));
};


/**
 * @param {!proto.apollo.cyber.proto.RoleType} value
 * @return {!proto.apollo.cyber.proto.ChangeMsg} returns this
 */
proto.apollo.cyber.proto.ChangeMsg.prototype.setRoleType = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.ChangeMsg} returns this
 */
proto.apollo.cyber.proto.ChangeMsg.prototype.clearRoleType = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.ChangeMsg.prototype.hasRoleType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional RoleAttributes role_attr = 5;
 * @return {?proto.apollo.cyber.proto.RoleAttributes}
 */
proto.apollo.cyber.proto.ChangeMsg.prototype.getRoleAttr = function() {
  return /** @type{?proto.apollo.cyber.proto.RoleAttributes} */ (
    jspb.Message.getWrapperField(this, cyber_proto_role_attributes_pb.RoleAttributes, 5));
};


/**
 * @param {?proto.apollo.cyber.proto.RoleAttributes|undefined} value
 * @return {!proto.apollo.cyber.proto.ChangeMsg} returns this
*/
proto.apollo.cyber.proto.ChangeMsg.prototype.setRoleAttr = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.cyber.proto.ChangeMsg} returns this
 */
proto.apollo.cyber.proto.ChangeMsg.prototype.clearRoleAttr = function() {
  return this.setRoleAttr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.ChangeMsg.prototype.hasRoleAttr = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * @enum {number}
 */
proto.apollo.cyber.proto.ChangeType = {
  CHANGE_NODE: 1,
  CHANGE_CHANNEL: 2,
  CHANGE_SERVICE: 3,
  CHANGE_PARTICIPANT: 4
};

/**
 * @enum {number}
 */
proto.apollo.cyber.proto.OperateType = {
  OPT_JOIN: 1,
  OPT_LEAVE: 2
};

/**
 * @enum {number}
 */
proto.apollo.cyber.proto.RoleType = {
  ROLE_NODE: 1,
  ROLE_WRITER: 2,
  ROLE_READER: 3,
  ROLE_SERVER: 4,
  ROLE_CLIENT: 5,
  ROLE_PARTICIPANT: 6
};

goog.object.extend(exports, proto.apollo.cyber.proto);
