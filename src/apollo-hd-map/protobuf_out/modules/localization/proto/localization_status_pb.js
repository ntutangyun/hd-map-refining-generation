// source: modules/localization/proto/localization_status.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.apollo.localization.GnssConsistency', null, global);
goog.exportSymbol('proto.apollo.localization.GnssPositionType', null, global);
goog.exportSymbol('proto.apollo.localization.ImuMsgDataStatus', null, global);
goog.exportSymbol('proto.apollo.localization.ImuMsgDelayStatus', null, global);
goog.exportSymbol('proto.apollo.localization.ImuMsgMissingStatus', null, global);
goog.exportSymbol('proto.apollo.localization.LocalLidarConsistency', null, global);
goog.exportSymbol('proto.apollo.localization.LocalLidarQuality', null, global);
goog.exportSymbol('proto.apollo.localization.LocalLidarStatus', null, global);
goog.exportSymbol('proto.apollo.localization.MsfRunningStatus', null, global);
goog.exportSymbol('proto.apollo.localization.MsfSensorMsgStatus', null, global);
goog.exportSymbol('proto.apollo.localization.MsfStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.localization.MsfSensorMsgStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.localization.MsfSensorMsgStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.localization.MsfSensorMsgStatus.displayName = 'proto.apollo.localization.MsfSensorMsgStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.localization.MsfStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.localization.MsfStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.localization.MsfStatus.displayName = 'proto.apollo.localization.MsfStatus';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.localization.MsfSensorMsgStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.localization.MsfSensorMsgStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.localization.MsfSensorMsgStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.localization.MsfSensorMsgStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    imuDelayStatus: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    imuMissingStatus: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    imuDataStatus: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of MsfSensorMsgStatus as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.localization.MsfSensorMsgStatus.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.imuDelayStatus;

  /** @type {?|undefined} */
  this.imuMissingStatus;

  /** @type {?|undefined} */
  this.imuDataStatus;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.localization.MsfSensorMsgStatus.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.localization.MsfSensorMsgStatus}
 */
proto.apollo.localization.MsfSensorMsgStatus.fromObject = function(obj) {
  var msg = new proto.apollo.localization.MsfSensorMsgStatus();
  obj.imuDelayStatus != null && jspb.Message.setField(msg, 1, obj.imuDelayStatus);
  obj.imuMissingStatus != null && jspb.Message.setField(msg, 2, obj.imuMissingStatus);
  obj.imuDataStatus != null && jspb.Message.setField(msg, 3, obj.imuDataStatus);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.localization.MsfSensorMsgStatus}
 */
proto.apollo.localization.MsfSensorMsgStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.localization.MsfSensorMsgStatus;
  return proto.apollo.localization.MsfSensorMsgStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.localization.MsfSensorMsgStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.localization.MsfSensorMsgStatus}
 */
proto.apollo.localization.MsfSensorMsgStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.localization.ImuMsgDelayStatus} */ (reader.readEnum());
      msg.setImuDelayStatus(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.localization.ImuMsgMissingStatus} */ (reader.readEnum());
      msg.setImuMissingStatus(value);
      break;
    case 3:
      var value = /** @type {!proto.apollo.localization.ImuMsgDataStatus} */ (reader.readEnum());
      msg.setImuDataStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.localization.MsfSensorMsgStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.localization.MsfSensorMsgStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.localization.MsfSensorMsgStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.localization.MsfSensorMsgStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.localization.ImuMsgDelayStatus} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.apollo.localization.ImuMsgMissingStatus} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!proto.apollo.localization.ImuMsgDataStatus} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional ImuMsgDelayStatus imu_delay_status = 1;
 * @return {!proto.apollo.localization.ImuMsgDelayStatus}
 */
proto.apollo.localization.MsfSensorMsgStatus.prototype.getImuDelayStatus = function() {
  return /** @type {!proto.apollo.localization.ImuMsgDelayStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.localization.ImuMsgDelayStatus} value
 * @return {!proto.apollo.localization.MsfSensorMsgStatus} returns this
 */
proto.apollo.localization.MsfSensorMsgStatus.prototype.setImuDelayStatus = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.localization.MsfSensorMsgStatus} returns this
 */
proto.apollo.localization.MsfSensorMsgStatus.prototype.clearImuDelayStatus = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.MsfSensorMsgStatus.prototype.hasImuDelayStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ImuMsgMissingStatus imu_missing_status = 2;
 * @return {!proto.apollo.localization.ImuMsgMissingStatus}
 */
proto.apollo.localization.MsfSensorMsgStatus.prototype.getImuMissingStatus = function() {
  return /** @type {!proto.apollo.localization.ImuMsgMissingStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.apollo.localization.ImuMsgMissingStatus} value
 * @return {!proto.apollo.localization.MsfSensorMsgStatus} returns this
 */
proto.apollo.localization.MsfSensorMsgStatus.prototype.setImuMissingStatus = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.localization.MsfSensorMsgStatus} returns this
 */
proto.apollo.localization.MsfSensorMsgStatus.prototype.clearImuMissingStatus = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.MsfSensorMsgStatus.prototype.hasImuMissingStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ImuMsgDataStatus imu_data_status = 3;
 * @return {!proto.apollo.localization.ImuMsgDataStatus}
 */
proto.apollo.localization.MsfSensorMsgStatus.prototype.getImuDataStatus = function() {
  return /** @type {!proto.apollo.localization.ImuMsgDataStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.apollo.localization.ImuMsgDataStatus} value
 * @return {!proto.apollo.localization.MsfSensorMsgStatus} returns this
 */
proto.apollo.localization.MsfSensorMsgStatus.prototype.setImuDataStatus = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.localization.MsfSensorMsgStatus} returns this
 */
proto.apollo.localization.MsfSensorMsgStatus.prototype.clearImuDataStatus = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.MsfSensorMsgStatus.prototype.hasImuDataStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.localization.MsfStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.localization.MsfStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.localization.MsfStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.localization.MsfStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    localLidarConsistency: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    gnssConsistency: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    localLidarStatus: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    localLidarQuality: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    gnssposPositionType: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    msfRunningStatus: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of MsfStatus as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.localization.MsfStatus.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.localLidarConsistency;

  /** @type {?|undefined} */
  this.gnssConsistency;

  /** @type {?|undefined} */
  this.localLidarStatus;

  /** @type {?|undefined} */
  this.localLidarQuality;

  /** @type {?|undefined} */
  this.gnssposPositionType;

  /** @type {?|undefined} */
  this.msfRunningStatus;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.localization.MsfStatus.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.localization.MsfStatus}
 */
proto.apollo.localization.MsfStatus.fromObject = function(obj) {
  var msg = new proto.apollo.localization.MsfStatus();
  obj.localLidarConsistency != null && jspb.Message.setField(msg, 1, obj.localLidarConsistency);
  obj.gnssConsistency != null && jspb.Message.setField(msg, 2, obj.gnssConsistency);
  obj.localLidarStatus != null && jspb.Message.setField(msg, 3, obj.localLidarStatus);
  obj.localLidarQuality != null && jspb.Message.setField(msg, 4, obj.localLidarQuality);
  obj.gnssposPositionType != null && jspb.Message.setField(msg, 5, obj.gnssposPositionType);
  obj.msfRunningStatus != null && jspb.Message.setField(msg, 6, obj.msfRunningStatus);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.localization.MsfStatus}
 */
proto.apollo.localization.MsfStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.localization.MsfStatus;
  return proto.apollo.localization.MsfStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.localization.MsfStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.localization.MsfStatus}
 */
proto.apollo.localization.MsfStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.localization.LocalLidarConsistency} */ (reader.readEnum());
      msg.setLocalLidarConsistency(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.localization.GnssConsistency} */ (reader.readEnum());
      msg.setGnssConsistency(value);
      break;
    case 3:
      var value = /** @type {!proto.apollo.localization.LocalLidarStatus} */ (reader.readEnum());
      msg.setLocalLidarStatus(value);
      break;
    case 4:
      var value = /** @type {!proto.apollo.localization.LocalLidarQuality} */ (reader.readEnum());
      msg.setLocalLidarQuality(value);
      break;
    case 5:
      var value = /** @type {!proto.apollo.localization.GnssPositionType} */ (reader.readEnum());
      msg.setGnssposPositionType(value);
      break;
    case 6:
      var value = /** @type {!proto.apollo.localization.MsfRunningStatus} */ (reader.readEnum());
      msg.setMsfRunningStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.localization.MsfStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.localization.MsfStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.localization.MsfStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.localization.MsfStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.localization.LocalLidarConsistency} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.apollo.localization.GnssConsistency} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!proto.apollo.localization.LocalLidarStatus} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!proto.apollo.localization.LocalLidarQuality} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {!proto.apollo.localization.GnssPositionType} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {!proto.apollo.localization.MsfRunningStatus} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional LocalLidarConsistency local_lidar_consistency = 1;
 * @return {!proto.apollo.localization.LocalLidarConsistency}
 */
proto.apollo.localization.MsfStatus.prototype.getLocalLidarConsistency = function() {
  return /** @type {!proto.apollo.localization.LocalLidarConsistency} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.localization.LocalLidarConsistency} value
 * @return {!proto.apollo.localization.MsfStatus} returns this
 */
proto.apollo.localization.MsfStatus.prototype.setLocalLidarConsistency = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.localization.MsfStatus} returns this
 */
proto.apollo.localization.MsfStatus.prototype.clearLocalLidarConsistency = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.MsfStatus.prototype.hasLocalLidarConsistency = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GnssConsistency gnss_consistency = 2;
 * @return {!proto.apollo.localization.GnssConsistency}
 */
proto.apollo.localization.MsfStatus.prototype.getGnssConsistency = function() {
  return /** @type {!proto.apollo.localization.GnssConsistency} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.apollo.localization.GnssConsistency} value
 * @return {!proto.apollo.localization.MsfStatus} returns this
 */
proto.apollo.localization.MsfStatus.prototype.setGnssConsistency = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.localization.MsfStatus} returns this
 */
proto.apollo.localization.MsfStatus.prototype.clearGnssConsistency = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.MsfStatus.prototype.hasGnssConsistency = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LocalLidarStatus local_lidar_status = 3;
 * @return {!proto.apollo.localization.LocalLidarStatus}
 */
proto.apollo.localization.MsfStatus.prototype.getLocalLidarStatus = function() {
  return /** @type {!proto.apollo.localization.LocalLidarStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.apollo.localization.LocalLidarStatus} value
 * @return {!proto.apollo.localization.MsfStatus} returns this
 */
proto.apollo.localization.MsfStatus.prototype.setLocalLidarStatus = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.localization.MsfStatus} returns this
 */
proto.apollo.localization.MsfStatus.prototype.clearLocalLidarStatus = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.MsfStatus.prototype.hasLocalLidarStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional LocalLidarQuality local_lidar_quality = 4;
 * @return {!proto.apollo.localization.LocalLidarQuality}
 */
proto.apollo.localization.MsfStatus.prototype.getLocalLidarQuality = function() {
  return /** @type {!proto.apollo.localization.LocalLidarQuality} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.apollo.localization.LocalLidarQuality} value
 * @return {!proto.apollo.localization.MsfStatus} returns this
 */
proto.apollo.localization.MsfStatus.prototype.setLocalLidarQuality = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.localization.MsfStatus} returns this
 */
proto.apollo.localization.MsfStatus.prototype.clearLocalLidarQuality = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.MsfStatus.prototype.hasLocalLidarQuality = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional GnssPositionType gnsspos_position_type = 5;
 * @return {!proto.apollo.localization.GnssPositionType}
 */
proto.apollo.localization.MsfStatus.prototype.getGnssposPositionType = function() {
  return /** @type {!proto.apollo.localization.GnssPositionType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.apollo.localization.GnssPositionType} value
 * @return {!proto.apollo.localization.MsfStatus} returns this
 */
proto.apollo.localization.MsfStatus.prototype.setGnssposPositionType = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.localization.MsfStatus} returns this
 */
proto.apollo.localization.MsfStatus.prototype.clearGnssposPositionType = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.MsfStatus.prototype.hasGnssposPositionType = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional MsfRunningStatus msf_running_status = 6;
 * @return {!proto.apollo.localization.MsfRunningStatus}
 */
proto.apollo.localization.MsfStatus.prototype.getMsfRunningStatus = function() {
  return /** @type {!proto.apollo.localization.MsfRunningStatus} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.apollo.localization.MsfRunningStatus} value
 * @return {!proto.apollo.localization.MsfStatus} returns this
 */
proto.apollo.localization.MsfStatus.prototype.setMsfRunningStatus = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.localization.MsfStatus} returns this
 */
proto.apollo.localization.MsfStatus.prototype.clearMsfRunningStatus = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.MsfStatus.prototype.hasMsfRunningStatus = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * @enum {number}
 */
proto.apollo.localization.LocalLidarStatus = {
  MSF_LOCAL_LIDAR_NORMAL: 0,
  MSF_LOCAL_LIDAR_MAP_MISSING: 1,
  MSF_LOCAL_LIDAR_EXTRINSICS_MISSING: 2,
  MSF_LOCAL_LIDAR_MAP_LOADING_FAILED: 3,
  MSF_LOCAL_LIDAR_NO_OUTPUT: 4,
  MSF_LOCAL_LIDAR_OUT_OF_MAP: 5,
  MSF_LOCAL_LIDAR_NOT_GOOD: 6,
  MSF_LOCAL_LIDAR_UNDEFINED_STATUS: 7
};

/**
 * @enum {number}
 */
proto.apollo.localization.LocalLidarQuality = {
  MSF_LOCAL_LIDAR_VERY_GOOD: 0,
  MSF_LOCAL_LIDAR_GOOD: 1,
  MSF_LOCAL_LIDAR_NOT_BAD: 2,
  MSF_LOCAL_LIDAR_BAD: 3
};

/**
 * @enum {number}
 */
proto.apollo.localization.LocalLidarConsistency = {
  MSF_LOCAL_LIDAR_CONSISTENCY_00: 0,
  MSF_LOCAL_LIDAR_CONSISTENCY_01: 1,
  MSF_LOCAL_LIDAR_CONSISTENCY_02: 2,
  MSF_LOCAL_LIDAR_CONSISTENCY_03: 3
};

/**
 * @enum {number}
 */
proto.apollo.localization.GnssConsistency = {
  MSF_GNSS_CONSISTENCY_00: 0,
  MSF_GNSS_CONSISTENCY_01: 1,
  MSF_GNSS_CONSISTENCY_02: 2,
  MSF_GNSS_CONSISTENCY_03: 3
};

/**
 * @enum {number}
 */
proto.apollo.localization.GnssPositionType = {
  NONE: 0,
  FIXEDPOS: 1,
  FIXEDHEIGHT: 2,
  FLOATCONV: 4,
  WIDELANE: 5,
  NARROWLANE: 6,
  DOPPLER_VELOCITY: 8,
  SINGLE: 16,
  PSRDIFF: 17,
  WAAS: 18,
  PROPOGATED: 19,
  OMNISTAR: 20,
  L1_FLOAT: 32,
  IONOFREE_FLOAT: 33,
  NARROW_FLOAT: 34,
  L1_INT: 48,
  WIDE_INT: 49,
  NARROW_INT: 50,
  RTK_DIRECT_INS: 51,
  INS_SBAS: 52,
  INS_PSRSP: 53,
  INS_PSRDIFF: 54,
  INS_RTKFLOAT: 55,
  INS_RTKFIXED: 56,
  INS_OMNISTAR: 57,
  INS_OMNISTAR_HP: 58,
  INS_OMNISTAR_XP: 59,
  OMNISTAR_HP: 64,
  OMNISTAR_XP: 65,
  PPP_CONVERGING: 68,
  PPP: 69,
  INS_PPP_CONVERGING: 73,
  INS_PPP: 74,
  MSG_LOSS: 91
};

/**
 * @enum {number}
 */
proto.apollo.localization.ImuMsgDelayStatus = {
  IMU_DELAY_NORMAL: 0,
  IMU_DELAY_1: 1,
  IMU_DELAY_2: 2,
  IMU_DELAY_3: 3,
  IMU_DELAY_ABNORMAL: 4
};

/**
 * @enum {number}
 */
proto.apollo.localization.ImuMsgMissingStatus = {
  IMU_MISSING_NORMAL: 0,
  IMU_MISSING_1: 1,
  IMU_MISSING_2: 2,
  IMU_MISSING_3: 3,
  IMU_MISSING_4: 4,
  IMU_MISSING_5: 5,
  IMU_MISSING_ABNORMAL: 6
};

/**
 * @enum {number}
 */
proto.apollo.localization.ImuMsgDataStatus = {
  IMU_DATA_NORMAL: 0,
  IMU_DATA_ABNORMAL: 1,
  IMU_DATA_OTHER: 2
};

/**
 * @enum {number}
 */
proto.apollo.localization.MsfRunningStatus = {
  MSF_SOL_LIDAR_GNSS: 0,
  MSF_SOL_X_GNSS: 1,
  MSF_SOL_LIDAR_X: 2,
  MSF_SOL_LIDAR_XX: 3,
  MSF_SOL_LIDAR_XXX: 4,
  MSF_SOL_X_X: 5,
  MSF_SOL_X_XX: 6,
  MSF_SOL_X_XXX: 7,
  MSF_SSOL_LIDAR_GNSS: 8,
  MSF_SSOL_X_GNSS: 9,
  MSF_SSOL_LIDAR_X: 10,
  MSF_SSOL_LIDAR_XX: 11,
  MSF_SSOL_LIDAR_XXX: 12,
  MSF_SSOL_X_X: 13,
  MSF_SSOL_X_XX: 14,
  MSF_SSOL_X_XXX: 15,
  MSF_NOSOL_LIDAR_GNSS: 16,
  MSF_NOSOL_X_GNSS: 17,
  MSF_NOSOL_LIDAR_X: 18,
  MSF_NOSOL_LIDAR_XX: 19,
  MSF_NOSOL_LIDAR_XXX: 20,
  MSF_NOSOL_X_X: 21,
  MSF_NOSOL_X_XX: 22,
  MSF_NOSOL_X_XXX: 23,
  MSF_RUNNING_INIT: 24
};

goog.object.extend(exports, proto.apollo.localization);
