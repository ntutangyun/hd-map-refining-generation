// source: modules/canbus/proto/devkit.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.apollo.canbus.Bms_report_512', null, global);
goog.exportSymbol('proto.apollo.canbus.Brake_command_101', null, global);
goog.exportSymbol('proto.apollo.canbus.Brake_command_101.Aeb_en_ctrlType', null, global);
goog.exportSymbol('proto.apollo.canbus.Brake_command_101.Brake_en_ctrlType', null, global);
goog.exportSymbol('proto.apollo.canbus.Brake_report_501', null, global);
goog.exportSymbol('proto.apollo.canbus.Brake_report_501.Brake_en_stateType', null, global);
goog.exportSymbol('proto.apollo.canbus.Brake_report_501.Brake_flt1Type', null, global);
goog.exportSymbol('proto.apollo.canbus.Brake_report_501.Brake_flt2Type', null, global);
goog.exportSymbol('proto.apollo.canbus.Devkit', null, global);
goog.exportSymbol('proto.apollo.canbus.Gear_command_103', null, global);
goog.exportSymbol('proto.apollo.canbus.Gear_command_103.Gear_en_ctrlType', null, global);
goog.exportSymbol('proto.apollo.canbus.Gear_command_103.Gear_targetType', null, global);
goog.exportSymbol('proto.apollo.canbus.Gear_report_503', null, global);
goog.exportSymbol('proto.apollo.canbus.Gear_report_503.Gear_actualType', null, global);
goog.exportSymbol('proto.apollo.canbus.Gear_report_503.Gear_fltType', null, global);
goog.exportSymbol('proto.apollo.canbus.Park_command_104', null, global);
goog.exportSymbol('proto.apollo.canbus.Park_command_104.Park_en_ctrlType', null, global);
goog.exportSymbol('proto.apollo.canbus.Park_command_104.Park_targetType', null, global);
goog.exportSymbol('proto.apollo.canbus.Park_report_504', null, global);
goog.exportSymbol('proto.apollo.canbus.Park_report_504.Park_fltType', null, global);
goog.exportSymbol('proto.apollo.canbus.Park_report_504.Parking_actualType', null, global);
goog.exportSymbol('proto.apollo.canbus.Steering_command_102', null, global);
goog.exportSymbol('proto.apollo.canbus.Steering_command_102.Steer_en_ctrlType', null, global);
goog.exportSymbol('proto.apollo.canbus.Steering_report_502', null, global);
goog.exportSymbol('proto.apollo.canbus.Steering_report_502.Steer_en_stateType', null, global);
goog.exportSymbol('proto.apollo.canbus.Steering_report_502.Steer_flt1Type', null, global);
goog.exportSymbol('proto.apollo.canbus.Steering_report_502.Steer_flt2Type', null, global);
goog.exportSymbol('proto.apollo.canbus.Throttle_command_100', null, global);
goog.exportSymbol('proto.apollo.canbus.Throttle_command_100.Throttle_en_ctrlType', null, global);
goog.exportSymbol('proto.apollo.canbus.Throttle_report_500', null, global);
goog.exportSymbol('proto.apollo.canbus.Throttle_report_500.Throttle_en_stateType', null, global);
goog.exportSymbol('proto.apollo.canbus.Throttle_report_500.Throttle_flt1Type', null, global);
goog.exportSymbol('proto.apollo.canbus.Throttle_report_500.Throttle_flt2Type', null, global);
goog.exportSymbol('proto.apollo.canbus.Ultr_sensor_1_507', null, global);
goog.exportSymbol('proto.apollo.canbus.Ultr_sensor_2_508', null, global);
goog.exportSymbol('proto.apollo.canbus.Ultr_sensor_3_509', null, global);
goog.exportSymbol('proto.apollo.canbus.Ultr_sensor_4_510', null, global);
goog.exportSymbol('proto.apollo.canbus.Ultr_sensor_5_511', null, global);
goog.exportSymbol('proto.apollo.canbus.Vcu_report_505', null, global);
goog.exportSymbol('proto.apollo.canbus.Vcu_report_505.Aeb_stateType', null, global);
goog.exportSymbol('proto.apollo.canbus.Vcu_report_505.Backcrash_stateType', null, global);
goog.exportSymbol('proto.apollo.canbus.Vcu_report_505.Frontcrash_stateType', null, global);
goog.exportSymbol('proto.apollo.canbus.Vcu_report_505.Vehicle_mode_stateType', null, global);
goog.exportSymbol('proto.apollo.canbus.Wheelspeed_report_506', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Throttle_command_100 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Throttle_command_100, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Throttle_command_100.displayName = 'proto.apollo.canbus.Throttle_command_100';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Brake_command_101 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Brake_command_101, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Brake_command_101.displayName = 'proto.apollo.canbus.Brake_command_101';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Steering_command_102 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Steering_command_102, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Steering_command_102.displayName = 'proto.apollo.canbus.Steering_command_102';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Gear_command_103 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Gear_command_103, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Gear_command_103.displayName = 'proto.apollo.canbus.Gear_command_103';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Park_command_104 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Park_command_104, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Park_command_104.displayName = 'proto.apollo.canbus.Park_command_104';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Throttle_report_500 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Throttle_report_500, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Throttle_report_500.displayName = 'proto.apollo.canbus.Throttle_report_500';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Brake_report_501 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Brake_report_501, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Brake_report_501.displayName = 'proto.apollo.canbus.Brake_report_501';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Steering_report_502 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Steering_report_502, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Steering_report_502.displayName = 'proto.apollo.canbus.Steering_report_502';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Gear_report_503 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Gear_report_503, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Gear_report_503.displayName = 'proto.apollo.canbus.Gear_report_503';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Park_report_504 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Park_report_504, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Park_report_504.displayName = 'proto.apollo.canbus.Park_report_504';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Vcu_report_505 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Vcu_report_505, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Vcu_report_505.displayName = 'proto.apollo.canbus.Vcu_report_505';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Wheelspeed_report_506 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Wheelspeed_report_506, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Wheelspeed_report_506.displayName = 'proto.apollo.canbus.Wheelspeed_report_506';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Ultr_sensor_1_507 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Ultr_sensor_1_507, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Ultr_sensor_1_507.displayName = 'proto.apollo.canbus.Ultr_sensor_1_507';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Ultr_sensor_2_508 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Ultr_sensor_2_508, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Ultr_sensor_2_508.displayName = 'proto.apollo.canbus.Ultr_sensor_2_508';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Ultr_sensor_3_509 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Ultr_sensor_3_509, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Ultr_sensor_3_509.displayName = 'proto.apollo.canbus.Ultr_sensor_3_509';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Ultr_sensor_4_510 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Ultr_sensor_4_510, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Ultr_sensor_4_510.displayName = 'proto.apollo.canbus.Ultr_sensor_4_510';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Ultr_sensor_5_511 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Ultr_sensor_5_511, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Ultr_sensor_5_511.displayName = 'proto.apollo.canbus.Ultr_sensor_5_511';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Bms_report_512 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Bms_report_512, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Bms_report_512.displayName = 'proto.apollo.canbus.Bms_report_512';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Devkit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Devkit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Devkit.displayName = 'proto.apollo.canbus.Devkit';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Throttle_command_100.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Throttle_command_100.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Throttle_command_100} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Throttle_command_100.toObject = function(includeInstance, msg) {
  var f, obj = {
    throttleAcc: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    checksum100: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    throttlePedalTarget: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    throttleEnCtrl: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Throttle_command_100 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Throttle_command_100.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.throttleAcc;

  /** @type {?|undefined} */
  this.checksum100;

  /** @type {?|undefined} */
  this.throttlePedalTarget;

  /** @type {?|undefined} */
  this.throttleEnCtrl;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Throttle_command_100.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Throttle_command_100}
 */
proto.apollo.canbus.Throttle_command_100.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Throttle_command_100();
  obj.throttleAcc != null && jspb.Message.setField(msg, 1, obj.throttleAcc);
  obj.checksum100 != null && jspb.Message.setField(msg, 2, obj.checksum100);
  obj.throttlePedalTarget != null && jspb.Message.setField(msg, 3, obj.throttlePedalTarget);
  obj.throttleEnCtrl != null && jspb.Message.setField(msg, 4, obj.throttleEnCtrl);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Throttle_command_100}
 */
proto.apollo.canbus.Throttle_command_100.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Throttle_command_100;
  return proto.apollo.canbus.Throttle_command_100.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Throttle_command_100} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Throttle_command_100}
 */
proto.apollo.canbus.Throttle_command_100.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setThrottleAcc(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChecksum100(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setThrottlePedalTarget(value);
      break;
    case 4:
      var value = /** @type {!proto.apollo.canbus.Throttle_command_100.Throttle_en_ctrlType} */ (reader.readEnum());
      msg.setThrottleEnCtrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Throttle_command_100.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Throttle_command_100.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Throttle_command_100} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Throttle_command_100.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Throttle_command_100.Throttle_en_ctrlType} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Throttle_command_100.Throttle_en_ctrlType = {
  THROTTLE_EN_CTRL_DISABLE: 0,
  THROTTLE_EN_CTRL_ENABLE: 1
};

/**
 * optional double throttle_acc = 1;
 * @return {number}
 */
proto.apollo.canbus.Throttle_command_100.prototype.getThrottleAcc = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Throttle_command_100} returns this
 */
proto.apollo.canbus.Throttle_command_100.prototype.setThrottleAcc = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Throttle_command_100} returns this
 */
proto.apollo.canbus.Throttle_command_100.prototype.clearThrottleAcc = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Throttle_command_100.prototype.hasThrottleAcc = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 checksum_100 = 2;
 * @return {number}
 */
proto.apollo.canbus.Throttle_command_100.prototype.getChecksum100 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Throttle_command_100} returns this
 */
proto.apollo.canbus.Throttle_command_100.prototype.setChecksum100 = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Throttle_command_100} returns this
 */
proto.apollo.canbus.Throttle_command_100.prototype.clearChecksum100 = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Throttle_command_100.prototype.hasChecksum100 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double throttle_pedal_target = 3;
 * @return {number}
 */
proto.apollo.canbus.Throttle_command_100.prototype.getThrottlePedalTarget = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Throttle_command_100} returns this
 */
proto.apollo.canbus.Throttle_command_100.prototype.setThrottlePedalTarget = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Throttle_command_100} returns this
 */
proto.apollo.canbus.Throttle_command_100.prototype.clearThrottlePedalTarget = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Throttle_command_100.prototype.hasThrottlePedalTarget = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Throttle_en_ctrlType throttle_en_ctrl = 4;
 * @return {!proto.apollo.canbus.Throttle_command_100.Throttle_en_ctrlType}
 */
proto.apollo.canbus.Throttle_command_100.prototype.getThrottleEnCtrl = function() {
  return /** @type {!proto.apollo.canbus.Throttle_command_100.Throttle_en_ctrlType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.apollo.canbus.Throttle_command_100.Throttle_en_ctrlType} value
 * @return {!proto.apollo.canbus.Throttle_command_100} returns this
 */
proto.apollo.canbus.Throttle_command_100.prototype.setThrottleEnCtrl = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Throttle_command_100} returns this
 */
proto.apollo.canbus.Throttle_command_100.prototype.clearThrottleEnCtrl = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Throttle_command_100.prototype.hasThrottleEnCtrl = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Brake_command_101.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Brake_command_101.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Brake_command_101} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Brake_command_101.toObject = function(includeInstance, msg) {
  var f, obj = {
    brakeDec: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    checksum101: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    brakePedalTarget: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    brakeEnCtrl: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    aebEnCtrl: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Brake_command_101 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Brake_command_101.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.brakeDec;

  /** @type {?|undefined} */
  this.checksum101;

  /** @type {?|undefined} */
  this.brakePedalTarget;

  /** @type {?|undefined} */
  this.brakeEnCtrl;

  /** @type {?|undefined} */
  this.aebEnCtrl;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Brake_command_101.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Brake_command_101}
 */
proto.apollo.canbus.Brake_command_101.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Brake_command_101();
  obj.brakeDec != null && jspb.Message.setField(msg, 1, obj.brakeDec);
  obj.checksum101 != null && jspb.Message.setField(msg, 2, obj.checksum101);
  obj.brakePedalTarget != null && jspb.Message.setField(msg, 3, obj.brakePedalTarget);
  obj.brakeEnCtrl != null && jspb.Message.setField(msg, 4, obj.brakeEnCtrl);
  obj.aebEnCtrl != null && jspb.Message.setField(msg, 5, obj.aebEnCtrl);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Brake_command_101}
 */
proto.apollo.canbus.Brake_command_101.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Brake_command_101;
  return proto.apollo.canbus.Brake_command_101.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Brake_command_101} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Brake_command_101}
 */
proto.apollo.canbus.Brake_command_101.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBrakeDec(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChecksum101(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBrakePedalTarget(value);
      break;
    case 4:
      var value = /** @type {!proto.apollo.canbus.Brake_command_101.Brake_en_ctrlType} */ (reader.readEnum());
      msg.setBrakeEnCtrl(value);
      break;
    case 5:
      var value = /** @type {!proto.apollo.canbus.Brake_command_101.Aeb_en_ctrlType} */ (reader.readEnum());
      msg.setAebEnCtrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Brake_command_101.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Brake_command_101.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Brake_command_101} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Brake_command_101.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Brake_command_101.Brake_en_ctrlType} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Brake_command_101.Aeb_en_ctrlType} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Brake_command_101.Aeb_en_ctrlType = {
  AEB_EN_CTRL_DISABLE_AEB: 0,
  AEB_EN_CTRL_ENABLE_AEB: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Brake_command_101.Brake_en_ctrlType = {
  BRAKE_EN_CTRL_DISABLE: 0,
  BRAKE_EN_CTRL_ENABLE: 1
};

/**
 * optional double brake_dec = 1;
 * @return {number}
 */
proto.apollo.canbus.Brake_command_101.prototype.getBrakeDec = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Brake_command_101} returns this
 */
proto.apollo.canbus.Brake_command_101.prototype.setBrakeDec = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Brake_command_101} returns this
 */
proto.apollo.canbus.Brake_command_101.prototype.clearBrakeDec = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Brake_command_101.prototype.hasBrakeDec = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 checksum_101 = 2;
 * @return {number}
 */
proto.apollo.canbus.Brake_command_101.prototype.getChecksum101 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Brake_command_101} returns this
 */
proto.apollo.canbus.Brake_command_101.prototype.setChecksum101 = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Brake_command_101} returns this
 */
proto.apollo.canbus.Brake_command_101.prototype.clearChecksum101 = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Brake_command_101.prototype.hasChecksum101 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double brake_pedal_target = 3;
 * @return {number}
 */
proto.apollo.canbus.Brake_command_101.prototype.getBrakePedalTarget = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Brake_command_101} returns this
 */
proto.apollo.canbus.Brake_command_101.prototype.setBrakePedalTarget = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Brake_command_101} returns this
 */
proto.apollo.canbus.Brake_command_101.prototype.clearBrakePedalTarget = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Brake_command_101.prototype.hasBrakePedalTarget = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Brake_en_ctrlType brake_en_ctrl = 4;
 * @return {!proto.apollo.canbus.Brake_command_101.Brake_en_ctrlType}
 */
proto.apollo.canbus.Brake_command_101.prototype.getBrakeEnCtrl = function() {
  return /** @type {!proto.apollo.canbus.Brake_command_101.Brake_en_ctrlType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.apollo.canbus.Brake_command_101.Brake_en_ctrlType} value
 * @return {!proto.apollo.canbus.Brake_command_101} returns this
 */
proto.apollo.canbus.Brake_command_101.prototype.setBrakeEnCtrl = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Brake_command_101} returns this
 */
proto.apollo.canbus.Brake_command_101.prototype.clearBrakeEnCtrl = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Brake_command_101.prototype.hasBrakeEnCtrl = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Aeb_en_ctrlType aeb_en_ctrl = 5;
 * @return {!proto.apollo.canbus.Brake_command_101.Aeb_en_ctrlType}
 */
proto.apollo.canbus.Brake_command_101.prototype.getAebEnCtrl = function() {
  return /** @type {!proto.apollo.canbus.Brake_command_101.Aeb_en_ctrlType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.apollo.canbus.Brake_command_101.Aeb_en_ctrlType} value
 * @return {!proto.apollo.canbus.Brake_command_101} returns this
 */
proto.apollo.canbus.Brake_command_101.prototype.setAebEnCtrl = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Brake_command_101} returns this
 */
proto.apollo.canbus.Brake_command_101.prototype.clearAebEnCtrl = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Brake_command_101.prototype.hasAebEnCtrl = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Steering_command_102.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Steering_command_102.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Steering_command_102} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Steering_command_102.toObject = function(includeInstance, msg) {
  var f, obj = {
    steerEnCtrl: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    steerAngleTarget: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    steerAngleSpd: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    checksum102: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Steering_command_102 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Steering_command_102.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.steerEnCtrl;

  /** @type {?|undefined} */
  this.steerAngleTarget;

  /** @type {?|undefined} */
  this.steerAngleSpd;

  /** @type {?|undefined} */
  this.checksum102;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Steering_command_102.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Steering_command_102}
 */
proto.apollo.canbus.Steering_command_102.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Steering_command_102();
  obj.steerEnCtrl != null && jspb.Message.setField(msg, 1, obj.steerEnCtrl);
  obj.steerAngleTarget != null && jspb.Message.setField(msg, 2, obj.steerAngleTarget);
  obj.steerAngleSpd != null && jspb.Message.setField(msg, 3, obj.steerAngleSpd);
  obj.checksum102 != null && jspb.Message.setField(msg, 4, obj.checksum102);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Steering_command_102}
 */
proto.apollo.canbus.Steering_command_102.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Steering_command_102;
  return proto.apollo.canbus.Steering_command_102.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Steering_command_102} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Steering_command_102}
 */
proto.apollo.canbus.Steering_command_102.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.canbus.Steering_command_102.Steer_en_ctrlType} */ (reader.readEnum());
      msg.setSteerEnCtrl(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSteerAngleTarget(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSteerAngleSpd(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChecksum102(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Steering_command_102.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Steering_command_102.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Steering_command_102} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Steering_command_102.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.canbus.Steering_command_102.Steer_en_ctrlType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Steering_command_102.Steer_en_ctrlType = {
  STEER_EN_CTRL_DISABLE: 0,
  STEER_EN_CTRL_ENABLE: 1
};

/**
 * optional Steer_en_ctrlType steer_en_ctrl = 1;
 * @return {!proto.apollo.canbus.Steering_command_102.Steer_en_ctrlType}
 */
proto.apollo.canbus.Steering_command_102.prototype.getSteerEnCtrl = function() {
  return /** @type {!proto.apollo.canbus.Steering_command_102.Steer_en_ctrlType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.canbus.Steering_command_102.Steer_en_ctrlType} value
 * @return {!proto.apollo.canbus.Steering_command_102} returns this
 */
proto.apollo.canbus.Steering_command_102.prototype.setSteerEnCtrl = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Steering_command_102} returns this
 */
proto.apollo.canbus.Steering_command_102.prototype.clearSteerEnCtrl = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Steering_command_102.prototype.hasSteerEnCtrl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 steer_angle_target = 2;
 * @return {number}
 */
proto.apollo.canbus.Steering_command_102.prototype.getSteerAngleTarget = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Steering_command_102} returns this
 */
proto.apollo.canbus.Steering_command_102.prototype.setSteerAngleTarget = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Steering_command_102} returns this
 */
proto.apollo.canbus.Steering_command_102.prototype.clearSteerAngleTarget = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Steering_command_102.prototype.hasSteerAngleTarget = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 steer_angle_spd = 3;
 * @return {number}
 */
proto.apollo.canbus.Steering_command_102.prototype.getSteerAngleSpd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Steering_command_102} returns this
 */
proto.apollo.canbus.Steering_command_102.prototype.setSteerAngleSpd = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Steering_command_102} returns this
 */
proto.apollo.canbus.Steering_command_102.prototype.clearSteerAngleSpd = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Steering_command_102.prototype.hasSteerAngleSpd = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 checksum_102 = 4;
 * @return {number}
 */
proto.apollo.canbus.Steering_command_102.prototype.getChecksum102 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Steering_command_102} returns this
 */
proto.apollo.canbus.Steering_command_102.prototype.setChecksum102 = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Steering_command_102} returns this
 */
proto.apollo.canbus.Steering_command_102.prototype.clearChecksum102 = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Steering_command_102.prototype.hasChecksum102 = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Gear_command_103.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Gear_command_103.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Gear_command_103} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Gear_command_103.toObject = function(includeInstance, msg) {
  var f, obj = {
    gearTarget: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    gearEnCtrl: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    checksum103: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Gear_command_103 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Gear_command_103.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.gearTarget;

  /** @type {?|undefined} */
  this.gearEnCtrl;

  /** @type {?|undefined} */
  this.checksum103;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Gear_command_103.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Gear_command_103}
 */
proto.apollo.canbus.Gear_command_103.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Gear_command_103();
  obj.gearTarget != null && jspb.Message.setField(msg, 1, obj.gearTarget);
  obj.gearEnCtrl != null && jspb.Message.setField(msg, 2, obj.gearEnCtrl);
  obj.checksum103 != null && jspb.Message.setField(msg, 3, obj.checksum103);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Gear_command_103}
 */
proto.apollo.canbus.Gear_command_103.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Gear_command_103;
  return proto.apollo.canbus.Gear_command_103.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Gear_command_103} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Gear_command_103}
 */
proto.apollo.canbus.Gear_command_103.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.canbus.Gear_command_103.Gear_targetType} */ (reader.readEnum());
      msg.setGearTarget(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.canbus.Gear_command_103.Gear_en_ctrlType} */ (reader.readEnum());
      msg.setGearEnCtrl(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChecksum103(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Gear_command_103.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Gear_command_103.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Gear_command_103} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Gear_command_103.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.canbus.Gear_command_103.Gear_targetType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Gear_command_103.Gear_en_ctrlType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Gear_command_103.Gear_targetType = {
  GEAR_TARGET_INVALID: 0,
  GEAR_TARGET_PARK: 1,
  GEAR_TARGET_REVERSE: 2,
  GEAR_TARGET_NEUTRAL: 3,
  GEAR_TARGET_DRIVE: 4
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Gear_command_103.Gear_en_ctrlType = {
  GEAR_EN_CTRL_DISABLE: 0,
  GEAR_EN_CTRL_ENABLE: 1
};

/**
 * optional Gear_targetType gear_target = 1;
 * @return {!proto.apollo.canbus.Gear_command_103.Gear_targetType}
 */
proto.apollo.canbus.Gear_command_103.prototype.getGearTarget = function() {
  return /** @type {!proto.apollo.canbus.Gear_command_103.Gear_targetType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.canbus.Gear_command_103.Gear_targetType} value
 * @return {!proto.apollo.canbus.Gear_command_103} returns this
 */
proto.apollo.canbus.Gear_command_103.prototype.setGearTarget = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Gear_command_103} returns this
 */
proto.apollo.canbus.Gear_command_103.prototype.clearGearTarget = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Gear_command_103.prototype.hasGearTarget = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Gear_en_ctrlType gear_en_ctrl = 2;
 * @return {!proto.apollo.canbus.Gear_command_103.Gear_en_ctrlType}
 */
proto.apollo.canbus.Gear_command_103.prototype.getGearEnCtrl = function() {
  return /** @type {!proto.apollo.canbus.Gear_command_103.Gear_en_ctrlType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.apollo.canbus.Gear_command_103.Gear_en_ctrlType} value
 * @return {!proto.apollo.canbus.Gear_command_103} returns this
 */
proto.apollo.canbus.Gear_command_103.prototype.setGearEnCtrl = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Gear_command_103} returns this
 */
proto.apollo.canbus.Gear_command_103.prototype.clearGearEnCtrl = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Gear_command_103.prototype.hasGearEnCtrl = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 checksum_103 = 3;
 * @return {number}
 */
proto.apollo.canbus.Gear_command_103.prototype.getChecksum103 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Gear_command_103} returns this
 */
proto.apollo.canbus.Gear_command_103.prototype.setChecksum103 = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Gear_command_103} returns this
 */
proto.apollo.canbus.Gear_command_103.prototype.clearChecksum103 = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Gear_command_103.prototype.hasChecksum103 = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Park_command_104.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Park_command_104.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Park_command_104} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Park_command_104.toObject = function(includeInstance, msg) {
  var f, obj = {
    checksum104: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    parkTarget: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    parkEnCtrl: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Park_command_104 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Park_command_104.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.checksum104;

  /** @type {?|undefined} */
  this.parkTarget;

  /** @type {?|undefined} */
  this.parkEnCtrl;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Park_command_104.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Park_command_104}
 */
proto.apollo.canbus.Park_command_104.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Park_command_104();
  obj.checksum104 != null && jspb.Message.setField(msg, 1, obj.checksum104);
  obj.parkTarget != null && jspb.Message.setField(msg, 2, obj.parkTarget);
  obj.parkEnCtrl != null && jspb.Message.setField(msg, 3, obj.parkEnCtrl);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Park_command_104}
 */
proto.apollo.canbus.Park_command_104.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Park_command_104;
  return proto.apollo.canbus.Park_command_104.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Park_command_104} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Park_command_104}
 */
proto.apollo.canbus.Park_command_104.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChecksum104(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.canbus.Park_command_104.Park_targetType} */ (reader.readEnum());
      msg.setParkTarget(value);
      break;
    case 3:
      var value = /** @type {!proto.apollo.canbus.Park_command_104.Park_en_ctrlType} */ (reader.readEnum());
      msg.setParkEnCtrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Park_command_104.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Park_command_104.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Park_command_104} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Park_command_104.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Park_command_104.Park_targetType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Park_command_104.Park_en_ctrlType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Park_command_104.Park_targetType = {
  PARK_TARGET_RELEASE: 0,
  PARK_TARGET_PARKING_TRIGGER: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Park_command_104.Park_en_ctrlType = {
  PARK_EN_CTRL_DISABLE: 0,
  PARK_EN_CTRL_ENABLE: 1
};

/**
 * optional int32 checksum_104 = 1;
 * @return {number}
 */
proto.apollo.canbus.Park_command_104.prototype.getChecksum104 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Park_command_104} returns this
 */
proto.apollo.canbus.Park_command_104.prototype.setChecksum104 = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Park_command_104} returns this
 */
proto.apollo.canbus.Park_command_104.prototype.clearChecksum104 = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Park_command_104.prototype.hasChecksum104 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Park_targetType park_target = 2;
 * @return {!proto.apollo.canbus.Park_command_104.Park_targetType}
 */
proto.apollo.canbus.Park_command_104.prototype.getParkTarget = function() {
  return /** @type {!proto.apollo.canbus.Park_command_104.Park_targetType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.apollo.canbus.Park_command_104.Park_targetType} value
 * @return {!proto.apollo.canbus.Park_command_104} returns this
 */
proto.apollo.canbus.Park_command_104.prototype.setParkTarget = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Park_command_104} returns this
 */
proto.apollo.canbus.Park_command_104.prototype.clearParkTarget = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Park_command_104.prototype.hasParkTarget = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Park_en_ctrlType park_en_ctrl = 3;
 * @return {!proto.apollo.canbus.Park_command_104.Park_en_ctrlType}
 */
proto.apollo.canbus.Park_command_104.prototype.getParkEnCtrl = function() {
  return /** @type {!proto.apollo.canbus.Park_command_104.Park_en_ctrlType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.apollo.canbus.Park_command_104.Park_en_ctrlType} value
 * @return {!proto.apollo.canbus.Park_command_104} returns this
 */
proto.apollo.canbus.Park_command_104.prototype.setParkEnCtrl = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Park_command_104} returns this
 */
proto.apollo.canbus.Park_command_104.prototype.clearParkEnCtrl = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Park_command_104.prototype.hasParkEnCtrl = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Throttle_report_500.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Throttle_report_500.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Throttle_report_500} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Throttle_report_500.toObject = function(includeInstance, msg) {
  var f, obj = {
    throttlePedalActual: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    throttleFlt2: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    throttleFlt1: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    throttleEnState: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Throttle_report_500 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Throttle_report_500.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.throttlePedalActual;

  /** @type {?|undefined} */
  this.throttleFlt2;

  /** @type {?|undefined} */
  this.throttleFlt1;

  /** @type {?|undefined} */
  this.throttleEnState;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Throttle_report_500.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Throttle_report_500}
 */
proto.apollo.canbus.Throttle_report_500.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Throttle_report_500();
  obj.throttlePedalActual != null && jspb.Message.setField(msg, 1, obj.throttlePedalActual);
  obj.throttleFlt2 != null && jspb.Message.setField(msg, 2, obj.throttleFlt2);
  obj.throttleFlt1 != null && jspb.Message.setField(msg, 3, obj.throttleFlt1);
  obj.throttleEnState != null && jspb.Message.setField(msg, 4, obj.throttleEnState);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Throttle_report_500}
 */
proto.apollo.canbus.Throttle_report_500.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Throttle_report_500;
  return proto.apollo.canbus.Throttle_report_500.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Throttle_report_500} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Throttle_report_500}
 */
proto.apollo.canbus.Throttle_report_500.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setThrottlePedalActual(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.canbus.Throttle_report_500.Throttle_flt2Type} */ (reader.readEnum());
      msg.setThrottleFlt2(value);
      break;
    case 3:
      var value = /** @type {!proto.apollo.canbus.Throttle_report_500.Throttle_flt1Type} */ (reader.readEnum());
      msg.setThrottleFlt1(value);
      break;
    case 4:
      var value = /** @type {!proto.apollo.canbus.Throttle_report_500.Throttle_en_stateType} */ (reader.readEnum());
      msg.setThrottleEnState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Throttle_report_500.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Throttle_report_500.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Throttle_report_500} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Throttle_report_500.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Throttle_report_500.Throttle_flt2Type} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Throttle_report_500.Throttle_flt1Type} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Throttle_report_500.Throttle_en_stateType} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Throttle_report_500.Throttle_flt2Type = {
  THROTTLE_FLT2_NO_FAULT: 0,
  THROTTLE_FLT2_DRIVE_SYSTEM_COMUNICATION_FAULT: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Throttle_report_500.Throttle_flt1Type = {
  THROTTLE_FLT1_NO_FAULT: 0,
  THROTTLE_FLT1_DRIVE_SYSTEM_HARDWARE_FAULT: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Throttle_report_500.Throttle_en_stateType = {
  THROTTLE_EN_STATE_MANUAL: 0,
  THROTTLE_EN_STATE_AUTO: 1,
  THROTTLE_EN_STATE_TAKEOVER: 2,
  THROTTLE_EN_STATE_STANDBY: 3
};

/**
 * optional double throttle_pedal_actual = 1;
 * @return {number}
 */
proto.apollo.canbus.Throttle_report_500.prototype.getThrottlePedalActual = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Throttle_report_500} returns this
 */
proto.apollo.canbus.Throttle_report_500.prototype.setThrottlePedalActual = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Throttle_report_500} returns this
 */
proto.apollo.canbus.Throttle_report_500.prototype.clearThrottlePedalActual = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Throttle_report_500.prototype.hasThrottlePedalActual = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Throttle_flt2Type throttle_flt2 = 2;
 * @return {!proto.apollo.canbus.Throttle_report_500.Throttle_flt2Type}
 */
proto.apollo.canbus.Throttle_report_500.prototype.getThrottleFlt2 = function() {
  return /** @type {!proto.apollo.canbus.Throttle_report_500.Throttle_flt2Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.apollo.canbus.Throttle_report_500.Throttle_flt2Type} value
 * @return {!proto.apollo.canbus.Throttle_report_500} returns this
 */
proto.apollo.canbus.Throttle_report_500.prototype.setThrottleFlt2 = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Throttle_report_500} returns this
 */
proto.apollo.canbus.Throttle_report_500.prototype.clearThrottleFlt2 = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Throttle_report_500.prototype.hasThrottleFlt2 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Throttle_flt1Type throttle_flt1 = 3;
 * @return {!proto.apollo.canbus.Throttle_report_500.Throttle_flt1Type}
 */
proto.apollo.canbus.Throttle_report_500.prototype.getThrottleFlt1 = function() {
  return /** @type {!proto.apollo.canbus.Throttle_report_500.Throttle_flt1Type} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.apollo.canbus.Throttle_report_500.Throttle_flt1Type} value
 * @return {!proto.apollo.canbus.Throttle_report_500} returns this
 */
proto.apollo.canbus.Throttle_report_500.prototype.setThrottleFlt1 = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Throttle_report_500} returns this
 */
proto.apollo.canbus.Throttle_report_500.prototype.clearThrottleFlt1 = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Throttle_report_500.prototype.hasThrottleFlt1 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Throttle_en_stateType throttle_en_state = 4;
 * @return {!proto.apollo.canbus.Throttle_report_500.Throttle_en_stateType}
 */
proto.apollo.canbus.Throttle_report_500.prototype.getThrottleEnState = function() {
  return /** @type {!proto.apollo.canbus.Throttle_report_500.Throttle_en_stateType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.apollo.canbus.Throttle_report_500.Throttle_en_stateType} value
 * @return {!proto.apollo.canbus.Throttle_report_500} returns this
 */
proto.apollo.canbus.Throttle_report_500.prototype.setThrottleEnState = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Throttle_report_500} returns this
 */
proto.apollo.canbus.Throttle_report_500.prototype.clearThrottleEnState = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Throttle_report_500.prototype.hasThrottleEnState = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Brake_report_501.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Brake_report_501.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Brake_report_501} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Brake_report_501.toObject = function(includeInstance, msg) {
  var f, obj = {
    brakePedalActual: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    brakeFlt2: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    brakeFlt1: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    brakeEnState: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Brake_report_501 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Brake_report_501.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.brakePedalActual;

  /** @type {?|undefined} */
  this.brakeFlt2;

  /** @type {?|undefined} */
  this.brakeFlt1;

  /** @type {?|undefined} */
  this.brakeEnState;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Brake_report_501.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Brake_report_501}
 */
proto.apollo.canbus.Brake_report_501.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Brake_report_501();
  obj.brakePedalActual != null && jspb.Message.setField(msg, 1, obj.brakePedalActual);
  obj.brakeFlt2 != null && jspb.Message.setField(msg, 2, obj.brakeFlt2);
  obj.brakeFlt1 != null && jspb.Message.setField(msg, 3, obj.brakeFlt1);
  obj.brakeEnState != null && jspb.Message.setField(msg, 4, obj.brakeEnState);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Brake_report_501}
 */
proto.apollo.canbus.Brake_report_501.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Brake_report_501;
  return proto.apollo.canbus.Brake_report_501.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Brake_report_501} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Brake_report_501}
 */
proto.apollo.canbus.Brake_report_501.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBrakePedalActual(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.canbus.Brake_report_501.Brake_flt2Type} */ (reader.readEnum());
      msg.setBrakeFlt2(value);
      break;
    case 3:
      var value = /** @type {!proto.apollo.canbus.Brake_report_501.Brake_flt1Type} */ (reader.readEnum());
      msg.setBrakeFlt1(value);
      break;
    case 4:
      var value = /** @type {!proto.apollo.canbus.Brake_report_501.Brake_en_stateType} */ (reader.readEnum());
      msg.setBrakeEnState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Brake_report_501.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Brake_report_501.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Brake_report_501} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Brake_report_501.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Brake_report_501.Brake_flt2Type} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Brake_report_501.Brake_flt1Type} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Brake_report_501.Brake_en_stateType} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Brake_report_501.Brake_flt2Type = {
  BRAKE_FLT2_NO_FAULT: 0,
  BRAKE_FLT2_BRAKE_SYSTEM_COMUNICATION_FAULT: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Brake_report_501.Brake_flt1Type = {
  BRAKE_FLT1_NO_FAULT: 0,
  BRAKE_FLT1_BRAKE_SYSTEM_HARDWARE_FAULT: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Brake_report_501.Brake_en_stateType = {
  BRAKE_EN_STATE_MANUAL: 0,
  BRAKE_EN_STATE_AUTO: 1,
  BRAKE_EN_STATE_TAKEOVER: 2,
  BRAKE_EN_STATE_STANDBY: 3
};

/**
 * optional double brake_pedal_actual = 1;
 * @return {number}
 */
proto.apollo.canbus.Brake_report_501.prototype.getBrakePedalActual = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Brake_report_501} returns this
 */
proto.apollo.canbus.Brake_report_501.prototype.setBrakePedalActual = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Brake_report_501} returns this
 */
proto.apollo.canbus.Brake_report_501.prototype.clearBrakePedalActual = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Brake_report_501.prototype.hasBrakePedalActual = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Brake_flt2Type brake_flt2 = 2;
 * @return {!proto.apollo.canbus.Brake_report_501.Brake_flt2Type}
 */
proto.apollo.canbus.Brake_report_501.prototype.getBrakeFlt2 = function() {
  return /** @type {!proto.apollo.canbus.Brake_report_501.Brake_flt2Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.apollo.canbus.Brake_report_501.Brake_flt2Type} value
 * @return {!proto.apollo.canbus.Brake_report_501} returns this
 */
proto.apollo.canbus.Brake_report_501.prototype.setBrakeFlt2 = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Brake_report_501} returns this
 */
proto.apollo.canbus.Brake_report_501.prototype.clearBrakeFlt2 = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Brake_report_501.prototype.hasBrakeFlt2 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Brake_flt1Type brake_flt1 = 3;
 * @return {!proto.apollo.canbus.Brake_report_501.Brake_flt1Type}
 */
proto.apollo.canbus.Brake_report_501.prototype.getBrakeFlt1 = function() {
  return /** @type {!proto.apollo.canbus.Brake_report_501.Brake_flt1Type} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.apollo.canbus.Brake_report_501.Brake_flt1Type} value
 * @return {!proto.apollo.canbus.Brake_report_501} returns this
 */
proto.apollo.canbus.Brake_report_501.prototype.setBrakeFlt1 = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Brake_report_501} returns this
 */
proto.apollo.canbus.Brake_report_501.prototype.clearBrakeFlt1 = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Brake_report_501.prototype.hasBrakeFlt1 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Brake_en_stateType brake_en_state = 4;
 * @return {!proto.apollo.canbus.Brake_report_501.Brake_en_stateType}
 */
proto.apollo.canbus.Brake_report_501.prototype.getBrakeEnState = function() {
  return /** @type {!proto.apollo.canbus.Brake_report_501.Brake_en_stateType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.apollo.canbus.Brake_report_501.Brake_en_stateType} value
 * @return {!proto.apollo.canbus.Brake_report_501} returns this
 */
proto.apollo.canbus.Brake_report_501.prototype.setBrakeEnState = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Brake_report_501} returns this
 */
proto.apollo.canbus.Brake_report_501.prototype.clearBrakeEnState = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Brake_report_501.prototype.hasBrakeEnState = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Steering_report_502.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Steering_report_502.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Steering_report_502} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Steering_report_502.toObject = function(includeInstance, msg) {
  var f, obj = {
    steerAngleSpdActual: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    steerFlt2: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    steerFlt1: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    steerEnState: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    steerAngleActual: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Steering_report_502 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Steering_report_502.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.steerAngleSpdActual;

  /** @type {?|undefined} */
  this.steerFlt2;

  /** @type {?|undefined} */
  this.steerFlt1;

  /** @type {?|undefined} */
  this.steerEnState;

  /** @type {?|undefined} */
  this.steerAngleActual;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Steering_report_502.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Steering_report_502}
 */
proto.apollo.canbus.Steering_report_502.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Steering_report_502();
  obj.steerAngleSpdActual != null && jspb.Message.setField(msg, 1, obj.steerAngleSpdActual);
  obj.steerFlt2 != null && jspb.Message.setField(msg, 2, obj.steerFlt2);
  obj.steerFlt1 != null && jspb.Message.setField(msg, 3, obj.steerFlt1);
  obj.steerEnState != null && jspb.Message.setField(msg, 4, obj.steerEnState);
  obj.steerAngleActual != null && jspb.Message.setField(msg, 5, obj.steerAngleActual);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Steering_report_502}
 */
proto.apollo.canbus.Steering_report_502.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Steering_report_502;
  return proto.apollo.canbus.Steering_report_502.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Steering_report_502} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Steering_report_502}
 */
proto.apollo.canbus.Steering_report_502.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSteerAngleSpdActual(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.canbus.Steering_report_502.Steer_flt2Type} */ (reader.readEnum());
      msg.setSteerFlt2(value);
      break;
    case 3:
      var value = /** @type {!proto.apollo.canbus.Steering_report_502.Steer_flt1Type} */ (reader.readEnum());
      msg.setSteerFlt1(value);
      break;
    case 4:
      var value = /** @type {!proto.apollo.canbus.Steering_report_502.Steer_en_stateType} */ (reader.readEnum());
      msg.setSteerEnState(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSteerAngleActual(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Steering_report_502.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Steering_report_502.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Steering_report_502} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Steering_report_502.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Steering_report_502.Steer_flt2Type} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Steering_report_502.Steer_flt1Type} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Steering_report_502.Steer_en_stateType} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Steering_report_502.Steer_flt2Type = {
  STEER_FLT2_NO_FAULT: 0,
  STEER_FLT2_STEER_SYSTEM_COMUNICATION_FAULT: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Steering_report_502.Steer_flt1Type = {
  STEER_FLT1_NO_FAULT: 0,
  STEER_FLT1_STEER_SYSTEM_HARDWARE_FAULT: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Steering_report_502.Steer_en_stateType = {
  STEER_EN_STATE_MANUAL: 0,
  STEER_EN_STATE_AUTO: 1,
  STEER_EN_STATE_TAKEOVER: 2,
  STEER_EN_STATE_STANDBY: 3
};

/**
 * optional int32 steer_angle_spd_actual = 1;
 * @return {number}
 */
proto.apollo.canbus.Steering_report_502.prototype.getSteerAngleSpdActual = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Steering_report_502} returns this
 */
proto.apollo.canbus.Steering_report_502.prototype.setSteerAngleSpdActual = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Steering_report_502} returns this
 */
proto.apollo.canbus.Steering_report_502.prototype.clearSteerAngleSpdActual = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Steering_report_502.prototype.hasSteerAngleSpdActual = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Steer_flt2Type steer_flt2 = 2;
 * @return {!proto.apollo.canbus.Steering_report_502.Steer_flt2Type}
 */
proto.apollo.canbus.Steering_report_502.prototype.getSteerFlt2 = function() {
  return /** @type {!proto.apollo.canbus.Steering_report_502.Steer_flt2Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.apollo.canbus.Steering_report_502.Steer_flt2Type} value
 * @return {!proto.apollo.canbus.Steering_report_502} returns this
 */
proto.apollo.canbus.Steering_report_502.prototype.setSteerFlt2 = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Steering_report_502} returns this
 */
proto.apollo.canbus.Steering_report_502.prototype.clearSteerFlt2 = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Steering_report_502.prototype.hasSteerFlt2 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Steer_flt1Type steer_flt1 = 3;
 * @return {!proto.apollo.canbus.Steering_report_502.Steer_flt1Type}
 */
proto.apollo.canbus.Steering_report_502.prototype.getSteerFlt1 = function() {
  return /** @type {!proto.apollo.canbus.Steering_report_502.Steer_flt1Type} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.apollo.canbus.Steering_report_502.Steer_flt1Type} value
 * @return {!proto.apollo.canbus.Steering_report_502} returns this
 */
proto.apollo.canbus.Steering_report_502.prototype.setSteerFlt1 = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Steering_report_502} returns this
 */
proto.apollo.canbus.Steering_report_502.prototype.clearSteerFlt1 = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Steering_report_502.prototype.hasSteerFlt1 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Steer_en_stateType steer_en_state = 4;
 * @return {!proto.apollo.canbus.Steering_report_502.Steer_en_stateType}
 */
proto.apollo.canbus.Steering_report_502.prototype.getSteerEnState = function() {
  return /** @type {!proto.apollo.canbus.Steering_report_502.Steer_en_stateType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.apollo.canbus.Steering_report_502.Steer_en_stateType} value
 * @return {!proto.apollo.canbus.Steering_report_502} returns this
 */
proto.apollo.canbus.Steering_report_502.prototype.setSteerEnState = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Steering_report_502} returns this
 */
proto.apollo.canbus.Steering_report_502.prototype.clearSteerEnState = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Steering_report_502.prototype.hasSteerEnState = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 steer_angle_actual = 5;
 * @return {number}
 */
proto.apollo.canbus.Steering_report_502.prototype.getSteerAngleActual = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Steering_report_502} returns this
 */
proto.apollo.canbus.Steering_report_502.prototype.setSteerAngleActual = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Steering_report_502} returns this
 */
proto.apollo.canbus.Steering_report_502.prototype.clearSteerAngleActual = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Steering_report_502.prototype.hasSteerAngleActual = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Gear_report_503.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Gear_report_503.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Gear_report_503} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Gear_report_503.toObject = function(includeInstance, msg) {
  var f, obj = {
    gearFlt: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    gearActual: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Gear_report_503 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Gear_report_503.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.gearFlt;

  /** @type {?|undefined} */
  this.gearActual;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Gear_report_503.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Gear_report_503}
 */
proto.apollo.canbus.Gear_report_503.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Gear_report_503();
  obj.gearFlt != null && jspb.Message.setField(msg, 1, obj.gearFlt);
  obj.gearActual != null && jspb.Message.setField(msg, 2, obj.gearActual);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Gear_report_503}
 */
proto.apollo.canbus.Gear_report_503.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Gear_report_503;
  return proto.apollo.canbus.Gear_report_503.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Gear_report_503} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Gear_report_503}
 */
proto.apollo.canbus.Gear_report_503.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.canbus.Gear_report_503.Gear_fltType} */ (reader.readEnum());
      msg.setGearFlt(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.canbus.Gear_report_503.Gear_actualType} */ (reader.readEnum());
      msg.setGearActual(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Gear_report_503.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Gear_report_503.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Gear_report_503} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Gear_report_503.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.canbus.Gear_report_503.Gear_fltType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Gear_report_503.Gear_actualType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Gear_report_503.Gear_fltType = {
  GEAR_FLT_NO_FAULT: 0,
  GEAR_FLT_FAULT: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Gear_report_503.Gear_actualType = {
  GEAR_ACTUAL_INVALID: 0,
  GEAR_ACTUAL_PARK: 1,
  GEAR_ACTUAL_REVERSE: 2,
  GEAR_ACTUAL_NEUTRAL: 3,
  GEAR_ACTUAL_DRIVE: 4
};

/**
 * optional Gear_fltType gear_flt = 1;
 * @return {!proto.apollo.canbus.Gear_report_503.Gear_fltType}
 */
proto.apollo.canbus.Gear_report_503.prototype.getGearFlt = function() {
  return /** @type {!proto.apollo.canbus.Gear_report_503.Gear_fltType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.canbus.Gear_report_503.Gear_fltType} value
 * @return {!proto.apollo.canbus.Gear_report_503} returns this
 */
proto.apollo.canbus.Gear_report_503.prototype.setGearFlt = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Gear_report_503} returns this
 */
proto.apollo.canbus.Gear_report_503.prototype.clearGearFlt = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Gear_report_503.prototype.hasGearFlt = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Gear_actualType gear_actual = 2;
 * @return {!proto.apollo.canbus.Gear_report_503.Gear_actualType}
 */
proto.apollo.canbus.Gear_report_503.prototype.getGearActual = function() {
  return /** @type {!proto.apollo.canbus.Gear_report_503.Gear_actualType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.apollo.canbus.Gear_report_503.Gear_actualType} value
 * @return {!proto.apollo.canbus.Gear_report_503} returns this
 */
proto.apollo.canbus.Gear_report_503.prototype.setGearActual = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Gear_report_503} returns this
 */
proto.apollo.canbus.Gear_report_503.prototype.clearGearActual = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Gear_report_503.prototype.hasGearActual = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Park_report_504.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Park_report_504.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Park_report_504} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Park_report_504.toObject = function(includeInstance, msg) {
  var f, obj = {
    parkingActual: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    parkFlt: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Park_report_504 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Park_report_504.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.parkingActual;

  /** @type {?|undefined} */
  this.parkFlt;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Park_report_504.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Park_report_504}
 */
proto.apollo.canbus.Park_report_504.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Park_report_504();
  obj.parkingActual != null && jspb.Message.setField(msg, 1, obj.parkingActual);
  obj.parkFlt != null && jspb.Message.setField(msg, 2, obj.parkFlt);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Park_report_504}
 */
proto.apollo.canbus.Park_report_504.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Park_report_504;
  return proto.apollo.canbus.Park_report_504.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Park_report_504} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Park_report_504}
 */
proto.apollo.canbus.Park_report_504.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.canbus.Park_report_504.Parking_actualType} */ (reader.readEnum());
      msg.setParkingActual(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.canbus.Park_report_504.Park_fltType} */ (reader.readEnum());
      msg.setParkFlt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Park_report_504.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Park_report_504.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Park_report_504} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Park_report_504.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.canbus.Park_report_504.Parking_actualType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Park_report_504.Park_fltType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Park_report_504.Parking_actualType = {
  PARKING_ACTUAL_RELEASE: 0,
  PARKING_ACTUAL_PARKING_TRIGGER: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Park_report_504.Park_fltType = {
  PARK_FLT_NO_FAULT: 0,
  PARK_FLT_FAULT: 1
};

/**
 * optional Parking_actualType parking_actual = 1;
 * @return {!proto.apollo.canbus.Park_report_504.Parking_actualType}
 */
proto.apollo.canbus.Park_report_504.prototype.getParkingActual = function() {
  return /** @type {!proto.apollo.canbus.Park_report_504.Parking_actualType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.canbus.Park_report_504.Parking_actualType} value
 * @return {!proto.apollo.canbus.Park_report_504} returns this
 */
proto.apollo.canbus.Park_report_504.prototype.setParkingActual = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Park_report_504} returns this
 */
proto.apollo.canbus.Park_report_504.prototype.clearParkingActual = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Park_report_504.prototype.hasParkingActual = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Park_fltType park_flt = 2;
 * @return {!proto.apollo.canbus.Park_report_504.Park_fltType}
 */
proto.apollo.canbus.Park_report_504.prototype.getParkFlt = function() {
  return /** @type {!proto.apollo.canbus.Park_report_504.Park_fltType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.apollo.canbus.Park_report_504.Park_fltType} value
 * @return {!proto.apollo.canbus.Park_report_504} returns this
 */
proto.apollo.canbus.Park_report_504.prototype.setParkFlt = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Park_report_504} returns this
 */
proto.apollo.canbus.Park_report_504.prototype.clearParkFlt = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Park_report_504.prototype.hasParkFlt = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Vcu_report_505.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Vcu_report_505.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Vcu_report_505} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Vcu_report_505.toObject = function(includeInstance, msg) {
  var f, obj = {
    vehicleModeState: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    frontcrashState: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    backcrashState: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    aebState: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    acc: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    speed: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Vcu_report_505 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Vcu_report_505.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.vehicleModeState;

  /** @type {?|undefined} */
  this.frontcrashState;

  /** @type {?|undefined} */
  this.backcrashState;

  /** @type {?|undefined} */
  this.aebState;

  /** @type {?|undefined} */
  this.acc;

  /** @type {?|undefined} */
  this.speed;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Vcu_report_505.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Vcu_report_505}
 */
proto.apollo.canbus.Vcu_report_505.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Vcu_report_505();
  obj.vehicleModeState != null && jspb.Message.setField(msg, 1, obj.vehicleModeState);
  obj.frontcrashState != null && jspb.Message.setField(msg, 2, obj.frontcrashState);
  obj.backcrashState != null && jspb.Message.setField(msg, 3, obj.backcrashState);
  obj.aebState != null && jspb.Message.setField(msg, 4, obj.aebState);
  obj.acc != null && jspb.Message.setField(msg, 5, obj.acc);
  obj.speed != null && jspb.Message.setField(msg, 6, obj.speed);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Vcu_report_505}
 */
proto.apollo.canbus.Vcu_report_505.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Vcu_report_505;
  return proto.apollo.canbus.Vcu_report_505.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Vcu_report_505} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Vcu_report_505}
 */
proto.apollo.canbus.Vcu_report_505.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.canbus.Vcu_report_505.Vehicle_mode_stateType} */ (reader.readEnum());
      msg.setVehicleModeState(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.canbus.Vcu_report_505.Frontcrash_stateType} */ (reader.readEnum());
      msg.setFrontcrashState(value);
      break;
    case 3:
      var value = /** @type {!proto.apollo.canbus.Vcu_report_505.Backcrash_stateType} */ (reader.readEnum());
      msg.setBackcrashState(value);
      break;
    case 4:
      var value = /** @type {!proto.apollo.canbus.Vcu_report_505.Aeb_stateType} */ (reader.readEnum());
      msg.setAebState(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAcc(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSpeed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Vcu_report_505.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Vcu_report_505.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Vcu_report_505} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Vcu_report_505.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.canbus.Vcu_report_505.Vehicle_mode_stateType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Vcu_report_505.Frontcrash_stateType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Vcu_report_505.Backcrash_stateType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Vcu_report_505.Aeb_stateType} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Vcu_report_505.Vehicle_mode_stateType = {
  VEHICLE_MODE_STATE_MANUAL_REMOTE_MODE: 0,
  VEHICLE_MODE_STATE_AUTO_MODE: 1,
  VEHICLE_MODE_STATE_EMERGENCY_MODE: 2,
  VEHICLE_MODE_STATE_STANDBY_MODE: 3
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Vcu_report_505.Frontcrash_stateType = {
  FRONTCRASH_STATE_NO_EVENT: 0,
  FRONTCRASH_STATE_CRASH_EVENT: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Vcu_report_505.Backcrash_stateType = {
  BACKCRASH_STATE_NO_EVENT: 0,
  BACKCRASH_STATE_CRASH_EVENT: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Vcu_report_505.Aeb_stateType = {
  AEB_STATE_INACTIVE: 0,
  AEB_STATE_ACTIVE: 1
};

/**
 * optional Vehicle_mode_stateType vehicle_mode_state = 1;
 * @return {!proto.apollo.canbus.Vcu_report_505.Vehicle_mode_stateType}
 */
proto.apollo.canbus.Vcu_report_505.prototype.getVehicleModeState = function() {
  return /** @type {!proto.apollo.canbus.Vcu_report_505.Vehicle_mode_stateType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.canbus.Vcu_report_505.Vehicle_mode_stateType} value
 * @return {!proto.apollo.canbus.Vcu_report_505} returns this
 */
proto.apollo.canbus.Vcu_report_505.prototype.setVehicleModeState = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Vcu_report_505} returns this
 */
proto.apollo.canbus.Vcu_report_505.prototype.clearVehicleModeState = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Vcu_report_505.prototype.hasVehicleModeState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Frontcrash_stateType frontcrash_state = 2;
 * @return {!proto.apollo.canbus.Vcu_report_505.Frontcrash_stateType}
 */
proto.apollo.canbus.Vcu_report_505.prototype.getFrontcrashState = function() {
  return /** @type {!proto.apollo.canbus.Vcu_report_505.Frontcrash_stateType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.apollo.canbus.Vcu_report_505.Frontcrash_stateType} value
 * @return {!proto.apollo.canbus.Vcu_report_505} returns this
 */
proto.apollo.canbus.Vcu_report_505.prototype.setFrontcrashState = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Vcu_report_505} returns this
 */
proto.apollo.canbus.Vcu_report_505.prototype.clearFrontcrashState = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Vcu_report_505.prototype.hasFrontcrashState = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Backcrash_stateType backcrash_state = 3;
 * @return {!proto.apollo.canbus.Vcu_report_505.Backcrash_stateType}
 */
proto.apollo.canbus.Vcu_report_505.prototype.getBackcrashState = function() {
  return /** @type {!proto.apollo.canbus.Vcu_report_505.Backcrash_stateType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.apollo.canbus.Vcu_report_505.Backcrash_stateType} value
 * @return {!proto.apollo.canbus.Vcu_report_505} returns this
 */
proto.apollo.canbus.Vcu_report_505.prototype.setBackcrashState = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Vcu_report_505} returns this
 */
proto.apollo.canbus.Vcu_report_505.prototype.clearBackcrashState = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Vcu_report_505.prototype.hasBackcrashState = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Aeb_stateType aeb_state = 4;
 * @return {!proto.apollo.canbus.Vcu_report_505.Aeb_stateType}
 */
proto.apollo.canbus.Vcu_report_505.prototype.getAebState = function() {
  return /** @type {!proto.apollo.canbus.Vcu_report_505.Aeb_stateType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.apollo.canbus.Vcu_report_505.Aeb_stateType} value
 * @return {!proto.apollo.canbus.Vcu_report_505} returns this
 */
proto.apollo.canbus.Vcu_report_505.prototype.setAebState = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Vcu_report_505} returns this
 */
proto.apollo.canbus.Vcu_report_505.prototype.clearAebState = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Vcu_report_505.prototype.hasAebState = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double acc = 5;
 * @return {number}
 */
proto.apollo.canbus.Vcu_report_505.prototype.getAcc = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Vcu_report_505} returns this
 */
proto.apollo.canbus.Vcu_report_505.prototype.setAcc = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Vcu_report_505} returns this
 */
proto.apollo.canbus.Vcu_report_505.prototype.clearAcc = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Vcu_report_505.prototype.hasAcc = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double speed = 6;
 * @return {number}
 */
proto.apollo.canbus.Vcu_report_505.prototype.getSpeed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Vcu_report_505} returns this
 */
proto.apollo.canbus.Vcu_report_505.prototype.setSpeed = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Vcu_report_505} returns this
 */
proto.apollo.canbus.Vcu_report_505.prototype.clearSpeed = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Vcu_report_505.prototype.hasSpeed = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Wheelspeed_report_506.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Wheelspeed_report_506.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Wheelspeed_report_506} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Wheelspeed_report_506.toObject = function(includeInstance, msg) {
  var f, obj = {
    rr: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    rl: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    fr: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    fl: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Wheelspeed_report_506 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Wheelspeed_report_506.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.rr;

  /** @type {?|undefined} */
  this.rl;

  /** @type {?|undefined} */
  this.fr;

  /** @type {?|undefined} */
  this.fl;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Wheelspeed_report_506.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Wheelspeed_report_506}
 */
proto.apollo.canbus.Wheelspeed_report_506.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Wheelspeed_report_506();
  obj.rr != null && jspb.Message.setField(msg, 1, obj.rr);
  obj.rl != null && jspb.Message.setField(msg, 2, obj.rl);
  obj.fr != null && jspb.Message.setField(msg, 3, obj.fr);
  obj.fl != null && jspb.Message.setField(msg, 4, obj.fl);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Wheelspeed_report_506}
 */
proto.apollo.canbus.Wheelspeed_report_506.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Wheelspeed_report_506;
  return proto.apollo.canbus.Wheelspeed_report_506.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Wheelspeed_report_506} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Wheelspeed_report_506}
 */
proto.apollo.canbus.Wheelspeed_report_506.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRr(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRl(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFr(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Wheelspeed_report_506.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Wheelspeed_report_506.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Wheelspeed_report_506} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Wheelspeed_report_506.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional double rr = 1;
 * @return {number}
 */
proto.apollo.canbus.Wheelspeed_report_506.prototype.getRr = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Wheelspeed_report_506} returns this
 */
proto.apollo.canbus.Wheelspeed_report_506.prototype.setRr = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Wheelspeed_report_506} returns this
 */
proto.apollo.canbus.Wheelspeed_report_506.prototype.clearRr = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Wheelspeed_report_506.prototype.hasRr = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double rl = 2;
 * @return {number}
 */
proto.apollo.canbus.Wheelspeed_report_506.prototype.getRl = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Wheelspeed_report_506} returns this
 */
proto.apollo.canbus.Wheelspeed_report_506.prototype.setRl = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Wheelspeed_report_506} returns this
 */
proto.apollo.canbus.Wheelspeed_report_506.prototype.clearRl = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Wheelspeed_report_506.prototype.hasRl = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double fr = 3;
 * @return {number}
 */
proto.apollo.canbus.Wheelspeed_report_506.prototype.getFr = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Wheelspeed_report_506} returns this
 */
proto.apollo.canbus.Wheelspeed_report_506.prototype.setFr = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Wheelspeed_report_506} returns this
 */
proto.apollo.canbus.Wheelspeed_report_506.prototype.clearFr = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Wheelspeed_report_506.prototype.hasFr = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double fl = 4;
 * @return {number}
 */
proto.apollo.canbus.Wheelspeed_report_506.prototype.getFl = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Wheelspeed_report_506} returns this
 */
proto.apollo.canbus.Wheelspeed_report_506.prototype.setFl = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Wheelspeed_report_506} returns this
 */
proto.apollo.canbus.Wheelspeed_report_506.prototype.clearFl = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Wheelspeed_report_506.prototype.hasFl = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Ultr_sensor_1_507.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Ultr_sensor_1_507.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Ultr_sensor_1_507} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Ultr_sensor_1_507.toObject = function(includeInstance, msg) {
  var f, obj = {
    uiuss9TofDirect: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    uiuss8TofDirect: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    uiuss11TofDirect: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    uiuss10TofDirect: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Ultr_sensor_1_507 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Ultr_sensor_1_507.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.uiuss9TofDirect;

  /** @type {?|undefined} */
  this.uiuss8TofDirect;

  /** @type {?|undefined} */
  this.uiuss11TofDirect;

  /** @type {?|undefined} */
  this.uiuss10TofDirect;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Ultr_sensor_1_507.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Ultr_sensor_1_507}
 */
proto.apollo.canbus.Ultr_sensor_1_507.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Ultr_sensor_1_507();
  obj.uiuss9TofDirect != null && jspb.Message.setField(msg, 1, obj.uiuss9TofDirect);
  obj.uiuss8TofDirect != null && jspb.Message.setField(msg, 2, obj.uiuss8TofDirect);
  obj.uiuss11TofDirect != null && jspb.Message.setField(msg, 3, obj.uiuss11TofDirect);
  obj.uiuss10TofDirect != null && jspb.Message.setField(msg, 4, obj.uiuss10TofDirect);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Ultr_sensor_1_507}
 */
proto.apollo.canbus.Ultr_sensor_1_507.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Ultr_sensor_1_507;
  return proto.apollo.canbus.Ultr_sensor_1_507.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Ultr_sensor_1_507} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Ultr_sensor_1_507}
 */
proto.apollo.canbus.Ultr_sensor_1_507.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUiuss9TofDirect(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUiuss8TofDirect(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUiuss11TofDirect(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUiuss10TofDirect(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Ultr_sensor_1_507.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Ultr_sensor_1_507.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Ultr_sensor_1_507} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Ultr_sensor_1_507.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional double uiuss9_tof_direct = 1;
 * @return {number}
 */
proto.apollo.canbus.Ultr_sensor_1_507.prototype.getUiuss9TofDirect = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ultr_sensor_1_507} returns this
 */
proto.apollo.canbus.Ultr_sensor_1_507.prototype.setUiuss9TofDirect = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ultr_sensor_1_507} returns this
 */
proto.apollo.canbus.Ultr_sensor_1_507.prototype.clearUiuss9TofDirect = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ultr_sensor_1_507.prototype.hasUiuss9TofDirect = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double uiuss8_tof_direct = 2;
 * @return {number}
 */
proto.apollo.canbus.Ultr_sensor_1_507.prototype.getUiuss8TofDirect = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ultr_sensor_1_507} returns this
 */
proto.apollo.canbus.Ultr_sensor_1_507.prototype.setUiuss8TofDirect = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ultr_sensor_1_507} returns this
 */
proto.apollo.canbus.Ultr_sensor_1_507.prototype.clearUiuss8TofDirect = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ultr_sensor_1_507.prototype.hasUiuss8TofDirect = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double uiuss11_tof_direct = 3;
 * @return {number}
 */
proto.apollo.canbus.Ultr_sensor_1_507.prototype.getUiuss11TofDirect = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ultr_sensor_1_507} returns this
 */
proto.apollo.canbus.Ultr_sensor_1_507.prototype.setUiuss11TofDirect = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ultr_sensor_1_507} returns this
 */
proto.apollo.canbus.Ultr_sensor_1_507.prototype.clearUiuss11TofDirect = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ultr_sensor_1_507.prototype.hasUiuss11TofDirect = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double uiuss10_tof_direct = 4;
 * @return {number}
 */
proto.apollo.canbus.Ultr_sensor_1_507.prototype.getUiuss10TofDirect = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ultr_sensor_1_507} returns this
 */
proto.apollo.canbus.Ultr_sensor_1_507.prototype.setUiuss10TofDirect = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ultr_sensor_1_507} returns this
 */
proto.apollo.canbus.Ultr_sensor_1_507.prototype.clearUiuss10TofDirect = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ultr_sensor_1_507.prototype.hasUiuss10TofDirect = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Ultr_sensor_2_508.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Ultr_sensor_2_508.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Ultr_sensor_2_508} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Ultr_sensor_2_508.toObject = function(includeInstance, msg) {
  var f, obj = {
    uiuss9TofIndirect: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    uiuss8TofIndirect: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    uiuss11TofIndirect: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    uiuss10TofIndirect: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Ultr_sensor_2_508 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Ultr_sensor_2_508.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.uiuss9TofIndirect;

  /** @type {?|undefined} */
  this.uiuss8TofIndirect;

  /** @type {?|undefined} */
  this.uiuss11TofIndirect;

  /** @type {?|undefined} */
  this.uiuss10TofIndirect;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Ultr_sensor_2_508.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Ultr_sensor_2_508}
 */
proto.apollo.canbus.Ultr_sensor_2_508.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Ultr_sensor_2_508();
  obj.uiuss9TofIndirect != null && jspb.Message.setField(msg, 1, obj.uiuss9TofIndirect);
  obj.uiuss8TofIndirect != null && jspb.Message.setField(msg, 2, obj.uiuss8TofIndirect);
  obj.uiuss11TofIndirect != null && jspb.Message.setField(msg, 3, obj.uiuss11TofIndirect);
  obj.uiuss10TofIndirect != null && jspb.Message.setField(msg, 4, obj.uiuss10TofIndirect);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Ultr_sensor_2_508}
 */
proto.apollo.canbus.Ultr_sensor_2_508.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Ultr_sensor_2_508;
  return proto.apollo.canbus.Ultr_sensor_2_508.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Ultr_sensor_2_508} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Ultr_sensor_2_508}
 */
proto.apollo.canbus.Ultr_sensor_2_508.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUiuss9TofIndirect(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUiuss8TofIndirect(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUiuss11TofIndirect(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUiuss10TofIndirect(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Ultr_sensor_2_508.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Ultr_sensor_2_508.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Ultr_sensor_2_508} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Ultr_sensor_2_508.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional double uiuss9_tof_indirect = 1;
 * @return {number}
 */
proto.apollo.canbus.Ultr_sensor_2_508.prototype.getUiuss9TofIndirect = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ultr_sensor_2_508} returns this
 */
proto.apollo.canbus.Ultr_sensor_2_508.prototype.setUiuss9TofIndirect = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ultr_sensor_2_508} returns this
 */
proto.apollo.canbus.Ultr_sensor_2_508.prototype.clearUiuss9TofIndirect = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ultr_sensor_2_508.prototype.hasUiuss9TofIndirect = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double uiuss8_tof_indirect = 2;
 * @return {number}
 */
proto.apollo.canbus.Ultr_sensor_2_508.prototype.getUiuss8TofIndirect = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ultr_sensor_2_508} returns this
 */
proto.apollo.canbus.Ultr_sensor_2_508.prototype.setUiuss8TofIndirect = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ultr_sensor_2_508} returns this
 */
proto.apollo.canbus.Ultr_sensor_2_508.prototype.clearUiuss8TofIndirect = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ultr_sensor_2_508.prototype.hasUiuss8TofIndirect = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double uiuss11_tof_indirect = 3;
 * @return {number}
 */
proto.apollo.canbus.Ultr_sensor_2_508.prototype.getUiuss11TofIndirect = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ultr_sensor_2_508} returns this
 */
proto.apollo.canbus.Ultr_sensor_2_508.prototype.setUiuss11TofIndirect = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ultr_sensor_2_508} returns this
 */
proto.apollo.canbus.Ultr_sensor_2_508.prototype.clearUiuss11TofIndirect = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ultr_sensor_2_508.prototype.hasUiuss11TofIndirect = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double uiuss10_tof_indirect = 4;
 * @return {number}
 */
proto.apollo.canbus.Ultr_sensor_2_508.prototype.getUiuss10TofIndirect = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ultr_sensor_2_508} returns this
 */
proto.apollo.canbus.Ultr_sensor_2_508.prototype.setUiuss10TofIndirect = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ultr_sensor_2_508} returns this
 */
proto.apollo.canbus.Ultr_sensor_2_508.prototype.clearUiuss10TofIndirect = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ultr_sensor_2_508.prototype.hasUiuss10TofIndirect = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Ultr_sensor_3_509.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Ultr_sensor_3_509.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Ultr_sensor_3_509} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Ultr_sensor_3_509.toObject = function(includeInstance, msg) {
  var f, obj = {
    uiuss5TofDirect: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    uiuss4TofDirect: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    uiuss3TofDirect: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    uiuss2TofDirect: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Ultr_sensor_3_509 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Ultr_sensor_3_509.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.uiuss5TofDirect;

  /** @type {?|undefined} */
  this.uiuss4TofDirect;

  /** @type {?|undefined} */
  this.uiuss3TofDirect;

  /** @type {?|undefined} */
  this.uiuss2TofDirect;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Ultr_sensor_3_509.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Ultr_sensor_3_509}
 */
proto.apollo.canbus.Ultr_sensor_3_509.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Ultr_sensor_3_509();
  obj.uiuss5TofDirect != null && jspb.Message.setField(msg, 1, obj.uiuss5TofDirect);
  obj.uiuss4TofDirect != null && jspb.Message.setField(msg, 2, obj.uiuss4TofDirect);
  obj.uiuss3TofDirect != null && jspb.Message.setField(msg, 3, obj.uiuss3TofDirect);
  obj.uiuss2TofDirect != null && jspb.Message.setField(msg, 4, obj.uiuss2TofDirect);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Ultr_sensor_3_509}
 */
proto.apollo.canbus.Ultr_sensor_3_509.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Ultr_sensor_3_509;
  return proto.apollo.canbus.Ultr_sensor_3_509.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Ultr_sensor_3_509} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Ultr_sensor_3_509}
 */
proto.apollo.canbus.Ultr_sensor_3_509.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUiuss5TofDirect(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUiuss4TofDirect(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUiuss3TofDirect(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUiuss2TofDirect(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Ultr_sensor_3_509.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Ultr_sensor_3_509.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Ultr_sensor_3_509} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Ultr_sensor_3_509.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional double uiuss5_tof_direct = 1;
 * @return {number}
 */
proto.apollo.canbus.Ultr_sensor_3_509.prototype.getUiuss5TofDirect = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ultr_sensor_3_509} returns this
 */
proto.apollo.canbus.Ultr_sensor_3_509.prototype.setUiuss5TofDirect = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ultr_sensor_3_509} returns this
 */
proto.apollo.canbus.Ultr_sensor_3_509.prototype.clearUiuss5TofDirect = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ultr_sensor_3_509.prototype.hasUiuss5TofDirect = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double uiuss4_tof_direct = 2;
 * @return {number}
 */
proto.apollo.canbus.Ultr_sensor_3_509.prototype.getUiuss4TofDirect = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ultr_sensor_3_509} returns this
 */
proto.apollo.canbus.Ultr_sensor_3_509.prototype.setUiuss4TofDirect = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ultr_sensor_3_509} returns this
 */
proto.apollo.canbus.Ultr_sensor_3_509.prototype.clearUiuss4TofDirect = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ultr_sensor_3_509.prototype.hasUiuss4TofDirect = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double uiuss3_tof_direct = 3;
 * @return {number}
 */
proto.apollo.canbus.Ultr_sensor_3_509.prototype.getUiuss3TofDirect = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ultr_sensor_3_509} returns this
 */
proto.apollo.canbus.Ultr_sensor_3_509.prototype.setUiuss3TofDirect = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ultr_sensor_3_509} returns this
 */
proto.apollo.canbus.Ultr_sensor_3_509.prototype.clearUiuss3TofDirect = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ultr_sensor_3_509.prototype.hasUiuss3TofDirect = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double uiuss2_tof_direct = 4;
 * @return {number}
 */
proto.apollo.canbus.Ultr_sensor_3_509.prototype.getUiuss2TofDirect = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ultr_sensor_3_509} returns this
 */
proto.apollo.canbus.Ultr_sensor_3_509.prototype.setUiuss2TofDirect = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ultr_sensor_3_509} returns this
 */
proto.apollo.canbus.Ultr_sensor_3_509.prototype.clearUiuss2TofDirect = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ultr_sensor_3_509.prototype.hasUiuss2TofDirect = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Ultr_sensor_4_510.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Ultr_sensor_4_510.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Ultr_sensor_4_510} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Ultr_sensor_4_510.toObject = function(includeInstance, msg) {
  var f, obj = {
    uiuss5TofIndirect: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    uiuss4TofIndirect: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    uiuss3TofIndirect: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    uiuss2TofIndirect: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Ultr_sensor_4_510 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Ultr_sensor_4_510.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.uiuss5TofIndirect;

  /** @type {?|undefined} */
  this.uiuss4TofIndirect;

  /** @type {?|undefined} */
  this.uiuss3TofIndirect;

  /** @type {?|undefined} */
  this.uiuss2TofIndirect;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Ultr_sensor_4_510.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Ultr_sensor_4_510}
 */
proto.apollo.canbus.Ultr_sensor_4_510.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Ultr_sensor_4_510();
  obj.uiuss5TofIndirect != null && jspb.Message.setField(msg, 1, obj.uiuss5TofIndirect);
  obj.uiuss4TofIndirect != null && jspb.Message.setField(msg, 2, obj.uiuss4TofIndirect);
  obj.uiuss3TofIndirect != null && jspb.Message.setField(msg, 3, obj.uiuss3TofIndirect);
  obj.uiuss2TofIndirect != null && jspb.Message.setField(msg, 4, obj.uiuss2TofIndirect);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Ultr_sensor_4_510}
 */
proto.apollo.canbus.Ultr_sensor_4_510.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Ultr_sensor_4_510;
  return proto.apollo.canbus.Ultr_sensor_4_510.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Ultr_sensor_4_510} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Ultr_sensor_4_510}
 */
proto.apollo.canbus.Ultr_sensor_4_510.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUiuss5TofIndirect(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUiuss4TofIndirect(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUiuss3TofIndirect(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUiuss2TofIndirect(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Ultr_sensor_4_510.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Ultr_sensor_4_510.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Ultr_sensor_4_510} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Ultr_sensor_4_510.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional double uiuss5_tof_indirect = 1;
 * @return {number}
 */
proto.apollo.canbus.Ultr_sensor_4_510.prototype.getUiuss5TofIndirect = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ultr_sensor_4_510} returns this
 */
proto.apollo.canbus.Ultr_sensor_4_510.prototype.setUiuss5TofIndirect = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ultr_sensor_4_510} returns this
 */
proto.apollo.canbus.Ultr_sensor_4_510.prototype.clearUiuss5TofIndirect = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ultr_sensor_4_510.prototype.hasUiuss5TofIndirect = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double uiuss4_tof_indirect = 2;
 * @return {number}
 */
proto.apollo.canbus.Ultr_sensor_4_510.prototype.getUiuss4TofIndirect = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ultr_sensor_4_510} returns this
 */
proto.apollo.canbus.Ultr_sensor_4_510.prototype.setUiuss4TofIndirect = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ultr_sensor_4_510} returns this
 */
proto.apollo.canbus.Ultr_sensor_4_510.prototype.clearUiuss4TofIndirect = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ultr_sensor_4_510.prototype.hasUiuss4TofIndirect = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double uiuss3_tof_indirect = 3;
 * @return {number}
 */
proto.apollo.canbus.Ultr_sensor_4_510.prototype.getUiuss3TofIndirect = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ultr_sensor_4_510} returns this
 */
proto.apollo.canbus.Ultr_sensor_4_510.prototype.setUiuss3TofIndirect = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ultr_sensor_4_510} returns this
 */
proto.apollo.canbus.Ultr_sensor_4_510.prototype.clearUiuss3TofIndirect = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ultr_sensor_4_510.prototype.hasUiuss3TofIndirect = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double uiuss2_tof_indirect = 4;
 * @return {number}
 */
proto.apollo.canbus.Ultr_sensor_4_510.prototype.getUiuss2TofIndirect = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ultr_sensor_4_510} returns this
 */
proto.apollo.canbus.Ultr_sensor_4_510.prototype.setUiuss2TofIndirect = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ultr_sensor_4_510} returns this
 */
proto.apollo.canbus.Ultr_sensor_4_510.prototype.clearUiuss2TofIndirect = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ultr_sensor_4_510.prototype.hasUiuss2TofIndirect = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Ultr_sensor_5_511.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Ultr_sensor_5_511.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Ultr_sensor_5_511} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Ultr_sensor_5_511.toObject = function(includeInstance, msg) {
  var f, obj = {
    uiuss7TofDirect: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    uiuss6TofDirect: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    uiuss1TofDirect: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    uiuss0TofDirect: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Ultr_sensor_5_511 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Ultr_sensor_5_511.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.uiuss7TofDirect;

  /** @type {?|undefined} */
  this.uiuss6TofDirect;

  /** @type {?|undefined} */
  this.uiuss1TofDirect;

  /** @type {?|undefined} */
  this.uiuss0TofDirect;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Ultr_sensor_5_511.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Ultr_sensor_5_511}
 */
proto.apollo.canbus.Ultr_sensor_5_511.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Ultr_sensor_5_511();
  obj.uiuss7TofDirect != null && jspb.Message.setField(msg, 1, obj.uiuss7TofDirect);
  obj.uiuss6TofDirect != null && jspb.Message.setField(msg, 2, obj.uiuss6TofDirect);
  obj.uiuss1TofDirect != null && jspb.Message.setField(msg, 3, obj.uiuss1TofDirect);
  obj.uiuss0TofDirect != null && jspb.Message.setField(msg, 4, obj.uiuss0TofDirect);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Ultr_sensor_5_511}
 */
proto.apollo.canbus.Ultr_sensor_5_511.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Ultr_sensor_5_511;
  return proto.apollo.canbus.Ultr_sensor_5_511.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Ultr_sensor_5_511} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Ultr_sensor_5_511}
 */
proto.apollo.canbus.Ultr_sensor_5_511.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUiuss7TofDirect(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUiuss6TofDirect(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUiuss1TofDirect(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUiuss0TofDirect(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Ultr_sensor_5_511.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Ultr_sensor_5_511.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Ultr_sensor_5_511} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Ultr_sensor_5_511.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional double uiuss7_tof_direct = 1;
 * @return {number}
 */
proto.apollo.canbus.Ultr_sensor_5_511.prototype.getUiuss7TofDirect = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ultr_sensor_5_511} returns this
 */
proto.apollo.canbus.Ultr_sensor_5_511.prototype.setUiuss7TofDirect = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ultr_sensor_5_511} returns this
 */
proto.apollo.canbus.Ultr_sensor_5_511.prototype.clearUiuss7TofDirect = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ultr_sensor_5_511.prototype.hasUiuss7TofDirect = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double uiuss6_tof_direct = 2;
 * @return {number}
 */
proto.apollo.canbus.Ultr_sensor_5_511.prototype.getUiuss6TofDirect = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ultr_sensor_5_511} returns this
 */
proto.apollo.canbus.Ultr_sensor_5_511.prototype.setUiuss6TofDirect = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ultr_sensor_5_511} returns this
 */
proto.apollo.canbus.Ultr_sensor_5_511.prototype.clearUiuss6TofDirect = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ultr_sensor_5_511.prototype.hasUiuss6TofDirect = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double uiuss1_tof_direct = 3;
 * @return {number}
 */
proto.apollo.canbus.Ultr_sensor_5_511.prototype.getUiuss1TofDirect = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ultr_sensor_5_511} returns this
 */
proto.apollo.canbus.Ultr_sensor_5_511.prototype.setUiuss1TofDirect = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ultr_sensor_5_511} returns this
 */
proto.apollo.canbus.Ultr_sensor_5_511.prototype.clearUiuss1TofDirect = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ultr_sensor_5_511.prototype.hasUiuss1TofDirect = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double uiuss0_tof_direct = 4;
 * @return {number}
 */
proto.apollo.canbus.Ultr_sensor_5_511.prototype.getUiuss0TofDirect = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ultr_sensor_5_511} returns this
 */
proto.apollo.canbus.Ultr_sensor_5_511.prototype.setUiuss0TofDirect = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ultr_sensor_5_511} returns this
 */
proto.apollo.canbus.Ultr_sensor_5_511.prototype.clearUiuss0TofDirect = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ultr_sensor_5_511.prototype.hasUiuss0TofDirect = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Bms_report_512.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Bms_report_512.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Bms_report_512} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Bms_report_512.toObject = function(includeInstance, msg) {
  var f, obj = {
    batteryCurrent: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    batteryVoltage: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    batterySoc: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Bms_report_512 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Bms_report_512.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.batteryCurrent;

  /** @type {?|undefined} */
  this.batteryVoltage;

  /** @type {?|undefined} */
  this.batterySoc;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Bms_report_512.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Bms_report_512}
 */
proto.apollo.canbus.Bms_report_512.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Bms_report_512();
  obj.batteryCurrent != null && jspb.Message.setField(msg, 1, obj.batteryCurrent);
  obj.batteryVoltage != null && jspb.Message.setField(msg, 2, obj.batteryVoltage);
  obj.batterySoc != null && jspb.Message.setField(msg, 3, obj.batterySoc);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Bms_report_512}
 */
proto.apollo.canbus.Bms_report_512.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Bms_report_512;
  return proto.apollo.canbus.Bms_report_512.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Bms_report_512} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Bms_report_512}
 */
proto.apollo.canbus.Bms_report_512.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBatteryCurrent(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBatteryVoltage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBatterySoc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Bms_report_512.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Bms_report_512.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Bms_report_512} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Bms_report_512.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional double battery_current = 1;
 * @return {number}
 */
proto.apollo.canbus.Bms_report_512.prototype.getBatteryCurrent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Bms_report_512} returns this
 */
proto.apollo.canbus.Bms_report_512.prototype.setBatteryCurrent = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Bms_report_512} returns this
 */
proto.apollo.canbus.Bms_report_512.prototype.clearBatteryCurrent = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Bms_report_512.prototype.hasBatteryCurrent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double battery_voltage = 2;
 * @return {number}
 */
proto.apollo.canbus.Bms_report_512.prototype.getBatteryVoltage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Bms_report_512} returns this
 */
proto.apollo.canbus.Bms_report_512.prototype.setBatteryVoltage = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Bms_report_512} returns this
 */
proto.apollo.canbus.Bms_report_512.prototype.clearBatteryVoltage = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Bms_report_512.prototype.hasBatteryVoltage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 battery_soc = 3;
 * @return {number}
 */
proto.apollo.canbus.Bms_report_512.prototype.getBatterySoc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Bms_report_512} returns this
 */
proto.apollo.canbus.Bms_report_512.prototype.setBatterySoc = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Bms_report_512} returns this
 */
proto.apollo.canbus.Bms_report_512.prototype.clearBatterySoc = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Bms_report_512.prototype.hasBatterySoc = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Devkit.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Devkit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Devkit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Devkit.toObject = function(includeInstance, msg) {
  var f, obj = {
    throttleCommand100: (f = msg.getThrottleCommand100()) && proto.apollo.canbus.Throttle_command_100.toObject(includeInstance, f),
    brakeCommand101: (f = msg.getBrakeCommand101()) && proto.apollo.canbus.Brake_command_101.toObject(includeInstance, f),
    steeringCommand102: (f = msg.getSteeringCommand102()) && proto.apollo.canbus.Steering_command_102.toObject(includeInstance, f),
    gearCommand103: (f = msg.getGearCommand103()) && proto.apollo.canbus.Gear_command_103.toObject(includeInstance, f),
    parkCommand104: (f = msg.getParkCommand104()) && proto.apollo.canbus.Park_command_104.toObject(includeInstance, f),
    throttleReport500: (f = msg.getThrottleReport500()) && proto.apollo.canbus.Throttle_report_500.toObject(includeInstance, f),
    brakeReport501: (f = msg.getBrakeReport501()) && proto.apollo.canbus.Brake_report_501.toObject(includeInstance, f),
    steeringReport502: (f = msg.getSteeringReport502()) && proto.apollo.canbus.Steering_report_502.toObject(includeInstance, f),
    gearReport503: (f = msg.getGearReport503()) && proto.apollo.canbus.Gear_report_503.toObject(includeInstance, f),
    parkReport504: (f = msg.getParkReport504()) && proto.apollo.canbus.Park_report_504.toObject(includeInstance, f),
    vcuReport505: (f = msg.getVcuReport505()) && proto.apollo.canbus.Vcu_report_505.toObject(includeInstance, f),
    wheelspeedReport506: (f = msg.getWheelspeedReport506()) && proto.apollo.canbus.Wheelspeed_report_506.toObject(includeInstance, f),
    ultrSensor1507: (f = msg.getUltrSensor1507()) && proto.apollo.canbus.Ultr_sensor_1_507.toObject(includeInstance, f),
    ultrSensor2508: (f = msg.getUltrSensor2508()) && proto.apollo.canbus.Ultr_sensor_2_508.toObject(includeInstance, f),
    ultrSensor3509: (f = msg.getUltrSensor3509()) && proto.apollo.canbus.Ultr_sensor_3_509.toObject(includeInstance, f),
    ultrSensor4510: (f = msg.getUltrSensor4510()) && proto.apollo.canbus.Ultr_sensor_4_510.toObject(includeInstance, f),
    ultrSensor5511: (f = msg.getUltrSensor5511()) && proto.apollo.canbus.Ultr_sensor_5_511.toObject(includeInstance, f),
    bmsReport512: (f = msg.getBmsReport512()) && proto.apollo.canbus.Bms_report_512.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Devkit as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Devkit.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.throttleCommand100;

  /** @type {?|undefined} */
  this.brakeCommand101;

  /** @type {?|undefined} */
  this.steeringCommand102;

  /** @type {?|undefined} */
  this.gearCommand103;

  /** @type {?|undefined} */
  this.parkCommand104;

  /** @type {?|undefined} */
  this.throttleReport500;

  /** @type {?|undefined} */
  this.brakeReport501;

  /** @type {?|undefined} */
  this.steeringReport502;

  /** @type {?|undefined} */
  this.gearReport503;

  /** @type {?|undefined} */
  this.parkReport504;

  /** @type {?|undefined} */
  this.vcuReport505;

  /** @type {?|undefined} */
  this.wheelspeedReport506;

  /** @type {?|undefined} */
  this.ultrSensor1507;

  /** @type {?|undefined} */
  this.ultrSensor2508;

  /** @type {?|undefined} */
  this.ultrSensor3509;

  /** @type {?|undefined} */
  this.ultrSensor4510;

  /** @type {?|undefined} */
  this.ultrSensor5511;

  /** @type {?|undefined} */
  this.bmsReport512;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Devkit.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Devkit}
 */
proto.apollo.canbus.Devkit.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Devkit();
  obj.throttleCommand100 && jspb.Message.setWrapperField(
      msg, 1, proto.apollo.canbus.Throttle_command_100.fromObject(obj.throttleCommand100));
  obj.brakeCommand101 && jspb.Message.setWrapperField(
      msg, 2, proto.apollo.canbus.Brake_command_101.fromObject(obj.brakeCommand101));
  obj.steeringCommand102 && jspb.Message.setWrapperField(
      msg, 3, proto.apollo.canbus.Steering_command_102.fromObject(obj.steeringCommand102));
  obj.gearCommand103 && jspb.Message.setWrapperField(
      msg, 4, proto.apollo.canbus.Gear_command_103.fromObject(obj.gearCommand103));
  obj.parkCommand104 && jspb.Message.setWrapperField(
      msg, 5, proto.apollo.canbus.Park_command_104.fromObject(obj.parkCommand104));
  obj.throttleReport500 && jspb.Message.setWrapperField(
      msg, 6, proto.apollo.canbus.Throttle_report_500.fromObject(obj.throttleReport500));
  obj.brakeReport501 && jspb.Message.setWrapperField(
      msg, 7, proto.apollo.canbus.Brake_report_501.fromObject(obj.brakeReport501));
  obj.steeringReport502 && jspb.Message.setWrapperField(
      msg, 8, proto.apollo.canbus.Steering_report_502.fromObject(obj.steeringReport502));
  obj.gearReport503 && jspb.Message.setWrapperField(
      msg, 9, proto.apollo.canbus.Gear_report_503.fromObject(obj.gearReport503));
  obj.parkReport504 && jspb.Message.setWrapperField(
      msg, 10, proto.apollo.canbus.Park_report_504.fromObject(obj.parkReport504));
  obj.vcuReport505 && jspb.Message.setWrapperField(
      msg, 11, proto.apollo.canbus.Vcu_report_505.fromObject(obj.vcuReport505));
  obj.wheelspeedReport506 && jspb.Message.setWrapperField(
      msg, 12, proto.apollo.canbus.Wheelspeed_report_506.fromObject(obj.wheelspeedReport506));
  obj.ultrSensor1507 && jspb.Message.setWrapperField(
      msg, 13, proto.apollo.canbus.Ultr_sensor_1_507.fromObject(obj.ultrSensor1507));
  obj.ultrSensor2508 && jspb.Message.setWrapperField(
      msg, 14, proto.apollo.canbus.Ultr_sensor_2_508.fromObject(obj.ultrSensor2508));
  obj.ultrSensor3509 && jspb.Message.setWrapperField(
      msg, 15, proto.apollo.canbus.Ultr_sensor_3_509.fromObject(obj.ultrSensor3509));
  obj.ultrSensor4510 && jspb.Message.setWrapperField(
      msg, 16, proto.apollo.canbus.Ultr_sensor_4_510.fromObject(obj.ultrSensor4510));
  obj.ultrSensor5511 && jspb.Message.setWrapperField(
      msg, 17, proto.apollo.canbus.Ultr_sensor_5_511.fromObject(obj.ultrSensor5511));
  obj.bmsReport512 && jspb.Message.setWrapperField(
      msg, 18, proto.apollo.canbus.Bms_report_512.fromObject(obj.bmsReport512));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Devkit}
 */
proto.apollo.canbus.Devkit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Devkit;
  return proto.apollo.canbus.Devkit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Devkit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Devkit}
 */
proto.apollo.canbus.Devkit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.apollo.canbus.Throttle_command_100;
      reader.readMessage(value,proto.apollo.canbus.Throttle_command_100.deserializeBinaryFromReader);
      msg.setThrottleCommand100(value);
      break;
    case 2:
      var value = new proto.apollo.canbus.Brake_command_101;
      reader.readMessage(value,proto.apollo.canbus.Brake_command_101.deserializeBinaryFromReader);
      msg.setBrakeCommand101(value);
      break;
    case 3:
      var value = new proto.apollo.canbus.Steering_command_102;
      reader.readMessage(value,proto.apollo.canbus.Steering_command_102.deserializeBinaryFromReader);
      msg.setSteeringCommand102(value);
      break;
    case 4:
      var value = new proto.apollo.canbus.Gear_command_103;
      reader.readMessage(value,proto.apollo.canbus.Gear_command_103.deserializeBinaryFromReader);
      msg.setGearCommand103(value);
      break;
    case 5:
      var value = new proto.apollo.canbus.Park_command_104;
      reader.readMessage(value,proto.apollo.canbus.Park_command_104.deserializeBinaryFromReader);
      msg.setParkCommand104(value);
      break;
    case 6:
      var value = new proto.apollo.canbus.Throttle_report_500;
      reader.readMessage(value,proto.apollo.canbus.Throttle_report_500.deserializeBinaryFromReader);
      msg.setThrottleReport500(value);
      break;
    case 7:
      var value = new proto.apollo.canbus.Brake_report_501;
      reader.readMessage(value,proto.apollo.canbus.Brake_report_501.deserializeBinaryFromReader);
      msg.setBrakeReport501(value);
      break;
    case 8:
      var value = new proto.apollo.canbus.Steering_report_502;
      reader.readMessage(value,proto.apollo.canbus.Steering_report_502.deserializeBinaryFromReader);
      msg.setSteeringReport502(value);
      break;
    case 9:
      var value = new proto.apollo.canbus.Gear_report_503;
      reader.readMessage(value,proto.apollo.canbus.Gear_report_503.deserializeBinaryFromReader);
      msg.setGearReport503(value);
      break;
    case 10:
      var value = new proto.apollo.canbus.Park_report_504;
      reader.readMessage(value,proto.apollo.canbus.Park_report_504.deserializeBinaryFromReader);
      msg.setParkReport504(value);
      break;
    case 11:
      var value = new proto.apollo.canbus.Vcu_report_505;
      reader.readMessage(value,proto.apollo.canbus.Vcu_report_505.deserializeBinaryFromReader);
      msg.setVcuReport505(value);
      break;
    case 12:
      var value = new proto.apollo.canbus.Wheelspeed_report_506;
      reader.readMessage(value,proto.apollo.canbus.Wheelspeed_report_506.deserializeBinaryFromReader);
      msg.setWheelspeedReport506(value);
      break;
    case 13:
      var value = new proto.apollo.canbus.Ultr_sensor_1_507;
      reader.readMessage(value,proto.apollo.canbus.Ultr_sensor_1_507.deserializeBinaryFromReader);
      msg.setUltrSensor1507(value);
      break;
    case 14:
      var value = new proto.apollo.canbus.Ultr_sensor_2_508;
      reader.readMessage(value,proto.apollo.canbus.Ultr_sensor_2_508.deserializeBinaryFromReader);
      msg.setUltrSensor2508(value);
      break;
    case 15:
      var value = new proto.apollo.canbus.Ultr_sensor_3_509;
      reader.readMessage(value,proto.apollo.canbus.Ultr_sensor_3_509.deserializeBinaryFromReader);
      msg.setUltrSensor3509(value);
      break;
    case 16:
      var value = new proto.apollo.canbus.Ultr_sensor_4_510;
      reader.readMessage(value,proto.apollo.canbus.Ultr_sensor_4_510.deserializeBinaryFromReader);
      msg.setUltrSensor4510(value);
      break;
    case 17:
      var value = new proto.apollo.canbus.Ultr_sensor_5_511;
      reader.readMessage(value,proto.apollo.canbus.Ultr_sensor_5_511.deserializeBinaryFromReader);
      msg.setUltrSensor5511(value);
      break;
    case 18:
      var value = new proto.apollo.canbus.Bms_report_512;
      reader.readMessage(value,proto.apollo.canbus.Bms_report_512.deserializeBinaryFromReader);
      msg.setBmsReport512(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Devkit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Devkit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Devkit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Devkit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThrottleCommand100();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.apollo.canbus.Throttle_command_100.serializeBinaryToWriter
    );
  }
  f = message.getBrakeCommand101();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.apollo.canbus.Brake_command_101.serializeBinaryToWriter
    );
  }
  f = message.getSteeringCommand102();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.apollo.canbus.Steering_command_102.serializeBinaryToWriter
    );
  }
  f = message.getGearCommand103();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.apollo.canbus.Gear_command_103.serializeBinaryToWriter
    );
  }
  f = message.getParkCommand104();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.apollo.canbus.Park_command_104.serializeBinaryToWriter
    );
  }
  f = message.getThrottleReport500();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.apollo.canbus.Throttle_report_500.serializeBinaryToWriter
    );
  }
  f = message.getBrakeReport501();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.apollo.canbus.Brake_report_501.serializeBinaryToWriter
    );
  }
  f = message.getSteeringReport502();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.apollo.canbus.Steering_report_502.serializeBinaryToWriter
    );
  }
  f = message.getGearReport503();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.apollo.canbus.Gear_report_503.serializeBinaryToWriter
    );
  }
  f = message.getParkReport504();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.apollo.canbus.Park_report_504.serializeBinaryToWriter
    );
  }
  f = message.getVcuReport505();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.apollo.canbus.Vcu_report_505.serializeBinaryToWriter
    );
  }
  f = message.getWheelspeedReport506();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.apollo.canbus.Wheelspeed_report_506.serializeBinaryToWriter
    );
  }
  f = message.getUltrSensor1507();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.apollo.canbus.Ultr_sensor_1_507.serializeBinaryToWriter
    );
  }
  f = message.getUltrSensor2508();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.apollo.canbus.Ultr_sensor_2_508.serializeBinaryToWriter
    );
  }
  f = message.getUltrSensor3509();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.apollo.canbus.Ultr_sensor_3_509.serializeBinaryToWriter
    );
  }
  f = message.getUltrSensor4510();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.apollo.canbus.Ultr_sensor_4_510.serializeBinaryToWriter
    );
  }
  f = message.getUltrSensor5511();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.apollo.canbus.Ultr_sensor_5_511.serializeBinaryToWriter
    );
  }
  f = message.getBmsReport512();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.apollo.canbus.Bms_report_512.serializeBinaryToWriter
    );
  }
};


/**
 * optional Throttle_command_100 throttle_command_100 = 1;
 * @return {?proto.apollo.canbus.Throttle_command_100}
 */
proto.apollo.canbus.Devkit.prototype.getThrottleCommand100 = function() {
  return /** @type{?proto.apollo.canbus.Throttle_command_100} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Throttle_command_100, 1));
};


/**
 * @param {?proto.apollo.canbus.Throttle_command_100|undefined} value
 * @return {!proto.apollo.canbus.Devkit} returns this
*/
proto.apollo.canbus.Devkit.prototype.setThrottleCommand100 = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Devkit} returns this
 */
proto.apollo.canbus.Devkit.prototype.clearThrottleCommand100 = function() {
  return this.setThrottleCommand100(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Devkit.prototype.hasThrottleCommand100 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Brake_command_101 brake_command_101 = 2;
 * @return {?proto.apollo.canbus.Brake_command_101}
 */
proto.apollo.canbus.Devkit.prototype.getBrakeCommand101 = function() {
  return /** @type{?proto.apollo.canbus.Brake_command_101} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Brake_command_101, 2));
};


/**
 * @param {?proto.apollo.canbus.Brake_command_101|undefined} value
 * @return {!proto.apollo.canbus.Devkit} returns this
*/
proto.apollo.canbus.Devkit.prototype.setBrakeCommand101 = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Devkit} returns this
 */
proto.apollo.canbus.Devkit.prototype.clearBrakeCommand101 = function() {
  return this.setBrakeCommand101(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Devkit.prototype.hasBrakeCommand101 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Steering_command_102 steering_command_102 = 3;
 * @return {?proto.apollo.canbus.Steering_command_102}
 */
proto.apollo.canbus.Devkit.prototype.getSteeringCommand102 = function() {
  return /** @type{?proto.apollo.canbus.Steering_command_102} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Steering_command_102, 3));
};


/**
 * @param {?proto.apollo.canbus.Steering_command_102|undefined} value
 * @return {!proto.apollo.canbus.Devkit} returns this
*/
proto.apollo.canbus.Devkit.prototype.setSteeringCommand102 = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Devkit} returns this
 */
proto.apollo.canbus.Devkit.prototype.clearSteeringCommand102 = function() {
  return this.setSteeringCommand102(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Devkit.prototype.hasSteeringCommand102 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Gear_command_103 gear_command_103 = 4;
 * @return {?proto.apollo.canbus.Gear_command_103}
 */
proto.apollo.canbus.Devkit.prototype.getGearCommand103 = function() {
  return /** @type{?proto.apollo.canbus.Gear_command_103} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Gear_command_103, 4));
};


/**
 * @param {?proto.apollo.canbus.Gear_command_103|undefined} value
 * @return {!proto.apollo.canbus.Devkit} returns this
*/
proto.apollo.canbus.Devkit.prototype.setGearCommand103 = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Devkit} returns this
 */
proto.apollo.canbus.Devkit.prototype.clearGearCommand103 = function() {
  return this.setGearCommand103(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Devkit.prototype.hasGearCommand103 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Park_command_104 park_command_104 = 5;
 * @return {?proto.apollo.canbus.Park_command_104}
 */
proto.apollo.canbus.Devkit.prototype.getParkCommand104 = function() {
  return /** @type{?proto.apollo.canbus.Park_command_104} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Park_command_104, 5));
};


/**
 * @param {?proto.apollo.canbus.Park_command_104|undefined} value
 * @return {!proto.apollo.canbus.Devkit} returns this
*/
proto.apollo.canbus.Devkit.prototype.setParkCommand104 = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Devkit} returns this
 */
proto.apollo.canbus.Devkit.prototype.clearParkCommand104 = function() {
  return this.setParkCommand104(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Devkit.prototype.hasParkCommand104 = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Throttle_report_500 throttle_report_500 = 6;
 * @return {?proto.apollo.canbus.Throttle_report_500}
 */
proto.apollo.canbus.Devkit.prototype.getThrottleReport500 = function() {
  return /** @type{?proto.apollo.canbus.Throttle_report_500} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Throttle_report_500, 6));
};


/**
 * @param {?proto.apollo.canbus.Throttle_report_500|undefined} value
 * @return {!proto.apollo.canbus.Devkit} returns this
*/
proto.apollo.canbus.Devkit.prototype.setThrottleReport500 = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Devkit} returns this
 */
proto.apollo.canbus.Devkit.prototype.clearThrottleReport500 = function() {
  return this.setThrottleReport500(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Devkit.prototype.hasThrottleReport500 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Brake_report_501 brake_report_501 = 7;
 * @return {?proto.apollo.canbus.Brake_report_501}
 */
proto.apollo.canbus.Devkit.prototype.getBrakeReport501 = function() {
  return /** @type{?proto.apollo.canbus.Brake_report_501} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Brake_report_501, 7));
};


/**
 * @param {?proto.apollo.canbus.Brake_report_501|undefined} value
 * @return {!proto.apollo.canbus.Devkit} returns this
*/
proto.apollo.canbus.Devkit.prototype.setBrakeReport501 = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Devkit} returns this
 */
proto.apollo.canbus.Devkit.prototype.clearBrakeReport501 = function() {
  return this.setBrakeReport501(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Devkit.prototype.hasBrakeReport501 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Steering_report_502 steering_report_502 = 8;
 * @return {?proto.apollo.canbus.Steering_report_502}
 */
proto.apollo.canbus.Devkit.prototype.getSteeringReport502 = function() {
  return /** @type{?proto.apollo.canbus.Steering_report_502} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Steering_report_502, 8));
};


/**
 * @param {?proto.apollo.canbus.Steering_report_502|undefined} value
 * @return {!proto.apollo.canbus.Devkit} returns this
*/
proto.apollo.canbus.Devkit.prototype.setSteeringReport502 = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Devkit} returns this
 */
proto.apollo.canbus.Devkit.prototype.clearSteeringReport502 = function() {
  return this.setSteeringReport502(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Devkit.prototype.hasSteeringReport502 = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Gear_report_503 gear_report_503 = 9;
 * @return {?proto.apollo.canbus.Gear_report_503}
 */
proto.apollo.canbus.Devkit.prototype.getGearReport503 = function() {
  return /** @type{?proto.apollo.canbus.Gear_report_503} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Gear_report_503, 9));
};


/**
 * @param {?proto.apollo.canbus.Gear_report_503|undefined} value
 * @return {!proto.apollo.canbus.Devkit} returns this
*/
proto.apollo.canbus.Devkit.prototype.setGearReport503 = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Devkit} returns this
 */
proto.apollo.canbus.Devkit.prototype.clearGearReport503 = function() {
  return this.setGearReport503(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Devkit.prototype.hasGearReport503 = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Park_report_504 park_report_504 = 10;
 * @return {?proto.apollo.canbus.Park_report_504}
 */
proto.apollo.canbus.Devkit.prototype.getParkReport504 = function() {
  return /** @type{?proto.apollo.canbus.Park_report_504} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Park_report_504, 10));
};


/**
 * @param {?proto.apollo.canbus.Park_report_504|undefined} value
 * @return {!proto.apollo.canbus.Devkit} returns this
*/
proto.apollo.canbus.Devkit.prototype.setParkReport504 = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Devkit} returns this
 */
proto.apollo.canbus.Devkit.prototype.clearParkReport504 = function() {
  return this.setParkReport504(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Devkit.prototype.hasParkReport504 = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Vcu_report_505 vcu_report_505 = 11;
 * @return {?proto.apollo.canbus.Vcu_report_505}
 */
proto.apollo.canbus.Devkit.prototype.getVcuReport505 = function() {
  return /** @type{?proto.apollo.canbus.Vcu_report_505} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Vcu_report_505, 11));
};


/**
 * @param {?proto.apollo.canbus.Vcu_report_505|undefined} value
 * @return {!proto.apollo.canbus.Devkit} returns this
*/
proto.apollo.canbus.Devkit.prototype.setVcuReport505 = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Devkit} returns this
 */
proto.apollo.canbus.Devkit.prototype.clearVcuReport505 = function() {
  return this.setVcuReport505(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Devkit.prototype.hasVcuReport505 = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Wheelspeed_report_506 wheelspeed_report_506 = 12;
 * @return {?proto.apollo.canbus.Wheelspeed_report_506}
 */
proto.apollo.canbus.Devkit.prototype.getWheelspeedReport506 = function() {
  return /** @type{?proto.apollo.canbus.Wheelspeed_report_506} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Wheelspeed_report_506, 12));
};


/**
 * @param {?proto.apollo.canbus.Wheelspeed_report_506|undefined} value
 * @return {!proto.apollo.canbus.Devkit} returns this
*/
proto.apollo.canbus.Devkit.prototype.setWheelspeedReport506 = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Devkit} returns this
 */
proto.apollo.canbus.Devkit.prototype.clearWheelspeedReport506 = function() {
  return this.setWheelspeedReport506(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Devkit.prototype.hasWheelspeedReport506 = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Ultr_sensor_1_507 ultr_sensor_1_507 = 13;
 * @return {?proto.apollo.canbus.Ultr_sensor_1_507}
 */
proto.apollo.canbus.Devkit.prototype.getUltrSensor1507 = function() {
  return /** @type{?proto.apollo.canbus.Ultr_sensor_1_507} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Ultr_sensor_1_507, 13));
};


/**
 * @param {?proto.apollo.canbus.Ultr_sensor_1_507|undefined} value
 * @return {!proto.apollo.canbus.Devkit} returns this
*/
proto.apollo.canbus.Devkit.prototype.setUltrSensor1507 = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Devkit} returns this
 */
proto.apollo.canbus.Devkit.prototype.clearUltrSensor1507 = function() {
  return this.setUltrSensor1507(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Devkit.prototype.hasUltrSensor1507 = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Ultr_sensor_2_508 ultr_sensor_2_508 = 14;
 * @return {?proto.apollo.canbus.Ultr_sensor_2_508}
 */
proto.apollo.canbus.Devkit.prototype.getUltrSensor2508 = function() {
  return /** @type{?proto.apollo.canbus.Ultr_sensor_2_508} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Ultr_sensor_2_508, 14));
};


/**
 * @param {?proto.apollo.canbus.Ultr_sensor_2_508|undefined} value
 * @return {!proto.apollo.canbus.Devkit} returns this
*/
proto.apollo.canbus.Devkit.prototype.setUltrSensor2508 = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Devkit} returns this
 */
proto.apollo.canbus.Devkit.prototype.clearUltrSensor2508 = function() {
  return this.setUltrSensor2508(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Devkit.prototype.hasUltrSensor2508 = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional Ultr_sensor_3_509 ultr_sensor_3_509 = 15;
 * @return {?proto.apollo.canbus.Ultr_sensor_3_509}
 */
proto.apollo.canbus.Devkit.prototype.getUltrSensor3509 = function() {
  return /** @type{?proto.apollo.canbus.Ultr_sensor_3_509} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Ultr_sensor_3_509, 15));
};


/**
 * @param {?proto.apollo.canbus.Ultr_sensor_3_509|undefined} value
 * @return {!proto.apollo.canbus.Devkit} returns this
*/
proto.apollo.canbus.Devkit.prototype.setUltrSensor3509 = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Devkit} returns this
 */
proto.apollo.canbus.Devkit.prototype.clearUltrSensor3509 = function() {
  return this.setUltrSensor3509(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Devkit.prototype.hasUltrSensor3509 = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional Ultr_sensor_4_510 ultr_sensor_4_510 = 16;
 * @return {?proto.apollo.canbus.Ultr_sensor_4_510}
 */
proto.apollo.canbus.Devkit.prototype.getUltrSensor4510 = function() {
  return /** @type{?proto.apollo.canbus.Ultr_sensor_4_510} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Ultr_sensor_4_510, 16));
};


/**
 * @param {?proto.apollo.canbus.Ultr_sensor_4_510|undefined} value
 * @return {!proto.apollo.canbus.Devkit} returns this
*/
proto.apollo.canbus.Devkit.prototype.setUltrSensor4510 = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Devkit} returns this
 */
proto.apollo.canbus.Devkit.prototype.clearUltrSensor4510 = function() {
  return this.setUltrSensor4510(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Devkit.prototype.hasUltrSensor4510 = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional Ultr_sensor_5_511 ultr_sensor_5_511 = 17;
 * @return {?proto.apollo.canbus.Ultr_sensor_5_511}
 */
proto.apollo.canbus.Devkit.prototype.getUltrSensor5511 = function() {
  return /** @type{?proto.apollo.canbus.Ultr_sensor_5_511} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Ultr_sensor_5_511, 17));
};


/**
 * @param {?proto.apollo.canbus.Ultr_sensor_5_511|undefined} value
 * @return {!proto.apollo.canbus.Devkit} returns this
*/
proto.apollo.canbus.Devkit.prototype.setUltrSensor5511 = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Devkit} returns this
 */
proto.apollo.canbus.Devkit.prototype.clearUltrSensor5511 = function() {
  return this.setUltrSensor5511(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Devkit.prototype.hasUltrSensor5511 = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional Bms_report_512 bms_report_512 = 18;
 * @return {?proto.apollo.canbus.Bms_report_512}
 */
proto.apollo.canbus.Devkit.prototype.getBmsReport512 = function() {
  return /** @type{?proto.apollo.canbus.Bms_report_512} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Bms_report_512, 18));
};


/**
 * @param {?proto.apollo.canbus.Bms_report_512|undefined} value
 * @return {!proto.apollo.canbus.Devkit} returns this
*/
proto.apollo.canbus.Devkit.prototype.setBmsReport512 = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Devkit} returns this
 */
proto.apollo.canbus.Devkit.prototype.clearBmsReport512 = function() {
  return this.setBmsReport512(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Devkit.prototype.hasBmsReport512 = function() {
  return jspb.Message.getField(this, 18) != null;
};


goog.object.extend(exports, proto.apollo.canbus);
