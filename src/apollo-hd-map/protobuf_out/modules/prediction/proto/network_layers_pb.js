// source: modules/prediction/proto/network_layers.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.apollo.prediction.ActivationParameter', null, global);
goog.exportSymbol('proto.apollo.prediction.AvgPool1dParameter', null, global);
goog.exportSymbol('proto.apollo.prediction.BatchNormalizationParameter', null, global);
goog.exportSymbol('proto.apollo.prediction.ConcatenateParameter', null, global);
goog.exportSymbol('proto.apollo.prediction.Conv1dParameter', null, global);
goog.exportSymbol('proto.apollo.prediction.DenseParameter', null, global);
goog.exportSymbol('proto.apollo.prediction.FlattenParameter', null, global);
goog.exportSymbol('proto.apollo.prediction.InputParameter', null, global);
goog.exportSymbol('proto.apollo.prediction.LSTMParameter', null, global);
goog.exportSymbol('proto.apollo.prediction.LayerParameter', null, global);
goog.exportSymbol('proto.apollo.prediction.LayerParameter.OneofLayersCase', null, global);
goog.exportSymbol('proto.apollo.prediction.MaxPool1dParameter', null, global);
goog.exportSymbol('proto.apollo.prediction.TensorParameter', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.prediction.TensorParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.prediction.TensorParameter.repeatedFields_, null);
};
goog.inherits(proto.apollo.prediction.TensorParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.prediction.TensorParameter.displayName = 'proto.apollo.prediction.TensorParameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.prediction.InputParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.prediction.InputParameter.repeatedFields_, null);
};
goog.inherits(proto.apollo.prediction.InputParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.prediction.InputParameter.displayName = 'proto.apollo.prediction.InputParameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.prediction.DenseParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.prediction.DenseParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.prediction.DenseParameter.displayName = 'proto.apollo.prediction.DenseParameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.prediction.Conv1dParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.prediction.Conv1dParameter.repeatedFields_, null);
};
goog.inherits(proto.apollo.prediction.Conv1dParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.prediction.Conv1dParameter.displayName = 'proto.apollo.prediction.Conv1dParameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.prediction.MaxPool1dParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.prediction.MaxPool1dParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.prediction.MaxPool1dParameter.displayName = 'proto.apollo.prediction.MaxPool1dParameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.prediction.AvgPool1dParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.prediction.AvgPool1dParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.prediction.AvgPool1dParameter.displayName = 'proto.apollo.prediction.AvgPool1dParameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.prediction.BatchNormalizationParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.prediction.BatchNormalizationParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.prediction.BatchNormalizationParameter.displayName = 'proto.apollo.prediction.BatchNormalizationParameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.prediction.LSTMParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.prediction.LSTMParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.prediction.LSTMParameter.displayName = 'proto.apollo.prediction.LSTMParameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.prediction.ActivationParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.prediction.ActivationParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.prediction.ActivationParameter.displayName = 'proto.apollo.prediction.ActivationParameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.prediction.FlattenParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.prediction.FlattenParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.prediction.FlattenParameter.displayName = 'proto.apollo.prediction.FlattenParameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.prediction.ConcatenateParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.prediction.ConcatenateParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.prediction.ConcatenateParameter.displayName = 'proto.apollo.prediction.ConcatenateParameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.prediction.LayerParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.apollo.prediction.LayerParameter.oneofGroups_);
};
goog.inherits(proto.apollo.prediction.LayerParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.prediction.LayerParameter.displayName = 'proto.apollo.prediction.LayerParameter';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.prediction.TensorParameter.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.prediction.TensorParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.prediction.TensorParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.prediction.TensorParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.TensorParameter.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f,
    shapeList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of TensorParameter as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.prediction.TensorParameter.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.dataList;

  /** @type {?|undefined} */
  this.shapeList;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.prediction.TensorParameter.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.TensorParameter.fromObject = function(obj) {
  var msg = new proto.apollo.prediction.TensorParameter();
  obj.dataList != null && jspb.Message.setField(msg, 1, obj.dataList);
  obj.shapeList != null && jspb.Message.setField(msg, 2, obj.shapeList);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.TensorParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.prediction.TensorParameter;
  return proto.apollo.prediction.TensorParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.prediction.TensorParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.TensorParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addData(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addShape(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.prediction.TensorParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.prediction.TensorParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.prediction.TensorParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.TensorParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writePackedFloat(
      1,
      f
    );
  }
  f = message.getShapeList();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      2,
      f
    );
  }
};


/**
 * repeated float data = 1;
 * @return {!Array<number>}
 */
proto.apollo.prediction.TensorParameter.prototype.getDataList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.apollo.prediction.TensorParameter} returns this
 */
proto.apollo.prediction.TensorParameter.prototype.setDataList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.apollo.prediction.TensorParameter} returns this
 */
proto.apollo.prediction.TensorParameter.prototype.addData = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.prediction.TensorParameter} returns this
 */
proto.apollo.prediction.TensorParameter.prototype.clearDataList = function() {
  return this.setDataList([]);
};


/**
 * repeated int32 shape = 2;
 * @return {!Array<number>}
 */
proto.apollo.prediction.TensorParameter.prototype.getShapeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.apollo.prediction.TensorParameter} returns this
 */
proto.apollo.prediction.TensorParameter.prototype.setShapeList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.apollo.prediction.TensorParameter} returns this
 */
proto.apollo.prediction.TensorParameter.prototype.addShape = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.prediction.TensorParameter} returns this
 */
proto.apollo.prediction.TensorParameter.prototype.clearShapeList = function() {
  return this.setShapeList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.prediction.InputParameter.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.prediction.InputParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.prediction.InputParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.prediction.InputParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.InputParameter.toObject = function(includeInstance, msg) {
  var f, obj = {
    inputShapeList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    dtype: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    sparse: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of InputParameter as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.prediction.InputParameter.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.inputShapeList;

  /** @type {?|undefined} */
  this.dtype;

  /** @type {?|undefined} */
  this.sparse;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.prediction.InputParameter.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.prediction.InputParameter}
 */
proto.apollo.prediction.InputParameter.fromObject = function(obj) {
  var msg = new proto.apollo.prediction.InputParameter();
  obj.inputShapeList != null && jspb.Message.setField(msg, 1, obj.inputShapeList);
  obj.dtype != null && jspb.Message.setField(msg, 2, obj.dtype);
  obj.sparse != null && jspb.Message.setField(msg, 3, obj.sparse);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.prediction.InputParameter}
 */
proto.apollo.prediction.InputParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.prediction.InputParameter;
  return proto.apollo.prediction.InputParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.prediction.InputParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.prediction.InputParameter}
 */
proto.apollo.prediction.InputParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addInputShape(values[i]);
      }
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDtype(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSparse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.prediction.InputParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.prediction.InputParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.prediction.InputParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.InputParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInputShapeList();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * repeated int32 input_shape = 1;
 * @return {!Array<number>}
 */
proto.apollo.prediction.InputParameter.prototype.getInputShapeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.apollo.prediction.InputParameter} returns this
 */
proto.apollo.prediction.InputParameter.prototype.setInputShapeList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.apollo.prediction.InputParameter} returns this
 */
proto.apollo.prediction.InputParameter.prototype.addInputShape = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.prediction.InputParameter} returns this
 */
proto.apollo.prediction.InputParameter.prototype.clearInputShapeList = function() {
  return this.setInputShapeList([]);
};


/**
 * optional string dtype = 2;
 * @return {string}
 */
proto.apollo.prediction.InputParameter.prototype.getDtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.prediction.InputParameter} returns this
 */
proto.apollo.prediction.InputParameter.prototype.setDtype = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.InputParameter} returns this
 */
proto.apollo.prediction.InputParameter.prototype.clearDtype = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.InputParameter.prototype.hasDtype = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool sparse = 3;
 * @return {boolean}
 */
proto.apollo.prediction.InputParameter.prototype.getSparse = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.prediction.InputParameter} returns this
 */
proto.apollo.prediction.InputParameter.prototype.setSparse = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.InputParameter} returns this
 */
proto.apollo.prediction.InputParameter.prototype.clearSparse = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.InputParameter.prototype.hasSparse = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.prediction.DenseParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.prediction.DenseParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.prediction.DenseParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.DenseParameter.toObject = function(includeInstance, msg) {
  var f, obj = {
    units: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    activation: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    useBias: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    weights: (f = msg.getWeights()) && proto.apollo.prediction.TensorParameter.toObject(includeInstance, f),
    bias: (f = msg.getBias()) && proto.apollo.prediction.TensorParameter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of DenseParameter as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.prediction.DenseParameter.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.units;

  /** @type {?|undefined} */
  this.activation;

  /** @type {?|undefined} */
  this.useBias;

  /** @type {?|undefined} */
  this.weights;

  /** @type {?|undefined} */
  this.bias;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.prediction.DenseParameter.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.prediction.DenseParameter}
 */
proto.apollo.prediction.DenseParameter.fromObject = function(obj) {
  var msg = new proto.apollo.prediction.DenseParameter();
  obj.units != null && jspb.Message.setField(msg, 1, obj.units);
  obj.activation != null && jspb.Message.setField(msg, 2, obj.activation);
  obj.useBias != null && jspb.Message.setField(msg, 3, obj.useBias);
  obj.weights && jspb.Message.setWrapperField(
      msg, 4, proto.apollo.prediction.TensorParameter.fromObject(obj.weights));
  obj.bias && jspb.Message.setWrapperField(
      msg, 5, proto.apollo.prediction.TensorParameter.fromObject(obj.bias));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.prediction.DenseParameter}
 */
proto.apollo.prediction.DenseParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.prediction.DenseParameter;
  return proto.apollo.prediction.DenseParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.prediction.DenseParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.prediction.DenseParameter}
 */
proto.apollo.prediction.DenseParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUnits(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setActivation(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseBias(value);
      break;
    case 4:
      var value = new proto.apollo.prediction.TensorParameter;
      reader.readMessage(value,proto.apollo.prediction.TensorParameter.deserializeBinaryFromReader);
      msg.setWeights(value);
      break;
    case 5:
      var value = new proto.apollo.prediction.TensorParameter;
      reader.readMessage(value,proto.apollo.prediction.TensorParameter.deserializeBinaryFromReader);
      msg.setBias(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.prediction.DenseParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.prediction.DenseParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.prediction.DenseParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.DenseParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getWeights();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.apollo.prediction.TensorParameter.serializeBinaryToWriter
    );
  }
  f = message.getBias();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.apollo.prediction.TensorParameter.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 units = 1;
 * @return {number}
 */
proto.apollo.prediction.DenseParameter.prototype.getUnits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.prediction.DenseParameter} returns this
 */
proto.apollo.prediction.DenseParameter.prototype.setUnits = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.DenseParameter} returns this
 */
proto.apollo.prediction.DenseParameter.prototype.clearUnits = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.DenseParameter.prototype.hasUnits = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string activation = 2;
 * @return {string}
 */
proto.apollo.prediction.DenseParameter.prototype.getActivation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.prediction.DenseParameter} returns this
 */
proto.apollo.prediction.DenseParameter.prototype.setActivation = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.DenseParameter} returns this
 */
proto.apollo.prediction.DenseParameter.prototype.clearActivation = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.DenseParameter.prototype.hasActivation = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool use_bias = 3;
 * @return {boolean}
 */
proto.apollo.prediction.DenseParameter.prototype.getUseBias = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.prediction.DenseParameter} returns this
 */
proto.apollo.prediction.DenseParameter.prototype.setUseBias = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.DenseParameter} returns this
 */
proto.apollo.prediction.DenseParameter.prototype.clearUseBias = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.DenseParameter.prototype.hasUseBias = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional TensorParameter weights = 4;
 * @return {?proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.DenseParameter.prototype.getWeights = function() {
  return /** @type{?proto.apollo.prediction.TensorParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.TensorParameter, 4));
};


/**
 * @param {?proto.apollo.prediction.TensorParameter|undefined} value
 * @return {!proto.apollo.prediction.DenseParameter} returns this
*/
proto.apollo.prediction.DenseParameter.prototype.setWeights = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.DenseParameter} returns this
 */
proto.apollo.prediction.DenseParameter.prototype.clearWeights = function() {
  return this.setWeights(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.DenseParameter.prototype.hasWeights = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional TensorParameter bias = 5;
 * @return {?proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.DenseParameter.prototype.getBias = function() {
  return /** @type{?proto.apollo.prediction.TensorParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.TensorParameter, 5));
};


/**
 * @param {?proto.apollo.prediction.TensorParameter|undefined} value
 * @return {!proto.apollo.prediction.DenseParameter} returns this
*/
proto.apollo.prediction.DenseParameter.prototype.setBias = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.DenseParameter} returns this
 */
proto.apollo.prediction.DenseParameter.prototype.clearBias = function() {
  return this.setBias(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.DenseParameter.prototype.hasBias = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.prediction.Conv1dParameter.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.prediction.Conv1dParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.prediction.Conv1dParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.prediction.Conv1dParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.Conv1dParameter.toObject = function(includeInstance, msg) {
  var f, obj = {
    shapeList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    useBias: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    kernel: (f = msg.getKernel()) && proto.apollo.prediction.TensorParameter.toObject(includeInstance, f),
    bias: (f = msg.getBias()) && proto.apollo.prediction.TensorParameter.toObject(includeInstance, f),
    stride: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Conv1dParameter as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.prediction.Conv1dParameter.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.shapeList;

  /** @type {?|undefined} */
  this.useBias;

  /** @type {?|undefined} */
  this.kernel;

  /** @type {?|undefined} */
  this.bias;

  /** @type {?|undefined} */
  this.stride;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.prediction.Conv1dParameter.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.prediction.Conv1dParameter}
 */
proto.apollo.prediction.Conv1dParameter.fromObject = function(obj) {
  var msg = new proto.apollo.prediction.Conv1dParameter();
  obj.shapeList != null && jspb.Message.setField(msg, 1, obj.shapeList);
  obj.useBias != null && jspb.Message.setField(msg, 2, obj.useBias);
  obj.kernel && jspb.Message.setWrapperField(
      msg, 3, proto.apollo.prediction.TensorParameter.fromObject(obj.kernel));
  obj.bias && jspb.Message.setWrapperField(
      msg, 4, proto.apollo.prediction.TensorParameter.fromObject(obj.bias));
  obj.stride != null && jspb.Message.setField(msg, 5, obj.stride);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.prediction.Conv1dParameter}
 */
proto.apollo.prediction.Conv1dParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.prediction.Conv1dParameter;
  return proto.apollo.prediction.Conv1dParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.prediction.Conv1dParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.prediction.Conv1dParameter}
 */
proto.apollo.prediction.Conv1dParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addShape(values[i]);
      }
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseBias(value);
      break;
    case 3:
      var value = new proto.apollo.prediction.TensorParameter;
      reader.readMessage(value,proto.apollo.prediction.TensorParameter.deserializeBinaryFromReader);
      msg.setKernel(value);
      break;
    case 4:
      var value = new proto.apollo.prediction.TensorParameter;
      reader.readMessage(value,proto.apollo.prediction.TensorParameter.deserializeBinaryFromReader);
      msg.setBias(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStride(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.prediction.Conv1dParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.prediction.Conv1dParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.prediction.Conv1dParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.Conv1dParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShapeList();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getKernel();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.apollo.prediction.TensorParameter.serializeBinaryToWriter
    );
  }
  f = message.getBias();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.apollo.prediction.TensorParameter.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * repeated int32 shape = 1;
 * @return {!Array<number>}
 */
proto.apollo.prediction.Conv1dParameter.prototype.getShapeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.apollo.prediction.Conv1dParameter} returns this
 */
proto.apollo.prediction.Conv1dParameter.prototype.setShapeList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.apollo.prediction.Conv1dParameter} returns this
 */
proto.apollo.prediction.Conv1dParameter.prototype.addShape = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.prediction.Conv1dParameter} returns this
 */
proto.apollo.prediction.Conv1dParameter.prototype.clearShapeList = function() {
  return this.setShapeList([]);
};


/**
 * optional bool use_bias = 2;
 * @return {boolean}
 */
proto.apollo.prediction.Conv1dParameter.prototype.getUseBias = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.prediction.Conv1dParameter} returns this
 */
proto.apollo.prediction.Conv1dParameter.prototype.setUseBias = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.Conv1dParameter} returns this
 */
proto.apollo.prediction.Conv1dParameter.prototype.clearUseBias = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.Conv1dParameter.prototype.hasUseBias = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TensorParameter kernel = 3;
 * @return {?proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.Conv1dParameter.prototype.getKernel = function() {
  return /** @type{?proto.apollo.prediction.TensorParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.TensorParameter, 3));
};


/**
 * @param {?proto.apollo.prediction.TensorParameter|undefined} value
 * @return {!proto.apollo.prediction.Conv1dParameter} returns this
*/
proto.apollo.prediction.Conv1dParameter.prototype.setKernel = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.Conv1dParameter} returns this
 */
proto.apollo.prediction.Conv1dParameter.prototype.clearKernel = function() {
  return this.setKernel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.Conv1dParameter.prototype.hasKernel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional TensorParameter bias = 4;
 * @return {?proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.Conv1dParameter.prototype.getBias = function() {
  return /** @type{?proto.apollo.prediction.TensorParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.TensorParameter, 4));
};


/**
 * @param {?proto.apollo.prediction.TensorParameter|undefined} value
 * @return {!proto.apollo.prediction.Conv1dParameter} returns this
*/
proto.apollo.prediction.Conv1dParameter.prototype.setBias = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.Conv1dParameter} returns this
 */
proto.apollo.prediction.Conv1dParameter.prototype.clearBias = function() {
  return this.setBias(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.Conv1dParameter.prototype.hasBias = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 stride = 5;
 * @return {number}
 */
proto.apollo.prediction.Conv1dParameter.prototype.getStride = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.prediction.Conv1dParameter} returns this
 */
proto.apollo.prediction.Conv1dParameter.prototype.setStride = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.Conv1dParameter} returns this
 */
proto.apollo.prediction.Conv1dParameter.prototype.clearStride = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.Conv1dParameter.prototype.hasStride = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.prediction.MaxPool1dParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.prediction.MaxPool1dParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.prediction.MaxPool1dParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.MaxPool1dParameter.toObject = function(includeInstance, msg) {
  var f, obj = {
    kernelSize: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    stride: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of MaxPool1dParameter as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.prediction.MaxPool1dParameter.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.kernelSize;

  /** @type {?|undefined} */
  this.stride;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.prediction.MaxPool1dParameter.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.prediction.MaxPool1dParameter}
 */
proto.apollo.prediction.MaxPool1dParameter.fromObject = function(obj) {
  var msg = new proto.apollo.prediction.MaxPool1dParameter();
  obj.kernelSize != null && jspb.Message.setField(msg, 1, obj.kernelSize);
  obj.stride != null && jspb.Message.setField(msg, 2, obj.stride);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.prediction.MaxPool1dParameter}
 */
proto.apollo.prediction.MaxPool1dParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.prediction.MaxPool1dParameter;
  return proto.apollo.prediction.MaxPool1dParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.prediction.MaxPool1dParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.prediction.MaxPool1dParameter}
 */
proto.apollo.prediction.MaxPool1dParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKernelSize(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStride(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.prediction.MaxPool1dParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.prediction.MaxPool1dParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.prediction.MaxPool1dParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.MaxPool1dParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 kernel_size = 1;
 * @return {number}
 */
proto.apollo.prediction.MaxPool1dParameter.prototype.getKernelSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.prediction.MaxPool1dParameter} returns this
 */
proto.apollo.prediction.MaxPool1dParameter.prototype.setKernelSize = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.MaxPool1dParameter} returns this
 */
proto.apollo.prediction.MaxPool1dParameter.prototype.clearKernelSize = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.MaxPool1dParameter.prototype.hasKernelSize = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 stride = 2;
 * @return {number}
 */
proto.apollo.prediction.MaxPool1dParameter.prototype.getStride = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.prediction.MaxPool1dParameter} returns this
 */
proto.apollo.prediction.MaxPool1dParameter.prototype.setStride = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.MaxPool1dParameter} returns this
 */
proto.apollo.prediction.MaxPool1dParameter.prototype.clearStride = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.MaxPool1dParameter.prototype.hasStride = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.prediction.AvgPool1dParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.prediction.AvgPool1dParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.prediction.AvgPool1dParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.AvgPool1dParameter.toObject = function(includeInstance, msg) {
  var f, obj = {
    kernelSize: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    stride: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of AvgPool1dParameter as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.prediction.AvgPool1dParameter.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.kernelSize;

  /** @type {?|undefined} */
  this.stride;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.prediction.AvgPool1dParameter.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.prediction.AvgPool1dParameter}
 */
proto.apollo.prediction.AvgPool1dParameter.fromObject = function(obj) {
  var msg = new proto.apollo.prediction.AvgPool1dParameter();
  obj.kernelSize != null && jspb.Message.setField(msg, 1, obj.kernelSize);
  obj.stride != null && jspb.Message.setField(msg, 2, obj.stride);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.prediction.AvgPool1dParameter}
 */
proto.apollo.prediction.AvgPool1dParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.prediction.AvgPool1dParameter;
  return proto.apollo.prediction.AvgPool1dParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.prediction.AvgPool1dParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.prediction.AvgPool1dParameter}
 */
proto.apollo.prediction.AvgPool1dParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKernelSize(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStride(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.prediction.AvgPool1dParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.prediction.AvgPool1dParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.prediction.AvgPool1dParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.AvgPool1dParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 kernel_size = 1;
 * @return {number}
 */
proto.apollo.prediction.AvgPool1dParameter.prototype.getKernelSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.prediction.AvgPool1dParameter} returns this
 */
proto.apollo.prediction.AvgPool1dParameter.prototype.setKernelSize = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.AvgPool1dParameter} returns this
 */
proto.apollo.prediction.AvgPool1dParameter.prototype.clearKernelSize = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.AvgPool1dParameter.prototype.hasKernelSize = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 stride = 2;
 * @return {number}
 */
proto.apollo.prediction.AvgPool1dParameter.prototype.getStride = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.prediction.AvgPool1dParameter} returns this
 */
proto.apollo.prediction.AvgPool1dParameter.prototype.setStride = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.AvgPool1dParameter} returns this
 */
proto.apollo.prediction.AvgPool1dParameter.prototype.clearStride = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.AvgPool1dParameter.prototype.hasStride = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.prediction.BatchNormalizationParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.prediction.BatchNormalizationParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.BatchNormalizationParameter.toObject = function(includeInstance, msg) {
  var f, obj = {
    epsilon: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 1.0E-5),
    axis: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    center: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    scale: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    momentum: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    mu: (f = msg.getMu()) && proto.apollo.prediction.TensorParameter.toObject(includeInstance, f),
    sigma: (f = msg.getSigma()) && proto.apollo.prediction.TensorParameter.toObject(includeInstance, f),
    gamma: (f = msg.getGamma()) && proto.apollo.prediction.TensorParameter.toObject(includeInstance, f),
    beta: (f = msg.getBeta()) && proto.apollo.prediction.TensorParameter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of BatchNormalizationParameter as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.prediction.BatchNormalizationParameter.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.epsilon;

  /** @type {?|undefined} */
  this.axis;

  /** @type {?|undefined} */
  this.center;

  /** @type {?|undefined} */
  this.scale;

  /** @type {?|undefined} */
  this.momentum;

  /** @type {?|undefined} */
  this.mu;

  /** @type {?|undefined} */
  this.sigma;

  /** @type {?|undefined} */
  this.gamma;

  /** @type {?|undefined} */
  this.beta;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.prediction.BatchNormalizationParameter.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.prediction.BatchNormalizationParameter}
 */
proto.apollo.prediction.BatchNormalizationParameter.fromObject = function(obj) {
  var msg = new proto.apollo.prediction.BatchNormalizationParameter();
  obj.epsilon != null && jspb.Message.setField(msg, 1, obj.epsilon);
  obj.axis != null && jspb.Message.setField(msg, 2, obj.axis);
  obj.center != null && jspb.Message.setField(msg, 3, obj.center);
  obj.scale != null && jspb.Message.setField(msg, 4, obj.scale);
  obj.momentum != null && jspb.Message.setField(msg, 5, obj.momentum);
  obj.mu && jspb.Message.setWrapperField(
      msg, 6, proto.apollo.prediction.TensorParameter.fromObject(obj.mu));
  obj.sigma && jspb.Message.setWrapperField(
      msg, 7, proto.apollo.prediction.TensorParameter.fromObject(obj.sigma));
  obj.gamma && jspb.Message.setWrapperField(
      msg, 8, proto.apollo.prediction.TensorParameter.fromObject(obj.gamma));
  obj.beta && jspb.Message.setWrapperField(
      msg, 9, proto.apollo.prediction.TensorParameter.fromObject(obj.beta));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.prediction.BatchNormalizationParameter}
 */
proto.apollo.prediction.BatchNormalizationParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.prediction.BatchNormalizationParameter;
  return proto.apollo.prediction.BatchNormalizationParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.prediction.BatchNormalizationParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.prediction.BatchNormalizationParameter}
 */
proto.apollo.prediction.BatchNormalizationParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEpsilon(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAxis(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCenter(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setScale(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMomentum(value);
      break;
    case 6:
      var value = new proto.apollo.prediction.TensorParameter;
      reader.readMessage(value,proto.apollo.prediction.TensorParameter.deserializeBinaryFromReader);
      msg.setMu(value);
      break;
    case 7:
      var value = new proto.apollo.prediction.TensorParameter;
      reader.readMessage(value,proto.apollo.prediction.TensorParameter.deserializeBinaryFromReader);
      msg.setSigma(value);
      break;
    case 8:
      var value = new proto.apollo.prediction.TensorParameter;
      reader.readMessage(value,proto.apollo.prediction.TensorParameter.deserializeBinaryFromReader);
      msg.setGamma(value);
      break;
    case 9:
      var value = new proto.apollo.prediction.TensorParameter;
      reader.readMessage(value,proto.apollo.prediction.TensorParameter.deserializeBinaryFromReader);
      msg.setBeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.prediction.BatchNormalizationParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.prediction.BatchNormalizationParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.BatchNormalizationParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getMu();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.apollo.prediction.TensorParameter.serializeBinaryToWriter
    );
  }
  f = message.getSigma();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.apollo.prediction.TensorParameter.serializeBinaryToWriter
    );
  }
  f = message.getGamma();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.apollo.prediction.TensorParameter.serializeBinaryToWriter
    );
  }
  f = message.getBeta();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.apollo.prediction.TensorParameter.serializeBinaryToWriter
    );
  }
};


/**
 * optional double epsilon = 1;
 * @return {number}
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.getEpsilon = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 1.0E-5));
};


/**
 * @param {number} value
 * @return {!proto.apollo.prediction.BatchNormalizationParameter} returns this
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.setEpsilon = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.BatchNormalizationParameter} returns this
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.clearEpsilon = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.hasEpsilon = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 axis = 2;
 * @return {number}
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.getAxis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.prediction.BatchNormalizationParameter} returns this
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.setAxis = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.BatchNormalizationParameter} returns this
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.clearAxis = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.hasAxis = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool center = 3;
 * @return {boolean}
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.getCenter = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.prediction.BatchNormalizationParameter} returns this
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.setCenter = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.BatchNormalizationParameter} returns this
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.clearCenter = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.hasCenter = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool scale = 4;
 * @return {boolean}
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.getScale = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.prediction.BatchNormalizationParameter} returns this
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.setScale = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.BatchNormalizationParameter} returns this
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.clearScale = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.hasScale = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional float momentum = 5;
 * @return {number}
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.getMomentum = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.prediction.BatchNormalizationParameter} returns this
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.setMomentum = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.BatchNormalizationParameter} returns this
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.clearMomentum = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.hasMomentum = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional TensorParameter mu = 6;
 * @return {?proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.getMu = function() {
  return /** @type{?proto.apollo.prediction.TensorParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.TensorParameter, 6));
};


/**
 * @param {?proto.apollo.prediction.TensorParameter|undefined} value
 * @return {!proto.apollo.prediction.BatchNormalizationParameter} returns this
*/
proto.apollo.prediction.BatchNormalizationParameter.prototype.setMu = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.BatchNormalizationParameter} returns this
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.clearMu = function() {
  return this.setMu(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.hasMu = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional TensorParameter sigma = 7;
 * @return {?proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.getSigma = function() {
  return /** @type{?proto.apollo.prediction.TensorParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.TensorParameter, 7));
};


/**
 * @param {?proto.apollo.prediction.TensorParameter|undefined} value
 * @return {!proto.apollo.prediction.BatchNormalizationParameter} returns this
*/
proto.apollo.prediction.BatchNormalizationParameter.prototype.setSigma = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.BatchNormalizationParameter} returns this
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.clearSigma = function() {
  return this.setSigma(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.hasSigma = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional TensorParameter gamma = 8;
 * @return {?proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.getGamma = function() {
  return /** @type{?proto.apollo.prediction.TensorParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.TensorParameter, 8));
};


/**
 * @param {?proto.apollo.prediction.TensorParameter|undefined} value
 * @return {!proto.apollo.prediction.BatchNormalizationParameter} returns this
*/
proto.apollo.prediction.BatchNormalizationParameter.prototype.setGamma = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.BatchNormalizationParameter} returns this
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.clearGamma = function() {
  return this.setGamma(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.hasGamma = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional TensorParameter beta = 9;
 * @return {?proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.getBeta = function() {
  return /** @type{?proto.apollo.prediction.TensorParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.TensorParameter, 9));
};


/**
 * @param {?proto.apollo.prediction.TensorParameter|undefined} value
 * @return {!proto.apollo.prediction.BatchNormalizationParameter} returns this
*/
proto.apollo.prediction.BatchNormalizationParameter.prototype.setBeta = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.BatchNormalizationParameter} returns this
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.clearBeta = function() {
  return this.setBeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.BatchNormalizationParameter.prototype.hasBeta = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.prediction.LSTMParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.prediction.LSTMParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.prediction.LSTMParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.LSTMParameter.toObject = function(includeInstance, msg) {
  var f, obj = {
    units: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    returnSequences: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    stateful: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    activation: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    recurrentActivation: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    useBias: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    unitForgetBias: jspb.Message.getBooleanFieldWithDefault(msg, 7, true),
    goBackwards: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    unroll: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    implementation: jspb.Message.getFieldWithDefault(msg, 10, 0),
    weightsInput: (f = msg.getWeightsInput()) && proto.apollo.prediction.TensorParameter.toObject(includeInstance, f),
    weightsForget: (f = msg.getWeightsForget()) && proto.apollo.prediction.TensorParameter.toObject(includeInstance, f),
    weightsCell: (f = msg.getWeightsCell()) && proto.apollo.prediction.TensorParameter.toObject(includeInstance, f),
    weightsOutput: (f = msg.getWeightsOutput()) && proto.apollo.prediction.TensorParameter.toObject(includeInstance, f),
    biasInput: (f = msg.getBiasInput()) && proto.apollo.prediction.TensorParameter.toObject(includeInstance, f),
    biasForget: (f = msg.getBiasForget()) && proto.apollo.prediction.TensorParameter.toObject(includeInstance, f),
    biasCell: (f = msg.getBiasCell()) && proto.apollo.prediction.TensorParameter.toObject(includeInstance, f),
    biasOutput: (f = msg.getBiasOutput()) && proto.apollo.prediction.TensorParameter.toObject(includeInstance, f),
    recurrentWeightsInput: (f = msg.getRecurrentWeightsInput()) && proto.apollo.prediction.TensorParameter.toObject(includeInstance, f),
    recurrentWeightsForget: (f = msg.getRecurrentWeightsForget()) && proto.apollo.prediction.TensorParameter.toObject(includeInstance, f),
    recurrentWeightsCell: (f = msg.getRecurrentWeightsCell()) && proto.apollo.prediction.TensorParameter.toObject(includeInstance, f),
    recurrentWeightsOutput: (f = msg.getRecurrentWeightsOutput()) && proto.apollo.prediction.TensorParameter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of LSTMParameter as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.prediction.LSTMParameter.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.units;

  /** @type {?|undefined} */
  this.returnSequences;

  /** @type {?|undefined} */
  this.stateful;

  /** @type {?|undefined} */
  this.activation;

  /** @type {?|undefined} */
  this.recurrentActivation;

  /** @type {?|undefined} */
  this.useBias;

  /** @type {?|undefined} */
  this.unitForgetBias;

  /** @type {?|undefined} */
  this.goBackwards;

  /** @type {?|undefined} */
  this.unroll;

  /** @type {?|undefined} */
  this.implementation;

  /** @type {?|undefined} */
  this.weightsInput;

  /** @type {?|undefined} */
  this.weightsForget;

  /** @type {?|undefined} */
  this.weightsCell;

  /** @type {?|undefined} */
  this.weightsOutput;

  /** @type {?|undefined} */
  this.biasInput;

  /** @type {?|undefined} */
  this.biasForget;

  /** @type {?|undefined} */
  this.biasCell;

  /** @type {?|undefined} */
  this.biasOutput;

  /** @type {?|undefined} */
  this.recurrentWeightsInput;

  /** @type {?|undefined} */
  this.recurrentWeightsForget;

  /** @type {?|undefined} */
  this.recurrentWeightsCell;

  /** @type {?|undefined} */
  this.recurrentWeightsOutput;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.prediction.LSTMParameter.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.prediction.LSTMParameter}
 */
proto.apollo.prediction.LSTMParameter.fromObject = function(obj) {
  var msg = new proto.apollo.prediction.LSTMParameter();
  obj.units != null && jspb.Message.setField(msg, 1, obj.units);
  obj.returnSequences != null && jspb.Message.setField(msg, 2, obj.returnSequences);
  obj.stateful != null && jspb.Message.setField(msg, 3, obj.stateful);
  obj.activation != null && jspb.Message.setField(msg, 4, obj.activation);
  obj.recurrentActivation != null && jspb.Message.setField(msg, 5, obj.recurrentActivation);
  obj.useBias != null && jspb.Message.setField(msg, 6, obj.useBias);
  obj.unitForgetBias != null && jspb.Message.setField(msg, 7, obj.unitForgetBias);
  obj.goBackwards != null && jspb.Message.setField(msg, 8, obj.goBackwards);
  obj.unroll != null && jspb.Message.setField(msg, 9, obj.unroll);
  obj.implementation != null && jspb.Message.setField(msg, 10, obj.implementation);
  obj.weightsInput && jspb.Message.setWrapperField(
      msg, 15, proto.apollo.prediction.TensorParameter.fromObject(obj.weightsInput));
  obj.weightsForget && jspb.Message.setWrapperField(
      msg, 16, proto.apollo.prediction.TensorParameter.fromObject(obj.weightsForget));
  obj.weightsCell && jspb.Message.setWrapperField(
      msg, 17, proto.apollo.prediction.TensorParameter.fromObject(obj.weightsCell));
  obj.weightsOutput && jspb.Message.setWrapperField(
      msg, 18, proto.apollo.prediction.TensorParameter.fromObject(obj.weightsOutput));
  obj.biasInput && jspb.Message.setWrapperField(
      msg, 19, proto.apollo.prediction.TensorParameter.fromObject(obj.biasInput));
  obj.biasForget && jspb.Message.setWrapperField(
      msg, 20, proto.apollo.prediction.TensorParameter.fromObject(obj.biasForget));
  obj.biasCell && jspb.Message.setWrapperField(
      msg, 21, proto.apollo.prediction.TensorParameter.fromObject(obj.biasCell));
  obj.biasOutput && jspb.Message.setWrapperField(
      msg, 22, proto.apollo.prediction.TensorParameter.fromObject(obj.biasOutput));
  obj.recurrentWeightsInput && jspb.Message.setWrapperField(
      msg, 25, proto.apollo.prediction.TensorParameter.fromObject(obj.recurrentWeightsInput));
  obj.recurrentWeightsForget && jspb.Message.setWrapperField(
      msg, 26, proto.apollo.prediction.TensorParameter.fromObject(obj.recurrentWeightsForget));
  obj.recurrentWeightsCell && jspb.Message.setWrapperField(
      msg, 27, proto.apollo.prediction.TensorParameter.fromObject(obj.recurrentWeightsCell));
  obj.recurrentWeightsOutput && jspb.Message.setWrapperField(
      msg, 28, proto.apollo.prediction.TensorParameter.fromObject(obj.recurrentWeightsOutput));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.prediction.LSTMParameter}
 */
proto.apollo.prediction.LSTMParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.prediction.LSTMParameter;
  return proto.apollo.prediction.LSTMParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.prediction.LSTMParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.prediction.LSTMParameter}
 */
proto.apollo.prediction.LSTMParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUnits(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReturnSequences(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStateful(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setActivation(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecurrentActivation(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseBias(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUnitForgetBias(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGoBackwards(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUnroll(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setImplementation(value);
      break;
    case 15:
      var value = new proto.apollo.prediction.TensorParameter;
      reader.readMessage(value,proto.apollo.prediction.TensorParameter.deserializeBinaryFromReader);
      msg.setWeightsInput(value);
      break;
    case 16:
      var value = new proto.apollo.prediction.TensorParameter;
      reader.readMessage(value,proto.apollo.prediction.TensorParameter.deserializeBinaryFromReader);
      msg.setWeightsForget(value);
      break;
    case 17:
      var value = new proto.apollo.prediction.TensorParameter;
      reader.readMessage(value,proto.apollo.prediction.TensorParameter.deserializeBinaryFromReader);
      msg.setWeightsCell(value);
      break;
    case 18:
      var value = new proto.apollo.prediction.TensorParameter;
      reader.readMessage(value,proto.apollo.prediction.TensorParameter.deserializeBinaryFromReader);
      msg.setWeightsOutput(value);
      break;
    case 19:
      var value = new proto.apollo.prediction.TensorParameter;
      reader.readMessage(value,proto.apollo.prediction.TensorParameter.deserializeBinaryFromReader);
      msg.setBiasInput(value);
      break;
    case 20:
      var value = new proto.apollo.prediction.TensorParameter;
      reader.readMessage(value,proto.apollo.prediction.TensorParameter.deserializeBinaryFromReader);
      msg.setBiasForget(value);
      break;
    case 21:
      var value = new proto.apollo.prediction.TensorParameter;
      reader.readMessage(value,proto.apollo.prediction.TensorParameter.deserializeBinaryFromReader);
      msg.setBiasCell(value);
      break;
    case 22:
      var value = new proto.apollo.prediction.TensorParameter;
      reader.readMessage(value,proto.apollo.prediction.TensorParameter.deserializeBinaryFromReader);
      msg.setBiasOutput(value);
      break;
    case 25:
      var value = new proto.apollo.prediction.TensorParameter;
      reader.readMessage(value,proto.apollo.prediction.TensorParameter.deserializeBinaryFromReader);
      msg.setRecurrentWeightsInput(value);
      break;
    case 26:
      var value = new proto.apollo.prediction.TensorParameter;
      reader.readMessage(value,proto.apollo.prediction.TensorParameter.deserializeBinaryFromReader);
      msg.setRecurrentWeightsForget(value);
      break;
    case 27:
      var value = new proto.apollo.prediction.TensorParameter;
      reader.readMessage(value,proto.apollo.prediction.TensorParameter.deserializeBinaryFromReader);
      msg.setRecurrentWeightsCell(value);
      break;
    case 28:
      var value = new proto.apollo.prediction.TensorParameter;
      reader.readMessage(value,proto.apollo.prediction.TensorParameter.deserializeBinaryFromReader);
      msg.setRecurrentWeightsOutput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.prediction.LSTMParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.prediction.LSTMParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.prediction.LSTMParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.LSTMParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getWeightsInput();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.apollo.prediction.TensorParameter.serializeBinaryToWriter
    );
  }
  f = message.getWeightsForget();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.apollo.prediction.TensorParameter.serializeBinaryToWriter
    );
  }
  f = message.getWeightsCell();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.apollo.prediction.TensorParameter.serializeBinaryToWriter
    );
  }
  f = message.getWeightsOutput();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.apollo.prediction.TensorParameter.serializeBinaryToWriter
    );
  }
  f = message.getBiasInput();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.apollo.prediction.TensorParameter.serializeBinaryToWriter
    );
  }
  f = message.getBiasForget();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.apollo.prediction.TensorParameter.serializeBinaryToWriter
    );
  }
  f = message.getBiasCell();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.apollo.prediction.TensorParameter.serializeBinaryToWriter
    );
  }
  f = message.getBiasOutput();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.apollo.prediction.TensorParameter.serializeBinaryToWriter
    );
  }
  f = message.getRecurrentWeightsInput();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      proto.apollo.prediction.TensorParameter.serializeBinaryToWriter
    );
  }
  f = message.getRecurrentWeightsForget();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      proto.apollo.prediction.TensorParameter.serializeBinaryToWriter
    );
  }
  f = message.getRecurrentWeightsCell();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      proto.apollo.prediction.TensorParameter.serializeBinaryToWriter
    );
  }
  f = message.getRecurrentWeightsOutput();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      proto.apollo.prediction.TensorParameter.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 units = 1;
 * @return {number}
 */
proto.apollo.prediction.LSTMParameter.prototype.getUnits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.setUnits = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.clearUnits = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.hasUnits = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool return_sequences = 2;
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.getReturnSequences = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.setReturnSequences = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.clearReturnSequences = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.hasReturnSequences = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool stateful = 3;
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.getStateful = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.setStateful = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.clearStateful = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.hasStateful = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string activation = 4;
 * @return {string}
 */
proto.apollo.prediction.LSTMParameter.prototype.getActivation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.setActivation = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.clearActivation = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.hasActivation = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string recurrent_activation = 5;
 * @return {string}
 */
proto.apollo.prediction.LSTMParameter.prototype.getRecurrentActivation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.setRecurrentActivation = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.clearRecurrentActivation = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.hasRecurrentActivation = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool use_bias = 6;
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.getUseBias = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.setUseBias = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.clearUseBias = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.hasUseBias = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool unit_forget_bias = 7;
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.getUnitForgetBias = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, true));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.setUnitForgetBias = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.clearUnitForgetBias = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.hasUnitForgetBias = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool go_backwards = 8;
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.getGoBackwards = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.setGoBackwards = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.clearGoBackwards = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.hasGoBackwards = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool unroll = 9;
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.getUnroll = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.setUnroll = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.clearUnroll = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.hasUnroll = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int32 implementation = 10;
 * @return {number}
 */
proto.apollo.prediction.LSTMParameter.prototype.getImplementation = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.setImplementation = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.clearImplementation = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.hasImplementation = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional TensorParameter weights_input = 15;
 * @return {?proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.LSTMParameter.prototype.getWeightsInput = function() {
  return /** @type{?proto.apollo.prediction.TensorParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.TensorParameter, 15));
};


/**
 * @param {?proto.apollo.prediction.TensorParameter|undefined} value
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
*/
proto.apollo.prediction.LSTMParameter.prototype.setWeightsInput = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.clearWeightsInput = function() {
  return this.setWeightsInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.hasWeightsInput = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional TensorParameter weights_forget = 16;
 * @return {?proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.LSTMParameter.prototype.getWeightsForget = function() {
  return /** @type{?proto.apollo.prediction.TensorParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.TensorParameter, 16));
};


/**
 * @param {?proto.apollo.prediction.TensorParameter|undefined} value
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
*/
proto.apollo.prediction.LSTMParameter.prototype.setWeightsForget = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.clearWeightsForget = function() {
  return this.setWeightsForget(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.hasWeightsForget = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional TensorParameter weights_cell = 17;
 * @return {?proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.LSTMParameter.prototype.getWeightsCell = function() {
  return /** @type{?proto.apollo.prediction.TensorParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.TensorParameter, 17));
};


/**
 * @param {?proto.apollo.prediction.TensorParameter|undefined} value
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
*/
proto.apollo.prediction.LSTMParameter.prototype.setWeightsCell = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.clearWeightsCell = function() {
  return this.setWeightsCell(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.hasWeightsCell = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional TensorParameter weights_output = 18;
 * @return {?proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.LSTMParameter.prototype.getWeightsOutput = function() {
  return /** @type{?proto.apollo.prediction.TensorParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.TensorParameter, 18));
};


/**
 * @param {?proto.apollo.prediction.TensorParameter|undefined} value
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
*/
proto.apollo.prediction.LSTMParameter.prototype.setWeightsOutput = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.clearWeightsOutput = function() {
  return this.setWeightsOutput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.hasWeightsOutput = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional TensorParameter bias_input = 19;
 * @return {?proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.LSTMParameter.prototype.getBiasInput = function() {
  return /** @type{?proto.apollo.prediction.TensorParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.TensorParameter, 19));
};


/**
 * @param {?proto.apollo.prediction.TensorParameter|undefined} value
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
*/
proto.apollo.prediction.LSTMParameter.prototype.setBiasInput = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.clearBiasInput = function() {
  return this.setBiasInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.hasBiasInput = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional TensorParameter bias_forget = 20;
 * @return {?proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.LSTMParameter.prototype.getBiasForget = function() {
  return /** @type{?proto.apollo.prediction.TensorParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.TensorParameter, 20));
};


/**
 * @param {?proto.apollo.prediction.TensorParameter|undefined} value
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
*/
proto.apollo.prediction.LSTMParameter.prototype.setBiasForget = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.clearBiasForget = function() {
  return this.setBiasForget(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.hasBiasForget = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional TensorParameter bias_cell = 21;
 * @return {?proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.LSTMParameter.prototype.getBiasCell = function() {
  return /** @type{?proto.apollo.prediction.TensorParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.TensorParameter, 21));
};


/**
 * @param {?proto.apollo.prediction.TensorParameter|undefined} value
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
*/
proto.apollo.prediction.LSTMParameter.prototype.setBiasCell = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.clearBiasCell = function() {
  return this.setBiasCell(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.hasBiasCell = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional TensorParameter bias_output = 22;
 * @return {?proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.LSTMParameter.prototype.getBiasOutput = function() {
  return /** @type{?proto.apollo.prediction.TensorParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.TensorParameter, 22));
};


/**
 * @param {?proto.apollo.prediction.TensorParameter|undefined} value
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
*/
proto.apollo.prediction.LSTMParameter.prototype.setBiasOutput = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.clearBiasOutput = function() {
  return this.setBiasOutput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.hasBiasOutput = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional TensorParameter recurrent_weights_input = 25;
 * @return {?proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.LSTMParameter.prototype.getRecurrentWeightsInput = function() {
  return /** @type{?proto.apollo.prediction.TensorParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.TensorParameter, 25));
};


/**
 * @param {?proto.apollo.prediction.TensorParameter|undefined} value
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
*/
proto.apollo.prediction.LSTMParameter.prototype.setRecurrentWeightsInput = function(value) {
  return jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.clearRecurrentWeightsInput = function() {
  return this.setRecurrentWeightsInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.hasRecurrentWeightsInput = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional TensorParameter recurrent_weights_forget = 26;
 * @return {?proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.LSTMParameter.prototype.getRecurrentWeightsForget = function() {
  return /** @type{?proto.apollo.prediction.TensorParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.TensorParameter, 26));
};


/**
 * @param {?proto.apollo.prediction.TensorParameter|undefined} value
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
*/
proto.apollo.prediction.LSTMParameter.prototype.setRecurrentWeightsForget = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.clearRecurrentWeightsForget = function() {
  return this.setRecurrentWeightsForget(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.hasRecurrentWeightsForget = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional TensorParameter recurrent_weights_cell = 27;
 * @return {?proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.LSTMParameter.prototype.getRecurrentWeightsCell = function() {
  return /** @type{?proto.apollo.prediction.TensorParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.TensorParameter, 27));
};


/**
 * @param {?proto.apollo.prediction.TensorParameter|undefined} value
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
*/
proto.apollo.prediction.LSTMParameter.prototype.setRecurrentWeightsCell = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.clearRecurrentWeightsCell = function() {
  return this.setRecurrentWeightsCell(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.hasRecurrentWeightsCell = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional TensorParameter recurrent_weights_output = 28;
 * @return {?proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.LSTMParameter.prototype.getRecurrentWeightsOutput = function() {
  return /** @type{?proto.apollo.prediction.TensorParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.TensorParameter, 28));
};


/**
 * @param {?proto.apollo.prediction.TensorParameter|undefined} value
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
*/
proto.apollo.prediction.LSTMParameter.prototype.setRecurrentWeightsOutput = function(value) {
  return jspb.Message.setWrapperField(this, 28, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.LSTMParameter} returns this
 */
proto.apollo.prediction.LSTMParameter.prototype.clearRecurrentWeightsOutput = function() {
  return this.setRecurrentWeightsOutput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LSTMParameter.prototype.hasRecurrentWeightsOutput = function() {
  return jspb.Message.getField(this, 28) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.prediction.ActivationParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.prediction.ActivationParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.prediction.ActivationParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.ActivationParameter.toObject = function(includeInstance, msg) {
  var f, obj = {
    activation: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ActivationParameter as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.prediction.ActivationParameter.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.activation;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.prediction.ActivationParameter.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.prediction.ActivationParameter}
 */
proto.apollo.prediction.ActivationParameter.fromObject = function(obj) {
  var msg = new proto.apollo.prediction.ActivationParameter();
  obj.activation != null && jspb.Message.setField(msg, 1, obj.activation);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.prediction.ActivationParameter}
 */
proto.apollo.prediction.ActivationParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.prediction.ActivationParameter;
  return proto.apollo.prediction.ActivationParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.prediction.ActivationParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.prediction.ActivationParameter}
 */
proto.apollo.prediction.ActivationParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setActivation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.prediction.ActivationParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.prediction.ActivationParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.prediction.ActivationParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.ActivationParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string activation = 1;
 * @return {string}
 */
proto.apollo.prediction.ActivationParameter.prototype.getActivation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.prediction.ActivationParameter} returns this
 */
proto.apollo.prediction.ActivationParameter.prototype.setActivation = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.ActivationParameter} returns this
 */
proto.apollo.prediction.ActivationParameter.prototype.clearActivation = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.ActivationParameter.prototype.hasActivation = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.prediction.FlattenParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.prediction.FlattenParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.prediction.FlattenParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.FlattenParameter.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of FlattenParameter as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.prediction.FlattenParameter.ObjectFormat = function() {
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.prediction.FlattenParameter.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.prediction.FlattenParameter}
 */
proto.apollo.prediction.FlattenParameter.fromObject = function(obj) {
  var msg = new proto.apollo.prediction.FlattenParameter();
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.prediction.FlattenParameter}
 */
proto.apollo.prediction.FlattenParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.prediction.FlattenParameter;
  return proto.apollo.prediction.FlattenParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.prediction.FlattenParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.prediction.FlattenParameter}
 */
proto.apollo.prediction.FlattenParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.prediction.FlattenParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.prediction.FlattenParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.prediction.FlattenParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.FlattenParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.prediction.ConcatenateParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.prediction.ConcatenateParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.prediction.ConcatenateParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.ConcatenateParameter.toObject = function(includeInstance, msg) {
  var f, obj = {
    axis: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ConcatenateParameter as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.prediction.ConcatenateParameter.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.axis;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.prediction.ConcatenateParameter.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.prediction.ConcatenateParameter}
 */
proto.apollo.prediction.ConcatenateParameter.fromObject = function(obj) {
  var msg = new proto.apollo.prediction.ConcatenateParameter();
  obj.axis != null && jspb.Message.setField(msg, 1, obj.axis);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.prediction.ConcatenateParameter}
 */
proto.apollo.prediction.ConcatenateParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.prediction.ConcatenateParameter;
  return proto.apollo.prediction.ConcatenateParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.prediction.ConcatenateParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.prediction.ConcatenateParameter}
 */
proto.apollo.prediction.ConcatenateParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAxis(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.prediction.ConcatenateParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.prediction.ConcatenateParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.prediction.ConcatenateParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.ConcatenateParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 axis = 1;
 * @return {number}
 */
proto.apollo.prediction.ConcatenateParameter.prototype.getAxis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.prediction.ConcatenateParameter} returns this
 */
proto.apollo.prediction.ConcatenateParameter.prototype.setAxis = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.ConcatenateParameter} returns this
 */
proto.apollo.prediction.ConcatenateParameter.prototype.clearAxis = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.ConcatenateParameter.prototype.hasAxis = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.apollo.prediction.LayerParameter.oneofGroups_ = [[4,5,6,7,8,9,10,11,12,13]];

/**
 * @enum {number}
 */
proto.apollo.prediction.LayerParameter.OneofLayersCase = {
  ONEOF_LAYERS_NOT_SET: 0,
  INPUT: 4,
  ACTIVATION: 5,
  DENSE: 6,
  BATCH_NORMALIZATION: 7,
  LSTM: 8,
  FLATTEN: 9,
  CONCATENATE: 10,
  CONV1D: 11,
  MAXPOOL1D: 12,
  AVGPOOL1D: 13
};

/**
 * @return {proto.apollo.prediction.LayerParameter.OneofLayersCase}
 */
proto.apollo.prediction.LayerParameter.prototype.getOneofLayersCase = function() {
  return /** @type {proto.apollo.prediction.LayerParameter.OneofLayersCase} */(jspb.Message.computeOneofCase(this, proto.apollo.prediction.LayerParameter.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.prediction.LayerParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.prediction.LayerParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.prediction.LayerParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.LayerParameter.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    orderNumber: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    input: (f = msg.getInput()) && proto.apollo.prediction.InputParameter.toObject(includeInstance, f),
    activation: (f = msg.getActivation()) && proto.apollo.prediction.ActivationParameter.toObject(includeInstance, f),
    dense: (f = msg.getDense()) && proto.apollo.prediction.DenseParameter.toObject(includeInstance, f),
    batchNormalization: (f = msg.getBatchNormalization()) && proto.apollo.prediction.BatchNormalizationParameter.toObject(includeInstance, f),
    lstm: (f = msg.getLstm()) && proto.apollo.prediction.LSTMParameter.toObject(includeInstance, f),
    flatten: (f = msg.getFlatten()) && proto.apollo.prediction.FlattenParameter.toObject(includeInstance, f),
    concatenate: (f = msg.getConcatenate()) && proto.apollo.prediction.ConcatenateParameter.toObject(includeInstance, f),
    conv1d: (f = msg.getConv1d()) && proto.apollo.prediction.Conv1dParameter.toObject(includeInstance, f),
    maxpool1d: (f = msg.getMaxpool1d()) && proto.apollo.prediction.MaxPool1dParameter.toObject(includeInstance, f),
    avgpool1d: (f = msg.getAvgpool1d()) && proto.apollo.prediction.AvgPool1dParameter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of LayerParameter as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.prediction.LayerParameter.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.type;

  /** @type {?|undefined} */
  this.name;

  /** @type {?|undefined} */
  this.orderNumber;

  /** @type {?|undefined} */
  this.input;

  /** @type {?|undefined} */
  this.activation;

  /** @type {?|undefined} */
  this.dense;

  /** @type {?|undefined} */
  this.batchNormalization;

  /** @type {?|undefined} */
  this.lstm;

  /** @type {?|undefined} */
  this.flatten;

  /** @type {?|undefined} */
  this.concatenate;

  /** @type {?|undefined} */
  this.conv1d;

  /** @type {?|undefined} */
  this.maxpool1d;

  /** @type {?|undefined} */
  this.avgpool1d;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.prediction.LayerParameter.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.prediction.LayerParameter}
 */
proto.apollo.prediction.LayerParameter.fromObject = function(obj) {
  var msg = new proto.apollo.prediction.LayerParameter();
  obj.type != null && jspb.Message.setField(msg, 1, obj.type);
  obj.name != null && jspb.Message.setField(msg, 2, obj.name);
  obj.orderNumber != null && jspb.Message.setField(msg, 3, obj.orderNumber);
  obj.input && jspb.Message.setWrapperField(
      msg, 4, proto.apollo.prediction.InputParameter.fromObject(obj.input));
  obj.activation && jspb.Message.setWrapperField(
      msg, 5, proto.apollo.prediction.ActivationParameter.fromObject(obj.activation));
  obj.dense && jspb.Message.setWrapperField(
      msg, 6, proto.apollo.prediction.DenseParameter.fromObject(obj.dense));
  obj.batchNormalization && jspb.Message.setWrapperField(
      msg, 7, proto.apollo.prediction.BatchNormalizationParameter.fromObject(obj.batchNormalization));
  obj.lstm && jspb.Message.setWrapperField(
      msg, 8, proto.apollo.prediction.LSTMParameter.fromObject(obj.lstm));
  obj.flatten && jspb.Message.setWrapperField(
      msg, 9, proto.apollo.prediction.FlattenParameter.fromObject(obj.flatten));
  obj.concatenate && jspb.Message.setWrapperField(
      msg, 10, proto.apollo.prediction.ConcatenateParameter.fromObject(obj.concatenate));
  obj.conv1d && jspb.Message.setWrapperField(
      msg, 11, proto.apollo.prediction.Conv1dParameter.fromObject(obj.conv1d));
  obj.maxpool1d && jspb.Message.setWrapperField(
      msg, 12, proto.apollo.prediction.MaxPool1dParameter.fromObject(obj.maxpool1d));
  obj.avgpool1d && jspb.Message.setWrapperField(
      msg, 13, proto.apollo.prediction.AvgPool1dParameter.fromObject(obj.avgpool1d));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.prediction.LayerParameter}
 */
proto.apollo.prediction.LayerParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.prediction.LayerParameter;
  return proto.apollo.prediction.LayerParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.prediction.LayerParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.prediction.LayerParameter}
 */
proto.apollo.prediction.LayerParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderNumber(value);
      break;
    case 4:
      var value = new proto.apollo.prediction.InputParameter;
      reader.readMessage(value,proto.apollo.prediction.InputParameter.deserializeBinaryFromReader);
      msg.setInput(value);
      break;
    case 5:
      var value = new proto.apollo.prediction.ActivationParameter;
      reader.readMessage(value,proto.apollo.prediction.ActivationParameter.deserializeBinaryFromReader);
      msg.setActivation(value);
      break;
    case 6:
      var value = new proto.apollo.prediction.DenseParameter;
      reader.readMessage(value,proto.apollo.prediction.DenseParameter.deserializeBinaryFromReader);
      msg.setDense(value);
      break;
    case 7:
      var value = new proto.apollo.prediction.BatchNormalizationParameter;
      reader.readMessage(value,proto.apollo.prediction.BatchNormalizationParameter.deserializeBinaryFromReader);
      msg.setBatchNormalization(value);
      break;
    case 8:
      var value = new proto.apollo.prediction.LSTMParameter;
      reader.readMessage(value,proto.apollo.prediction.LSTMParameter.deserializeBinaryFromReader);
      msg.setLstm(value);
      break;
    case 9:
      var value = new proto.apollo.prediction.FlattenParameter;
      reader.readMessage(value,proto.apollo.prediction.FlattenParameter.deserializeBinaryFromReader);
      msg.setFlatten(value);
      break;
    case 10:
      var value = new proto.apollo.prediction.ConcatenateParameter;
      reader.readMessage(value,proto.apollo.prediction.ConcatenateParameter.deserializeBinaryFromReader);
      msg.setConcatenate(value);
      break;
    case 11:
      var value = new proto.apollo.prediction.Conv1dParameter;
      reader.readMessage(value,proto.apollo.prediction.Conv1dParameter.deserializeBinaryFromReader);
      msg.setConv1d(value);
      break;
    case 12:
      var value = new proto.apollo.prediction.MaxPool1dParameter;
      reader.readMessage(value,proto.apollo.prediction.MaxPool1dParameter.deserializeBinaryFromReader);
      msg.setMaxpool1d(value);
      break;
    case 13:
      var value = new proto.apollo.prediction.AvgPool1dParameter;
      reader.readMessage(value,proto.apollo.prediction.AvgPool1dParameter.deserializeBinaryFromReader);
      msg.setAvgpool1d(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.prediction.LayerParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.prediction.LayerParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.prediction.LayerParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.LayerParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getInput();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.apollo.prediction.InputParameter.serializeBinaryToWriter
    );
  }
  f = message.getActivation();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.apollo.prediction.ActivationParameter.serializeBinaryToWriter
    );
  }
  f = message.getDense();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.apollo.prediction.DenseParameter.serializeBinaryToWriter
    );
  }
  f = message.getBatchNormalization();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.apollo.prediction.BatchNormalizationParameter.serializeBinaryToWriter
    );
  }
  f = message.getLstm();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.apollo.prediction.LSTMParameter.serializeBinaryToWriter
    );
  }
  f = message.getFlatten();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.apollo.prediction.FlattenParameter.serializeBinaryToWriter
    );
  }
  f = message.getConcatenate();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.apollo.prediction.ConcatenateParameter.serializeBinaryToWriter
    );
  }
  f = message.getConv1d();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.apollo.prediction.Conv1dParameter.serializeBinaryToWriter
    );
  }
  f = message.getMaxpool1d();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.apollo.prediction.MaxPool1dParameter.serializeBinaryToWriter
    );
  }
  f = message.getAvgpool1d();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.apollo.prediction.AvgPool1dParameter.serializeBinaryToWriter
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.apollo.prediction.LayerParameter.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.prediction.LayerParameter} returns this
 */
proto.apollo.prediction.LayerParameter.prototype.setType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.LayerParameter} returns this
 */
proto.apollo.prediction.LayerParameter.prototype.clearType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LayerParameter.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.apollo.prediction.LayerParameter.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.prediction.LayerParameter} returns this
 */
proto.apollo.prediction.LayerParameter.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.LayerParameter} returns this
 */
proto.apollo.prediction.LayerParameter.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LayerParameter.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 order_number = 3;
 * @return {number}
 */
proto.apollo.prediction.LayerParameter.prototype.getOrderNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.prediction.LayerParameter} returns this
 */
proto.apollo.prediction.LayerParameter.prototype.setOrderNumber = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.LayerParameter} returns this
 */
proto.apollo.prediction.LayerParameter.prototype.clearOrderNumber = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LayerParameter.prototype.hasOrderNumber = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional InputParameter input = 4;
 * @return {?proto.apollo.prediction.InputParameter}
 */
proto.apollo.prediction.LayerParameter.prototype.getInput = function() {
  return /** @type{?proto.apollo.prediction.InputParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.InputParameter, 4));
};


/**
 * @param {?proto.apollo.prediction.InputParameter|undefined} value
 * @return {!proto.apollo.prediction.LayerParameter} returns this
*/
proto.apollo.prediction.LayerParameter.prototype.setInput = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.apollo.prediction.LayerParameter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.LayerParameter} returns this
 */
proto.apollo.prediction.LayerParameter.prototype.clearInput = function() {
  return this.setInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LayerParameter.prototype.hasInput = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ActivationParameter activation = 5;
 * @return {?proto.apollo.prediction.ActivationParameter}
 */
proto.apollo.prediction.LayerParameter.prototype.getActivation = function() {
  return /** @type{?proto.apollo.prediction.ActivationParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.ActivationParameter, 5));
};


/**
 * @param {?proto.apollo.prediction.ActivationParameter|undefined} value
 * @return {!proto.apollo.prediction.LayerParameter} returns this
*/
proto.apollo.prediction.LayerParameter.prototype.setActivation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.apollo.prediction.LayerParameter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.LayerParameter} returns this
 */
proto.apollo.prediction.LayerParameter.prototype.clearActivation = function() {
  return this.setActivation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LayerParameter.prototype.hasActivation = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DenseParameter dense = 6;
 * @return {?proto.apollo.prediction.DenseParameter}
 */
proto.apollo.prediction.LayerParameter.prototype.getDense = function() {
  return /** @type{?proto.apollo.prediction.DenseParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.DenseParameter, 6));
};


/**
 * @param {?proto.apollo.prediction.DenseParameter|undefined} value
 * @return {!proto.apollo.prediction.LayerParameter} returns this
*/
proto.apollo.prediction.LayerParameter.prototype.setDense = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.apollo.prediction.LayerParameter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.LayerParameter} returns this
 */
proto.apollo.prediction.LayerParameter.prototype.clearDense = function() {
  return this.setDense(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LayerParameter.prototype.hasDense = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional BatchNormalizationParameter batch_normalization = 7;
 * @return {?proto.apollo.prediction.BatchNormalizationParameter}
 */
proto.apollo.prediction.LayerParameter.prototype.getBatchNormalization = function() {
  return /** @type{?proto.apollo.prediction.BatchNormalizationParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.BatchNormalizationParameter, 7));
};


/**
 * @param {?proto.apollo.prediction.BatchNormalizationParameter|undefined} value
 * @return {!proto.apollo.prediction.LayerParameter} returns this
*/
proto.apollo.prediction.LayerParameter.prototype.setBatchNormalization = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.apollo.prediction.LayerParameter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.LayerParameter} returns this
 */
proto.apollo.prediction.LayerParameter.prototype.clearBatchNormalization = function() {
  return this.setBatchNormalization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LayerParameter.prototype.hasBatchNormalization = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional LSTMParameter lstm = 8;
 * @return {?proto.apollo.prediction.LSTMParameter}
 */
proto.apollo.prediction.LayerParameter.prototype.getLstm = function() {
  return /** @type{?proto.apollo.prediction.LSTMParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.LSTMParameter, 8));
};


/**
 * @param {?proto.apollo.prediction.LSTMParameter|undefined} value
 * @return {!proto.apollo.prediction.LayerParameter} returns this
*/
proto.apollo.prediction.LayerParameter.prototype.setLstm = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.apollo.prediction.LayerParameter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.LayerParameter} returns this
 */
proto.apollo.prediction.LayerParameter.prototype.clearLstm = function() {
  return this.setLstm(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LayerParameter.prototype.hasLstm = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional FlattenParameter flatten = 9;
 * @return {?proto.apollo.prediction.FlattenParameter}
 */
proto.apollo.prediction.LayerParameter.prototype.getFlatten = function() {
  return /** @type{?proto.apollo.prediction.FlattenParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.FlattenParameter, 9));
};


/**
 * @param {?proto.apollo.prediction.FlattenParameter|undefined} value
 * @return {!proto.apollo.prediction.LayerParameter} returns this
*/
proto.apollo.prediction.LayerParameter.prototype.setFlatten = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.apollo.prediction.LayerParameter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.LayerParameter} returns this
 */
proto.apollo.prediction.LayerParameter.prototype.clearFlatten = function() {
  return this.setFlatten(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LayerParameter.prototype.hasFlatten = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ConcatenateParameter concatenate = 10;
 * @return {?proto.apollo.prediction.ConcatenateParameter}
 */
proto.apollo.prediction.LayerParameter.prototype.getConcatenate = function() {
  return /** @type{?proto.apollo.prediction.ConcatenateParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.ConcatenateParameter, 10));
};


/**
 * @param {?proto.apollo.prediction.ConcatenateParameter|undefined} value
 * @return {!proto.apollo.prediction.LayerParameter} returns this
*/
proto.apollo.prediction.LayerParameter.prototype.setConcatenate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.apollo.prediction.LayerParameter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.LayerParameter} returns this
 */
proto.apollo.prediction.LayerParameter.prototype.clearConcatenate = function() {
  return this.setConcatenate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LayerParameter.prototype.hasConcatenate = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Conv1dParameter conv1d = 11;
 * @return {?proto.apollo.prediction.Conv1dParameter}
 */
proto.apollo.prediction.LayerParameter.prototype.getConv1d = function() {
  return /** @type{?proto.apollo.prediction.Conv1dParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.Conv1dParameter, 11));
};


/**
 * @param {?proto.apollo.prediction.Conv1dParameter|undefined} value
 * @return {!proto.apollo.prediction.LayerParameter} returns this
*/
proto.apollo.prediction.LayerParameter.prototype.setConv1d = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.apollo.prediction.LayerParameter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.LayerParameter} returns this
 */
proto.apollo.prediction.LayerParameter.prototype.clearConv1d = function() {
  return this.setConv1d(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LayerParameter.prototype.hasConv1d = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional MaxPool1dParameter maxpool1d = 12;
 * @return {?proto.apollo.prediction.MaxPool1dParameter}
 */
proto.apollo.prediction.LayerParameter.prototype.getMaxpool1d = function() {
  return /** @type{?proto.apollo.prediction.MaxPool1dParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.MaxPool1dParameter, 12));
};


/**
 * @param {?proto.apollo.prediction.MaxPool1dParameter|undefined} value
 * @return {!proto.apollo.prediction.LayerParameter} returns this
*/
proto.apollo.prediction.LayerParameter.prototype.setMaxpool1d = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.apollo.prediction.LayerParameter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.LayerParameter} returns this
 */
proto.apollo.prediction.LayerParameter.prototype.clearMaxpool1d = function() {
  return this.setMaxpool1d(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LayerParameter.prototype.hasMaxpool1d = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional AvgPool1dParameter avgpool1d = 13;
 * @return {?proto.apollo.prediction.AvgPool1dParameter}
 */
proto.apollo.prediction.LayerParameter.prototype.getAvgpool1d = function() {
  return /** @type{?proto.apollo.prediction.AvgPool1dParameter} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.AvgPool1dParameter, 13));
};


/**
 * @param {?proto.apollo.prediction.AvgPool1dParameter|undefined} value
 * @return {!proto.apollo.prediction.LayerParameter} returns this
*/
proto.apollo.prediction.LayerParameter.prototype.setAvgpool1d = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.apollo.prediction.LayerParameter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.LayerParameter} returns this
 */
proto.apollo.prediction.LayerParameter.prototype.clearAvgpool1d = function() {
  return this.setAvgpool1d(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.LayerParameter.prototype.hasAvgpool1d = function() {
  return jspb.Message.getField(this, 13) != null;
};


goog.object.extend(exports, proto.apollo.prediction);
