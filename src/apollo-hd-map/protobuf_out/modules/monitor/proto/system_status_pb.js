// source: modules/monitor/proto/system_status.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var modules_common_proto_header_pb = require('../../../modules/common/proto/header_pb.js');
goog.object.extend(proto, modules_common_proto_header_pb);
goog.exportSymbol('proto.apollo.monitor.Component', null, global);
goog.exportSymbol('proto.apollo.monitor.ComponentStatus', null, global);
goog.exportSymbol('proto.apollo.monitor.ComponentStatus.Status', null, global);
goog.exportSymbol('proto.apollo.monitor.SystemStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.monitor.ComponentStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.monitor.ComponentStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.monitor.ComponentStatus.displayName = 'proto.apollo.monitor.ComponentStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.monitor.Component = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.monitor.Component, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.monitor.Component.displayName = 'proto.apollo.monitor.Component';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.monitor.SystemStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.monitor.SystemStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.monitor.SystemStatus.displayName = 'proto.apollo.monitor.SystemStatus';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.monitor.ComponentStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.monitor.ComponentStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.monitor.ComponentStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.monitor.ComponentStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ComponentStatus as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.monitor.ComponentStatus.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.status;

  /** @type {?|undefined} */
  this.message;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.monitor.ComponentStatus.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.monitor.ComponentStatus}
 */
proto.apollo.monitor.ComponentStatus.fromObject = function(obj) {
  var msg = new proto.apollo.monitor.ComponentStatus();
  obj.status != null && jspb.Message.setField(msg, 1, obj.status);
  obj.message != null && jspb.Message.setField(msg, 2, obj.message);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.monitor.ComponentStatus}
 */
proto.apollo.monitor.ComponentStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.monitor.ComponentStatus;
  return proto.apollo.monitor.ComponentStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.monitor.ComponentStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.monitor.ComponentStatus}
 */
proto.apollo.monitor.ComponentStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.monitor.ComponentStatus.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.monitor.ComponentStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.monitor.ComponentStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.monitor.ComponentStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.monitor.ComponentStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.monitor.ComponentStatus.Status} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.monitor.ComponentStatus.Status = {
  UNKNOWN: 0,
  OK: 1,
  WARN: 2,
  ERROR: 3,
  FATAL: 4
};

/**
 * optional Status status = 1;
 * @return {!proto.apollo.monitor.ComponentStatus.Status}
 */
proto.apollo.monitor.ComponentStatus.prototype.getStatus = function() {
  return /** @type {!proto.apollo.monitor.ComponentStatus.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.monitor.ComponentStatus.Status} value
 * @return {!proto.apollo.monitor.ComponentStatus} returns this
 */
proto.apollo.monitor.ComponentStatus.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.monitor.ComponentStatus} returns this
 */
proto.apollo.monitor.ComponentStatus.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.monitor.ComponentStatus.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.apollo.monitor.ComponentStatus.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.monitor.ComponentStatus} returns this
 */
proto.apollo.monitor.ComponentStatus.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.monitor.ComponentStatus} returns this
 */
proto.apollo.monitor.ComponentStatus.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.monitor.ComponentStatus.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.monitor.Component.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.monitor.Component.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.monitor.Component} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.monitor.Component.toObject = function(includeInstance, msg) {
  var f, obj = {
    summary: (f = msg.getSummary()) && proto.apollo.monitor.ComponentStatus.toObject(includeInstance, f),
    processStatus: (f = msg.getProcessStatus()) && proto.apollo.monitor.ComponentStatus.toObject(includeInstance, f),
    channelStatus: (f = msg.getChannelStatus()) && proto.apollo.monitor.ComponentStatus.toObject(includeInstance, f),
    resourceStatus: (f = msg.getResourceStatus()) && proto.apollo.monitor.ComponentStatus.toObject(includeInstance, f),
    otherStatus: (f = msg.getOtherStatus()) && proto.apollo.monitor.ComponentStatus.toObject(includeInstance, f),
    moduleStatus: (f = msg.getModuleStatus()) && proto.apollo.monitor.ComponentStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Component as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.monitor.Component.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.summary;

  /** @type {?|undefined} */
  this.processStatus;

  /** @type {?|undefined} */
  this.channelStatus;

  /** @type {?|undefined} */
  this.resourceStatus;

  /** @type {?|undefined} */
  this.otherStatus;

  /** @type {?|undefined} */
  this.moduleStatus;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.monitor.Component.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.monitor.Component}
 */
proto.apollo.monitor.Component.fromObject = function(obj) {
  var msg = new proto.apollo.monitor.Component();
  obj.summary && jspb.Message.setWrapperField(
      msg, 1, proto.apollo.monitor.ComponentStatus.fromObject(obj.summary));
  obj.processStatus && jspb.Message.setWrapperField(
      msg, 2, proto.apollo.monitor.ComponentStatus.fromObject(obj.processStatus));
  obj.channelStatus && jspb.Message.setWrapperField(
      msg, 3, proto.apollo.monitor.ComponentStatus.fromObject(obj.channelStatus));
  obj.resourceStatus && jspb.Message.setWrapperField(
      msg, 4, proto.apollo.monitor.ComponentStatus.fromObject(obj.resourceStatus));
  obj.otherStatus && jspb.Message.setWrapperField(
      msg, 5, proto.apollo.monitor.ComponentStatus.fromObject(obj.otherStatus));
  obj.moduleStatus && jspb.Message.setWrapperField(
      msg, 6, proto.apollo.monitor.ComponentStatus.fromObject(obj.moduleStatus));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.monitor.Component}
 */
proto.apollo.monitor.Component.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.monitor.Component;
  return proto.apollo.monitor.Component.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.monitor.Component} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.monitor.Component}
 */
proto.apollo.monitor.Component.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.apollo.monitor.ComponentStatus;
      reader.readMessage(value,proto.apollo.monitor.ComponentStatus.deserializeBinaryFromReader);
      msg.setSummary(value);
      break;
    case 2:
      var value = new proto.apollo.monitor.ComponentStatus;
      reader.readMessage(value,proto.apollo.monitor.ComponentStatus.deserializeBinaryFromReader);
      msg.setProcessStatus(value);
      break;
    case 3:
      var value = new proto.apollo.monitor.ComponentStatus;
      reader.readMessage(value,proto.apollo.monitor.ComponentStatus.deserializeBinaryFromReader);
      msg.setChannelStatus(value);
      break;
    case 4:
      var value = new proto.apollo.monitor.ComponentStatus;
      reader.readMessage(value,proto.apollo.monitor.ComponentStatus.deserializeBinaryFromReader);
      msg.setResourceStatus(value);
      break;
    case 5:
      var value = new proto.apollo.monitor.ComponentStatus;
      reader.readMessage(value,proto.apollo.monitor.ComponentStatus.deserializeBinaryFromReader);
      msg.setOtherStatus(value);
      break;
    case 6:
      var value = new proto.apollo.monitor.ComponentStatus;
      reader.readMessage(value,proto.apollo.monitor.ComponentStatus.deserializeBinaryFromReader);
      msg.setModuleStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.monitor.Component.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.monitor.Component.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.monitor.Component} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.monitor.Component.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSummary();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.apollo.monitor.ComponentStatus.serializeBinaryToWriter
    );
  }
  f = message.getProcessStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.apollo.monitor.ComponentStatus.serializeBinaryToWriter
    );
  }
  f = message.getChannelStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.apollo.monitor.ComponentStatus.serializeBinaryToWriter
    );
  }
  f = message.getResourceStatus();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.apollo.monitor.ComponentStatus.serializeBinaryToWriter
    );
  }
  f = message.getOtherStatus();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.apollo.monitor.ComponentStatus.serializeBinaryToWriter
    );
  }
  f = message.getModuleStatus();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.apollo.monitor.ComponentStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional ComponentStatus summary = 1;
 * @return {?proto.apollo.monitor.ComponentStatus}
 */
proto.apollo.monitor.Component.prototype.getSummary = function() {
  return /** @type{?proto.apollo.monitor.ComponentStatus} */ (
    jspb.Message.getWrapperField(this, proto.apollo.monitor.ComponentStatus, 1));
};


/**
 * @param {?proto.apollo.monitor.ComponentStatus|undefined} value
 * @return {!proto.apollo.monitor.Component} returns this
*/
proto.apollo.monitor.Component.prototype.setSummary = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.monitor.Component} returns this
 */
proto.apollo.monitor.Component.prototype.clearSummary = function() {
  return this.setSummary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.monitor.Component.prototype.hasSummary = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ComponentStatus process_status = 2;
 * @return {?proto.apollo.monitor.ComponentStatus}
 */
proto.apollo.monitor.Component.prototype.getProcessStatus = function() {
  return /** @type{?proto.apollo.monitor.ComponentStatus} */ (
    jspb.Message.getWrapperField(this, proto.apollo.monitor.ComponentStatus, 2));
};


/**
 * @param {?proto.apollo.monitor.ComponentStatus|undefined} value
 * @return {!proto.apollo.monitor.Component} returns this
*/
proto.apollo.monitor.Component.prototype.setProcessStatus = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.monitor.Component} returns this
 */
proto.apollo.monitor.Component.prototype.clearProcessStatus = function() {
  return this.setProcessStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.monitor.Component.prototype.hasProcessStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ComponentStatus channel_status = 3;
 * @return {?proto.apollo.monitor.ComponentStatus}
 */
proto.apollo.monitor.Component.prototype.getChannelStatus = function() {
  return /** @type{?proto.apollo.monitor.ComponentStatus} */ (
    jspb.Message.getWrapperField(this, proto.apollo.monitor.ComponentStatus, 3));
};


/**
 * @param {?proto.apollo.monitor.ComponentStatus|undefined} value
 * @return {!proto.apollo.monitor.Component} returns this
*/
proto.apollo.monitor.Component.prototype.setChannelStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.monitor.Component} returns this
 */
proto.apollo.monitor.Component.prototype.clearChannelStatus = function() {
  return this.setChannelStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.monitor.Component.prototype.hasChannelStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ComponentStatus resource_status = 4;
 * @return {?proto.apollo.monitor.ComponentStatus}
 */
proto.apollo.monitor.Component.prototype.getResourceStatus = function() {
  return /** @type{?proto.apollo.monitor.ComponentStatus} */ (
    jspb.Message.getWrapperField(this, proto.apollo.monitor.ComponentStatus, 4));
};


/**
 * @param {?proto.apollo.monitor.ComponentStatus|undefined} value
 * @return {!proto.apollo.monitor.Component} returns this
*/
proto.apollo.monitor.Component.prototype.setResourceStatus = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.monitor.Component} returns this
 */
proto.apollo.monitor.Component.prototype.clearResourceStatus = function() {
  return this.setResourceStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.monitor.Component.prototype.hasResourceStatus = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ComponentStatus other_status = 5;
 * @return {?proto.apollo.monitor.ComponentStatus}
 */
proto.apollo.monitor.Component.prototype.getOtherStatus = function() {
  return /** @type{?proto.apollo.monitor.ComponentStatus} */ (
    jspb.Message.getWrapperField(this, proto.apollo.monitor.ComponentStatus, 5));
};


/**
 * @param {?proto.apollo.monitor.ComponentStatus|undefined} value
 * @return {!proto.apollo.monitor.Component} returns this
*/
proto.apollo.monitor.Component.prototype.setOtherStatus = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.monitor.Component} returns this
 */
proto.apollo.monitor.Component.prototype.clearOtherStatus = function() {
  return this.setOtherStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.monitor.Component.prototype.hasOtherStatus = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ComponentStatus module_status = 6;
 * @return {?proto.apollo.monitor.ComponentStatus}
 */
proto.apollo.monitor.Component.prototype.getModuleStatus = function() {
  return /** @type{?proto.apollo.monitor.ComponentStatus} */ (
    jspb.Message.getWrapperField(this, proto.apollo.monitor.ComponentStatus, 6));
};


/**
 * @param {?proto.apollo.monitor.ComponentStatus|undefined} value
 * @return {!proto.apollo.monitor.Component} returns this
*/
proto.apollo.monitor.Component.prototype.setModuleStatus = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.monitor.Component} returns this
 */
proto.apollo.monitor.Component.prototype.clearModuleStatus = function() {
  return this.setModuleStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.monitor.Component.prototype.hasModuleStatus = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.monitor.SystemStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.monitor.SystemStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.monitor.SystemStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.monitor.SystemStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && modules_common_proto_header_pb.Header.toObject(includeInstance, f),
    hmiModulesMap: (f = msg.getHmiModulesMap()) ? f.toObject(includeInstance, proto.apollo.monitor.ComponentStatus.toObject) : [],
    componentsMap: (f = msg.getComponentsMap()) ? f.toObject(includeInstance, proto.apollo.monitor.Component.toObject) : [],
    passengerMsg: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    safetyModeTriggerTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    requireEmergencyStop: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    isRealtimeInSimulation: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f,
    otherComponentsMap: (f = msg.getOtherComponentsMap()) ? f.toObject(includeInstance, proto.apollo.monitor.ComponentStatus.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of SystemStatus as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.monitor.SystemStatus.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.header;

  /** @type {?|undefined} */
  this.hmiModulesMap;

  /** @type {?|undefined} */
  this.componentsMap;

  /** @type {?|undefined} */
  this.passengerMsg;

  /** @type {?|undefined} */
  this.safetyModeTriggerTime;

  /** @type {?|undefined} */
  this.requireEmergencyStop;

  /** @type {?|undefined} */
  this.isRealtimeInSimulation;

  /** @type {?|undefined} */
  this.otherComponentsMap;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.monitor.SystemStatus.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.monitor.SystemStatus}
 */
proto.apollo.monitor.SystemStatus.fromObject = function(obj) {
  var msg = new proto.apollo.monitor.SystemStatus();
  obj.header && jspb.Message.setWrapperField(
      msg, 1, modules_common_proto_header_pb.Header.fromObject(obj.header));
  obj.hmiModulesMap && jspb.Message.setWrapperField(
      msg, 7, jspb.Map.fromObject(obj.hmiModulesMap, proto.apollo.monitor.ComponentStatus, proto.apollo.monitor.ComponentStatus.fromObject));
  obj.componentsMap && jspb.Message.setWrapperField(
      msg, 8, jspb.Map.fromObject(obj.componentsMap, proto.apollo.monitor.Component, proto.apollo.monitor.Component.fromObject));
  obj.passengerMsg != null && jspb.Message.setField(msg, 4, obj.passengerMsg);
  obj.safetyModeTriggerTime != null && jspb.Message.setField(msg, 5, obj.safetyModeTriggerTime);
  obj.requireEmergencyStop != null && jspb.Message.setField(msg, 6, obj.requireEmergencyStop);
  obj.isRealtimeInSimulation != null && jspb.Message.setField(msg, 9, obj.isRealtimeInSimulation);
  obj.otherComponentsMap && jspb.Message.setWrapperField(
      msg, 10, jspb.Map.fromObject(obj.otherComponentsMap, proto.apollo.monitor.ComponentStatus, proto.apollo.monitor.ComponentStatus.fromObject));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.monitor.SystemStatus}
 */
proto.apollo.monitor.SystemStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.monitor.SystemStatus;
  return proto.apollo.monitor.SystemStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.monitor.SystemStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.monitor.SystemStatus}
 */
proto.apollo.monitor.SystemStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modules_common_proto_header_pb.Header;
      reader.readMessage(value,modules_common_proto_header_pb.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 7:
      var value = msg.getHmiModulesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.apollo.monitor.ComponentStatus.deserializeBinaryFromReader, "", new proto.apollo.monitor.ComponentStatus());
         });
      break;
    case 8:
      var value = msg.getComponentsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.apollo.monitor.Component.deserializeBinaryFromReader, "", new proto.apollo.monitor.Component());
         });
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassengerMsg(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSafetyModeTriggerTime(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRequireEmergencyStop(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRealtimeInSimulation(value);
      break;
    case 10:
      var value = msg.getOtherComponentsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.apollo.monitor.ComponentStatus.deserializeBinaryFromReader, "", new proto.apollo.monitor.ComponentStatus());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.monitor.SystemStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.monitor.SystemStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.monitor.SystemStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.monitor.SystemStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modules_common_proto_header_pb.Header.serializeBinaryToWriter
    );
  }
  f = message.getHmiModulesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.apollo.monitor.ComponentStatus.serializeBinaryToWriter);
  }
  f = message.getComponentsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.apollo.monitor.Component.serializeBinaryToWriter);
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getOtherComponentsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(10, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.apollo.monitor.ComponentStatus.serializeBinaryToWriter);
  }
};


/**
 * optional apollo.common.Header header = 1;
 * @return {?proto.apollo.common.Header}
 */
proto.apollo.monitor.SystemStatus.prototype.getHeader = function() {
  return /** @type{?proto.apollo.common.Header} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_header_pb.Header, 1));
};


/**
 * @param {?proto.apollo.common.Header|undefined} value
 * @return {!proto.apollo.monitor.SystemStatus} returns this
*/
proto.apollo.monitor.SystemStatus.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.monitor.SystemStatus} returns this
 */
proto.apollo.monitor.SystemStatus.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.monitor.SystemStatus.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<string, ComponentStatus> hmi_modules = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.apollo.monitor.ComponentStatus>}
 */
proto.apollo.monitor.SystemStatus.prototype.getHmiModulesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.apollo.monitor.ComponentStatus>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      proto.apollo.monitor.ComponentStatus));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.apollo.monitor.SystemStatus} returns this
 */
proto.apollo.monitor.SystemStatus.prototype.clearHmiModulesMap = function() {
  this.getHmiModulesMap().clear();
  return this;};


/**
 * map<string, Component> components = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.apollo.monitor.Component>}
 */
proto.apollo.monitor.SystemStatus.prototype.getComponentsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.apollo.monitor.Component>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      proto.apollo.monitor.Component));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.apollo.monitor.SystemStatus} returns this
 */
proto.apollo.monitor.SystemStatus.prototype.clearComponentsMap = function() {
  this.getComponentsMap().clear();
  return this;};


/**
 * optional string passenger_msg = 4;
 * @return {string}
 */
proto.apollo.monitor.SystemStatus.prototype.getPassengerMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.monitor.SystemStatus} returns this
 */
proto.apollo.monitor.SystemStatus.prototype.setPassengerMsg = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.monitor.SystemStatus} returns this
 */
proto.apollo.monitor.SystemStatus.prototype.clearPassengerMsg = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.monitor.SystemStatus.prototype.hasPassengerMsg = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double safety_mode_trigger_time = 5;
 * @return {number}
 */
proto.apollo.monitor.SystemStatus.prototype.getSafetyModeTriggerTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.monitor.SystemStatus} returns this
 */
proto.apollo.monitor.SystemStatus.prototype.setSafetyModeTriggerTime = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.monitor.SystemStatus} returns this
 */
proto.apollo.monitor.SystemStatus.prototype.clearSafetyModeTriggerTime = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.monitor.SystemStatus.prototype.hasSafetyModeTriggerTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool require_emergency_stop = 6;
 * @return {boolean}
 */
proto.apollo.monitor.SystemStatus.prototype.getRequireEmergencyStop = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.monitor.SystemStatus} returns this
 */
proto.apollo.monitor.SystemStatus.prototype.setRequireEmergencyStop = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.monitor.SystemStatus} returns this
 */
proto.apollo.monitor.SystemStatus.prototype.clearRequireEmergencyStop = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.monitor.SystemStatus.prototype.hasRequireEmergencyStop = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool is_realtime_in_simulation = 9;
 * @return {boolean}
 */
proto.apollo.monitor.SystemStatus.prototype.getIsRealtimeInSimulation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.monitor.SystemStatus} returns this
 */
proto.apollo.monitor.SystemStatus.prototype.setIsRealtimeInSimulation = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.monitor.SystemStatus} returns this
 */
proto.apollo.monitor.SystemStatus.prototype.clearIsRealtimeInSimulation = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.monitor.SystemStatus.prototype.hasIsRealtimeInSimulation = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * map<string, ComponentStatus> other_components = 10;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.apollo.monitor.ComponentStatus>}
 */
proto.apollo.monitor.SystemStatus.prototype.getOtherComponentsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.apollo.monitor.ComponentStatus>} */ (
      jspb.Message.getMapField(this, 10, opt_noLazyCreate,
      proto.apollo.monitor.ComponentStatus));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.apollo.monitor.SystemStatus} returns this
 */
proto.apollo.monitor.SystemStatus.prototype.clearOtherComponentsMap = function() {
  this.getOtherComponentsMap().clear();
  return this;};


goog.object.extend(exports, proto.apollo.monitor);
