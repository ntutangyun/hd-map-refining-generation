// source: modules/drivers/proto/mobileye.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var modules_common_proto_header_pb = require('../../../modules/common/proto/header_pb.js');
goog.object.extend(proto, modules_common_proto_header_pb);
goog.exportSymbol('proto.apollo.drivers.Aftermarket_669', null, global);
goog.exportSymbol('proto.apollo.drivers.Details_737', null, global);
goog.exportSymbol('proto.apollo.drivers.Details_738', null, global);
goog.exportSymbol('proto.apollo.drivers.Details_739', null, global);
goog.exportSymbol('proto.apollo.drivers.Details_73a', null, global);
goog.exportSymbol('proto.apollo.drivers.Details_73b', null, global);
goog.exportSymbol('proto.apollo.drivers.Lka_766', null, global);
goog.exportSymbol('proto.apollo.drivers.Lka_767', null, global);
goog.exportSymbol('proto.apollo.drivers.Lka_768', null, global);
goog.exportSymbol('proto.apollo.drivers.Lka_769', null, global);
goog.exportSymbol('proto.apollo.drivers.Mobileye', null, global);
goog.exportSymbol('proto.apollo.drivers.Next_76c', null, global);
goog.exportSymbol('proto.apollo.drivers.Next_76d', null, global);
goog.exportSymbol('proto.apollo.drivers.Num_76b', null, global);
goog.exportSymbol('proto.apollo.drivers.Reference_76a', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.Lka_768 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.Lka_768, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.Lka_768.displayName = 'proto.apollo.drivers.Lka_768';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.Num_76b = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.Num_76b, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.Num_76b.displayName = 'proto.apollo.drivers.Num_76b';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.Aftermarket_669 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.Aftermarket_669, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.Aftermarket_669.displayName = 'proto.apollo.drivers.Aftermarket_669';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.Lka_769 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.Lka_769, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.Lka_769.displayName = 'proto.apollo.drivers.Lka_769';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.Reference_76a = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.Reference_76a, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.Reference_76a.displayName = 'proto.apollo.drivers.Reference_76a';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.Details_738 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.Details_738, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.Details_738.displayName = 'proto.apollo.drivers.Details_738';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.Next_76c = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.Next_76c, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.Next_76c.displayName = 'proto.apollo.drivers.Next_76c';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.Details_737 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.Details_737, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.Details_737.displayName = 'proto.apollo.drivers.Details_737';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.Lka_767 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.Lka_767, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.Lka_767.displayName = 'proto.apollo.drivers.Lka_767';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.Lka_766 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.Lka_766, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.Lka_766.displayName = 'proto.apollo.drivers.Lka_766';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.Next_76d = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.Next_76d, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.Next_76d.displayName = 'proto.apollo.drivers.Next_76d';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.Details_739 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.Details_739, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.Details_739.displayName = 'proto.apollo.drivers.Details_739';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.Details_73a = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.Details_73a, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.Details_73a.displayName = 'proto.apollo.drivers.Details_73a';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.Details_73b = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.Details_73b, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.Details_73b.displayName = 'proto.apollo.drivers.Details_73b';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.Mobileye = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.drivers.Mobileye.repeatedFields_, null);
};
goog.inherits(proto.apollo.drivers.Mobileye, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.Mobileye.displayName = 'proto.apollo.drivers.Mobileye';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.Lka_768.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.Lka_768.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.Lka_768} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Lka_768.toObject = function(includeInstance, msg) {
  var f, obj = {
    laneType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    quality: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    modelDegree: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    position: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    curvature: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    curvatureDerivative: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    widthRightMarking: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Lka_768 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.Lka_768.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.laneType;

  /** @type {?|undefined} */
  this.quality;

  /** @type {?|undefined} */
  this.modelDegree;

  /** @type {?|undefined} */
  this.position;

  /** @type {?|undefined} */
  this.curvature;

  /** @type {?|undefined} */
  this.curvatureDerivative;

  /** @type {?|undefined} */
  this.widthRightMarking;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.Lka_768.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.Lka_768}
 */
proto.apollo.drivers.Lka_768.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.Lka_768();
  obj.laneType != null && jspb.Message.setField(msg, 1, obj.laneType);
  obj.quality != null && jspb.Message.setField(msg, 2, obj.quality);
  obj.modelDegree != null && jspb.Message.setField(msg, 3, obj.modelDegree);
  obj.position != null && jspb.Message.setField(msg, 4, obj.position);
  obj.curvature != null && jspb.Message.setField(msg, 5, obj.curvature);
  obj.curvatureDerivative != null && jspb.Message.setField(msg, 6, obj.curvatureDerivative);
  obj.widthRightMarking != null && jspb.Message.setField(msg, 7, obj.widthRightMarking);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.Lka_768}
 */
proto.apollo.drivers.Lka_768.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.Lka_768;
  return proto.apollo.drivers.Lka_768.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.Lka_768} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.Lka_768}
 */
proto.apollo.drivers.Lka_768.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLaneType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuality(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setModelDegree(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPosition(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurvature(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurvatureDerivative(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWidthRightMarking(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.Lka_768.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.Lka_768.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.Lka_768} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Lka_768.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
};


/**
 * optional int32 lane_type = 1;
 * @return {number}
 */
proto.apollo.drivers.Lka_768.prototype.getLaneType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Lka_768} returns this
 */
proto.apollo.drivers.Lka_768.prototype.setLaneType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Lka_768} returns this
 */
proto.apollo.drivers.Lka_768.prototype.clearLaneType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Lka_768.prototype.hasLaneType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 quality = 2;
 * @return {number}
 */
proto.apollo.drivers.Lka_768.prototype.getQuality = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Lka_768} returns this
 */
proto.apollo.drivers.Lka_768.prototype.setQuality = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Lka_768} returns this
 */
proto.apollo.drivers.Lka_768.prototype.clearQuality = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Lka_768.prototype.hasQuality = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 model_degree = 3;
 * @return {number}
 */
proto.apollo.drivers.Lka_768.prototype.getModelDegree = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Lka_768} returns this
 */
proto.apollo.drivers.Lka_768.prototype.setModelDegree = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Lka_768} returns this
 */
proto.apollo.drivers.Lka_768.prototype.clearModelDegree = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Lka_768.prototype.hasModelDegree = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double position = 4;
 * @return {number}
 */
proto.apollo.drivers.Lka_768.prototype.getPosition = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Lka_768} returns this
 */
proto.apollo.drivers.Lka_768.prototype.setPosition = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Lka_768} returns this
 */
proto.apollo.drivers.Lka_768.prototype.clearPosition = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Lka_768.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double curvature = 5;
 * @return {number}
 */
proto.apollo.drivers.Lka_768.prototype.getCurvature = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Lka_768} returns this
 */
proto.apollo.drivers.Lka_768.prototype.setCurvature = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Lka_768} returns this
 */
proto.apollo.drivers.Lka_768.prototype.clearCurvature = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Lka_768.prototype.hasCurvature = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double curvature_derivative = 6;
 * @return {number}
 */
proto.apollo.drivers.Lka_768.prototype.getCurvatureDerivative = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Lka_768} returns this
 */
proto.apollo.drivers.Lka_768.prototype.setCurvatureDerivative = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Lka_768} returns this
 */
proto.apollo.drivers.Lka_768.prototype.clearCurvatureDerivative = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Lka_768.prototype.hasCurvatureDerivative = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double width_right_marking = 7;
 * @return {number}
 */
proto.apollo.drivers.Lka_768.prototype.getWidthRightMarking = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Lka_768} returns this
 */
proto.apollo.drivers.Lka_768.prototype.setWidthRightMarking = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Lka_768} returns this
 */
proto.apollo.drivers.Lka_768.prototype.clearWidthRightMarking = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Lka_768.prototype.hasWidthRightMarking = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.Num_76b.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.Num_76b.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.Num_76b} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Num_76b.toObject = function(includeInstance, msg) {
  var f, obj = {
    numOfNextLaneMarkReported: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Num_76b as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.Num_76b.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.numOfNextLaneMarkReported;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.Num_76b.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.Num_76b}
 */
proto.apollo.drivers.Num_76b.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.Num_76b();
  obj.numOfNextLaneMarkReported != null && jspb.Message.setField(msg, 1, obj.numOfNextLaneMarkReported);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.Num_76b}
 */
proto.apollo.drivers.Num_76b.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.Num_76b;
  return proto.apollo.drivers.Num_76b.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.Num_76b} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.Num_76b}
 */
proto.apollo.drivers.Num_76b.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumOfNextLaneMarkReported(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.Num_76b.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.Num_76b.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.Num_76b} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Num_76b.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 num_of_next_lane_mark_reported = 1;
 * @return {number}
 */
proto.apollo.drivers.Num_76b.prototype.getNumOfNextLaneMarkReported = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Num_76b} returns this
 */
proto.apollo.drivers.Num_76b.prototype.setNumOfNextLaneMarkReported = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Num_76b} returns this
 */
proto.apollo.drivers.Num_76b.prototype.clearNumOfNextLaneMarkReported = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Num_76b.prototype.hasNumOfNextLaneMarkReported = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.Aftermarket_669.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.Aftermarket_669.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.Aftermarket_669} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Aftermarket_669.toObject = function(includeInstance, msg) {
  var f, obj = {
    laneConfLeft: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    ldwAvailabilityLeft: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    laneTypeLeft: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    distanceToLaneL: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    laneConfRight: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    ldwAvailabilityRight: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    laneTypeRight: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    distanceToLaneR: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Aftermarket_669 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.Aftermarket_669.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.laneConfLeft;

  /** @type {?|undefined} */
  this.ldwAvailabilityLeft;

  /** @type {?|undefined} */
  this.laneTypeLeft;

  /** @type {?|undefined} */
  this.distanceToLaneL;

  /** @type {?|undefined} */
  this.laneConfRight;

  /** @type {?|undefined} */
  this.ldwAvailabilityRight;

  /** @type {?|undefined} */
  this.laneTypeRight;

  /** @type {?|undefined} */
  this.distanceToLaneR;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.Aftermarket_669.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.Aftermarket_669}
 */
proto.apollo.drivers.Aftermarket_669.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.Aftermarket_669();
  obj.laneConfLeft != null && jspb.Message.setField(msg, 1, obj.laneConfLeft);
  obj.ldwAvailabilityLeft != null && jspb.Message.setField(msg, 2, obj.ldwAvailabilityLeft);
  obj.laneTypeLeft != null && jspb.Message.setField(msg, 3, obj.laneTypeLeft);
  obj.distanceToLaneL != null && jspb.Message.setField(msg, 4, obj.distanceToLaneL);
  obj.laneConfRight != null && jspb.Message.setField(msg, 5, obj.laneConfRight);
  obj.ldwAvailabilityRight != null && jspb.Message.setField(msg, 6, obj.ldwAvailabilityRight);
  obj.laneTypeRight != null && jspb.Message.setField(msg, 7, obj.laneTypeRight);
  obj.distanceToLaneR != null && jspb.Message.setField(msg, 8, obj.distanceToLaneR);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.Aftermarket_669}
 */
proto.apollo.drivers.Aftermarket_669.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.Aftermarket_669;
  return proto.apollo.drivers.Aftermarket_669.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.Aftermarket_669} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.Aftermarket_669}
 */
proto.apollo.drivers.Aftermarket_669.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLaneConfLeft(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLdwAvailabilityLeft(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLaneTypeLeft(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDistanceToLaneL(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLaneConfRight(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLdwAvailabilityRight(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLaneTypeRight(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDistanceToLaneR(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.Aftermarket_669.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.Aftermarket_669.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.Aftermarket_669} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Aftermarket_669.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
};


/**
 * optional int32 lane_conf_left = 1;
 * @return {number}
 */
proto.apollo.drivers.Aftermarket_669.prototype.getLaneConfLeft = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Aftermarket_669} returns this
 */
proto.apollo.drivers.Aftermarket_669.prototype.setLaneConfLeft = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Aftermarket_669} returns this
 */
proto.apollo.drivers.Aftermarket_669.prototype.clearLaneConfLeft = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Aftermarket_669.prototype.hasLaneConfLeft = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool ldw_availability_left = 2;
 * @return {boolean}
 */
proto.apollo.drivers.Aftermarket_669.prototype.getLdwAvailabilityLeft = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.Aftermarket_669} returns this
 */
proto.apollo.drivers.Aftermarket_669.prototype.setLdwAvailabilityLeft = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Aftermarket_669} returns this
 */
proto.apollo.drivers.Aftermarket_669.prototype.clearLdwAvailabilityLeft = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Aftermarket_669.prototype.hasLdwAvailabilityLeft = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 lane_type_left = 3;
 * @return {number}
 */
proto.apollo.drivers.Aftermarket_669.prototype.getLaneTypeLeft = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Aftermarket_669} returns this
 */
proto.apollo.drivers.Aftermarket_669.prototype.setLaneTypeLeft = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Aftermarket_669} returns this
 */
proto.apollo.drivers.Aftermarket_669.prototype.clearLaneTypeLeft = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Aftermarket_669.prototype.hasLaneTypeLeft = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double distance_to_lane_l = 4;
 * @return {number}
 */
proto.apollo.drivers.Aftermarket_669.prototype.getDistanceToLaneL = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Aftermarket_669} returns this
 */
proto.apollo.drivers.Aftermarket_669.prototype.setDistanceToLaneL = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Aftermarket_669} returns this
 */
proto.apollo.drivers.Aftermarket_669.prototype.clearDistanceToLaneL = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Aftermarket_669.prototype.hasDistanceToLaneL = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 lane_conf_right = 5;
 * @return {number}
 */
proto.apollo.drivers.Aftermarket_669.prototype.getLaneConfRight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Aftermarket_669} returns this
 */
proto.apollo.drivers.Aftermarket_669.prototype.setLaneConfRight = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Aftermarket_669} returns this
 */
proto.apollo.drivers.Aftermarket_669.prototype.clearLaneConfRight = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Aftermarket_669.prototype.hasLaneConfRight = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool ldw_availability_right = 6;
 * @return {boolean}
 */
proto.apollo.drivers.Aftermarket_669.prototype.getLdwAvailabilityRight = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.Aftermarket_669} returns this
 */
proto.apollo.drivers.Aftermarket_669.prototype.setLdwAvailabilityRight = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Aftermarket_669} returns this
 */
proto.apollo.drivers.Aftermarket_669.prototype.clearLdwAvailabilityRight = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Aftermarket_669.prototype.hasLdwAvailabilityRight = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 lane_type_right = 7;
 * @return {number}
 */
proto.apollo.drivers.Aftermarket_669.prototype.getLaneTypeRight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Aftermarket_669} returns this
 */
proto.apollo.drivers.Aftermarket_669.prototype.setLaneTypeRight = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Aftermarket_669} returns this
 */
proto.apollo.drivers.Aftermarket_669.prototype.clearLaneTypeRight = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Aftermarket_669.prototype.hasLaneTypeRight = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double distance_to_lane_r = 8;
 * @return {number}
 */
proto.apollo.drivers.Aftermarket_669.prototype.getDistanceToLaneR = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Aftermarket_669} returns this
 */
proto.apollo.drivers.Aftermarket_669.prototype.setDistanceToLaneR = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Aftermarket_669} returns this
 */
proto.apollo.drivers.Aftermarket_669.prototype.clearDistanceToLaneR = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Aftermarket_669.prototype.hasDistanceToLaneR = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.Lka_769.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.Lka_769.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.Lka_769} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Lka_769.toObject = function(includeInstance, msg) {
  var f, obj = {
    headingAngle: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    viewRange: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    viewRangeAvailability: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Lka_769 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.Lka_769.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.headingAngle;

  /** @type {?|undefined} */
  this.viewRange;

  /** @type {?|undefined} */
  this.viewRangeAvailability;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.Lka_769.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.Lka_769}
 */
proto.apollo.drivers.Lka_769.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.Lka_769();
  obj.headingAngle != null && jspb.Message.setField(msg, 1, obj.headingAngle);
  obj.viewRange != null && jspb.Message.setField(msg, 2, obj.viewRange);
  obj.viewRangeAvailability != null && jspb.Message.setField(msg, 3, obj.viewRangeAvailability);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.Lka_769}
 */
proto.apollo.drivers.Lka_769.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.Lka_769;
  return proto.apollo.drivers.Lka_769.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.Lka_769} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.Lka_769}
 */
proto.apollo.drivers.Lka_769.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHeadingAngle(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setViewRange(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setViewRangeAvailability(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.Lka_769.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.Lka_769.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.Lka_769} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Lka_769.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional double heading_angle = 1;
 * @return {number}
 */
proto.apollo.drivers.Lka_769.prototype.getHeadingAngle = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Lka_769} returns this
 */
proto.apollo.drivers.Lka_769.prototype.setHeadingAngle = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Lka_769} returns this
 */
proto.apollo.drivers.Lka_769.prototype.clearHeadingAngle = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Lka_769.prototype.hasHeadingAngle = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double view_range = 2;
 * @return {number}
 */
proto.apollo.drivers.Lka_769.prototype.getViewRange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Lka_769} returns this
 */
proto.apollo.drivers.Lka_769.prototype.setViewRange = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Lka_769} returns this
 */
proto.apollo.drivers.Lka_769.prototype.clearViewRange = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Lka_769.prototype.hasViewRange = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool view_range_availability = 3;
 * @return {boolean}
 */
proto.apollo.drivers.Lka_769.prototype.getViewRangeAvailability = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.Lka_769} returns this
 */
proto.apollo.drivers.Lka_769.prototype.setViewRangeAvailability = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Lka_769} returns this
 */
proto.apollo.drivers.Lka_769.prototype.clearViewRangeAvailability = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Lka_769.prototype.hasViewRangeAvailability = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.Reference_76a.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.Reference_76a.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.Reference_76a} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Reference_76a.toObject = function(includeInstance, msg) {
  var f, obj = {
    refPoint1Position: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    refPoint1Distance: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    refPoint1Validity: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    refPoint2Position: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    refPoint2Distance: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    refPoint2Validity: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Reference_76a as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.Reference_76a.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.refPoint1Position;

  /** @type {?|undefined} */
  this.refPoint1Distance;

  /** @type {?|undefined} */
  this.refPoint1Validity;

  /** @type {?|undefined} */
  this.refPoint2Position;

  /** @type {?|undefined} */
  this.refPoint2Distance;

  /** @type {?|undefined} */
  this.refPoint2Validity;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.Reference_76a.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.Reference_76a}
 */
proto.apollo.drivers.Reference_76a.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.Reference_76a();
  obj.refPoint1Position != null && jspb.Message.setField(msg, 1, obj.refPoint1Position);
  obj.refPoint1Distance != null && jspb.Message.setField(msg, 2, obj.refPoint1Distance);
  obj.refPoint1Validity != null && jspb.Message.setField(msg, 3, obj.refPoint1Validity);
  obj.refPoint2Position != null && jspb.Message.setField(msg, 4, obj.refPoint2Position);
  obj.refPoint2Distance != null && jspb.Message.setField(msg, 5, obj.refPoint2Distance);
  obj.refPoint2Validity != null && jspb.Message.setField(msg, 6, obj.refPoint2Validity);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.Reference_76a}
 */
proto.apollo.drivers.Reference_76a.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.Reference_76a;
  return proto.apollo.drivers.Reference_76a.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.Reference_76a} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.Reference_76a}
 */
proto.apollo.drivers.Reference_76a.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRefPoint1Position(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRefPoint1Distance(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRefPoint1Validity(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRefPoint2Position(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRefPoint2Distance(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRefPoint2Validity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.Reference_76a.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.Reference_76a.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.Reference_76a} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Reference_76a.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional double ref_point_1_position = 1;
 * @return {number}
 */
proto.apollo.drivers.Reference_76a.prototype.getRefPoint1Position = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Reference_76a} returns this
 */
proto.apollo.drivers.Reference_76a.prototype.setRefPoint1Position = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Reference_76a} returns this
 */
proto.apollo.drivers.Reference_76a.prototype.clearRefPoint1Position = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Reference_76a.prototype.hasRefPoint1Position = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double ref_point_1_distance = 2;
 * @return {number}
 */
proto.apollo.drivers.Reference_76a.prototype.getRefPoint1Distance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Reference_76a} returns this
 */
proto.apollo.drivers.Reference_76a.prototype.setRefPoint1Distance = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Reference_76a} returns this
 */
proto.apollo.drivers.Reference_76a.prototype.clearRefPoint1Distance = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Reference_76a.prototype.hasRefPoint1Distance = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool ref_point_1_validity = 3;
 * @return {boolean}
 */
proto.apollo.drivers.Reference_76a.prototype.getRefPoint1Validity = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.Reference_76a} returns this
 */
proto.apollo.drivers.Reference_76a.prototype.setRefPoint1Validity = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Reference_76a} returns this
 */
proto.apollo.drivers.Reference_76a.prototype.clearRefPoint1Validity = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Reference_76a.prototype.hasRefPoint1Validity = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double ref_point_2_position = 4;
 * @return {number}
 */
proto.apollo.drivers.Reference_76a.prototype.getRefPoint2Position = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Reference_76a} returns this
 */
proto.apollo.drivers.Reference_76a.prototype.setRefPoint2Position = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Reference_76a} returns this
 */
proto.apollo.drivers.Reference_76a.prototype.clearRefPoint2Position = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Reference_76a.prototype.hasRefPoint2Position = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double ref_point_2_distance = 5;
 * @return {number}
 */
proto.apollo.drivers.Reference_76a.prototype.getRefPoint2Distance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Reference_76a} returns this
 */
proto.apollo.drivers.Reference_76a.prototype.setRefPoint2Distance = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Reference_76a} returns this
 */
proto.apollo.drivers.Reference_76a.prototype.clearRefPoint2Distance = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Reference_76a.prototype.hasRefPoint2Distance = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool ref_point_2_validity = 6;
 * @return {boolean}
 */
proto.apollo.drivers.Reference_76a.prototype.getRefPoint2Validity = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.Reference_76a} returns this
 */
proto.apollo.drivers.Reference_76a.prototype.setRefPoint2Validity = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Reference_76a} returns this
 */
proto.apollo.drivers.Reference_76a.prototype.clearRefPoint2Validity = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Reference_76a.prototype.hasRefPoint2Validity = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.Details_738.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.Details_738.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.Details_738} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Details_738.toObject = function(includeInstance, msg) {
  var f, obj = {
    numObstacles: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    timestamp: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    applicationVersion: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    activeVersionNumberSection: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    leftCloseRangCutIn: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    rightCloseRangCutIn: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    go: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    protocolVersion: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    closeCar: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f,
    failsafe: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    reserved10: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Details_738 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.Details_738.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.numObstacles;

  /** @type {?|undefined} */
  this.timestamp;

  /** @type {?|undefined} */
  this.applicationVersion;

  /** @type {?|undefined} */
  this.activeVersionNumberSection;

  /** @type {?|undefined} */
  this.leftCloseRangCutIn;

  /** @type {?|undefined} */
  this.rightCloseRangCutIn;

  /** @type {?|undefined} */
  this.go;

  /** @type {?|undefined} */
  this.protocolVersion;

  /** @type {?|undefined} */
  this.closeCar;

  /** @type {?|undefined} */
  this.failsafe;

  /** @type {?|undefined} */
  this.reserved10;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.Details_738.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.Details_738}
 */
proto.apollo.drivers.Details_738.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.Details_738();
  obj.numObstacles != null && jspb.Message.setField(msg, 1, obj.numObstacles);
  obj.timestamp != null && jspb.Message.setField(msg, 2, obj.timestamp);
  obj.applicationVersion != null && jspb.Message.setField(msg, 3, obj.applicationVersion);
  obj.activeVersionNumberSection != null && jspb.Message.setField(msg, 4, obj.activeVersionNumberSection);
  obj.leftCloseRangCutIn != null && jspb.Message.setField(msg, 5, obj.leftCloseRangCutIn);
  obj.rightCloseRangCutIn != null && jspb.Message.setField(msg, 6, obj.rightCloseRangCutIn);
  obj.go != null && jspb.Message.setField(msg, 7, obj.go);
  obj.protocolVersion != null && jspb.Message.setField(msg, 8, obj.protocolVersion);
  obj.closeCar != null && jspb.Message.setField(msg, 9, obj.closeCar);
  obj.failsafe != null && jspb.Message.setField(msg, 10, obj.failsafe);
  obj.reserved10 != null && jspb.Message.setField(msg, 11, obj.reserved10);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.Details_738}
 */
proto.apollo.drivers.Details_738.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.Details_738;
  return proto.apollo.drivers.Details_738.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.Details_738} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.Details_738}
 */
proto.apollo.drivers.Details_738.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumObstacles(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setApplicationVersion(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActiveVersionNumberSection(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLeftCloseRangCutIn(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRightCloseRangCutIn(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGo(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProtocolVersion(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCloseCar(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFailsafe(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReserved10(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.Details_738.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.Details_738.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.Details_738} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Details_738.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
};


/**
 * optional int32 num_obstacles = 1;
 * @return {number}
 */
proto.apollo.drivers.Details_738.prototype.getNumObstacles = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_738} returns this
 */
proto.apollo.drivers.Details_738.prototype.setNumObstacles = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_738} returns this
 */
proto.apollo.drivers.Details_738.prototype.clearNumObstacles = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_738.prototype.hasNumObstacles = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 timestamp = 2;
 * @return {number}
 */
proto.apollo.drivers.Details_738.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_738} returns this
 */
proto.apollo.drivers.Details_738.prototype.setTimestamp = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_738} returns this
 */
proto.apollo.drivers.Details_738.prototype.clearTimestamp = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_738.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 application_version = 3;
 * @return {number}
 */
proto.apollo.drivers.Details_738.prototype.getApplicationVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_738} returns this
 */
proto.apollo.drivers.Details_738.prototype.setApplicationVersion = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_738} returns this
 */
proto.apollo.drivers.Details_738.prototype.clearApplicationVersion = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_738.prototype.hasApplicationVersion = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 active_version_number_section = 4;
 * @return {number}
 */
proto.apollo.drivers.Details_738.prototype.getActiveVersionNumberSection = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_738} returns this
 */
proto.apollo.drivers.Details_738.prototype.setActiveVersionNumberSection = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_738} returns this
 */
proto.apollo.drivers.Details_738.prototype.clearActiveVersionNumberSection = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_738.prototype.hasActiveVersionNumberSection = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool left_close_rang_cut_in = 5;
 * @return {boolean}
 */
proto.apollo.drivers.Details_738.prototype.getLeftCloseRangCutIn = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.Details_738} returns this
 */
proto.apollo.drivers.Details_738.prototype.setLeftCloseRangCutIn = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_738} returns this
 */
proto.apollo.drivers.Details_738.prototype.clearLeftCloseRangCutIn = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_738.prototype.hasLeftCloseRangCutIn = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool right_close_rang_cut_in = 6;
 * @return {boolean}
 */
proto.apollo.drivers.Details_738.prototype.getRightCloseRangCutIn = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.Details_738} returns this
 */
proto.apollo.drivers.Details_738.prototype.setRightCloseRangCutIn = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_738} returns this
 */
proto.apollo.drivers.Details_738.prototype.clearRightCloseRangCutIn = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_738.prototype.hasRightCloseRangCutIn = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 go = 7;
 * @return {number}
 */
proto.apollo.drivers.Details_738.prototype.getGo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_738} returns this
 */
proto.apollo.drivers.Details_738.prototype.setGo = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_738} returns this
 */
proto.apollo.drivers.Details_738.prototype.clearGo = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_738.prototype.hasGo = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 protocol_version = 8;
 * @return {number}
 */
proto.apollo.drivers.Details_738.prototype.getProtocolVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_738} returns this
 */
proto.apollo.drivers.Details_738.prototype.setProtocolVersion = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_738} returns this
 */
proto.apollo.drivers.Details_738.prototype.clearProtocolVersion = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_738.prototype.hasProtocolVersion = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool close_car = 9;
 * @return {boolean}
 */
proto.apollo.drivers.Details_738.prototype.getCloseCar = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.Details_738} returns this
 */
proto.apollo.drivers.Details_738.prototype.setCloseCar = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_738} returns this
 */
proto.apollo.drivers.Details_738.prototype.clearCloseCar = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_738.prototype.hasCloseCar = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int32 failsafe = 10;
 * @return {number}
 */
proto.apollo.drivers.Details_738.prototype.getFailsafe = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_738} returns this
 */
proto.apollo.drivers.Details_738.prototype.setFailsafe = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_738} returns this
 */
proto.apollo.drivers.Details_738.prototype.clearFailsafe = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_738.prototype.hasFailsafe = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int32 reserved_10 = 11;
 * @return {number}
 */
proto.apollo.drivers.Details_738.prototype.getReserved10 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_738} returns this
 */
proto.apollo.drivers.Details_738.prototype.setReserved10 = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_738} returns this
 */
proto.apollo.drivers.Details_738.prototype.clearReserved10 = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_738.prototype.hasReserved10 = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.Next_76c.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.Next_76c.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.Next_76c} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Next_76c.toObject = function(includeInstance, msg) {
  var f, obj = {
    laneType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    quality: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    modelDegree: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    position: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    curvature: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    curvatureDerivative: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    laneMarkWidth: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Next_76c as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.Next_76c.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.laneType;

  /** @type {?|undefined} */
  this.quality;

  /** @type {?|undefined} */
  this.modelDegree;

  /** @type {?|undefined} */
  this.position;

  /** @type {?|undefined} */
  this.curvature;

  /** @type {?|undefined} */
  this.curvatureDerivative;

  /** @type {?|undefined} */
  this.laneMarkWidth;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.Next_76c.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.Next_76c}
 */
proto.apollo.drivers.Next_76c.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.Next_76c();
  obj.laneType != null && jspb.Message.setField(msg, 1, obj.laneType);
  obj.quality != null && jspb.Message.setField(msg, 2, obj.quality);
  obj.modelDegree != null && jspb.Message.setField(msg, 3, obj.modelDegree);
  obj.position != null && jspb.Message.setField(msg, 4, obj.position);
  obj.curvature != null && jspb.Message.setField(msg, 5, obj.curvature);
  obj.curvatureDerivative != null && jspb.Message.setField(msg, 6, obj.curvatureDerivative);
  obj.laneMarkWidth != null && jspb.Message.setField(msg, 7, obj.laneMarkWidth);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.Next_76c}
 */
proto.apollo.drivers.Next_76c.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.Next_76c;
  return proto.apollo.drivers.Next_76c.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.Next_76c} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.Next_76c}
 */
proto.apollo.drivers.Next_76c.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLaneType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuality(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setModelDegree(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPosition(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurvature(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurvatureDerivative(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLaneMarkWidth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.Next_76c.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.Next_76c.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.Next_76c} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Next_76c.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
};


/**
 * optional int32 lane_type = 1;
 * @return {number}
 */
proto.apollo.drivers.Next_76c.prototype.getLaneType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Next_76c} returns this
 */
proto.apollo.drivers.Next_76c.prototype.setLaneType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Next_76c} returns this
 */
proto.apollo.drivers.Next_76c.prototype.clearLaneType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Next_76c.prototype.hasLaneType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 quality = 2;
 * @return {number}
 */
proto.apollo.drivers.Next_76c.prototype.getQuality = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Next_76c} returns this
 */
proto.apollo.drivers.Next_76c.prototype.setQuality = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Next_76c} returns this
 */
proto.apollo.drivers.Next_76c.prototype.clearQuality = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Next_76c.prototype.hasQuality = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 model_degree = 3;
 * @return {number}
 */
proto.apollo.drivers.Next_76c.prototype.getModelDegree = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Next_76c} returns this
 */
proto.apollo.drivers.Next_76c.prototype.setModelDegree = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Next_76c} returns this
 */
proto.apollo.drivers.Next_76c.prototype.clearModelDegree = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Next_76c.prototype.hasModelDegree = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double position = 4;
 * @return {number}
 */
proto.apollo.drivers.Next_76c.prototype.getPosition = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Next_76c} returns this
 */
proto.apollo.drivers.Next_76c.prototype.setPosition = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Next_76c} returns this
 */
proto.apollo.drivers.Next_76c.prototype.clearPosition = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Next_76c.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double curvature = 5;
 * @return {number}
 */
proto.apollo.drivers.Next_76c.prototype.getCurvature = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Next_76c} returns this
 */
proto.apollo.drivers.Next_76c.prototype.setCurvature = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Next_76c} returns this
 */
proto.apollo.drivers.Next_76c.prototype.clearCurvature = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Next_76c.prototype.hasCurvature = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double curvature_derivative = 6;
 * @return {number}
 */
proto.apollo.drivers.Next_76c.prototype.getCurvatureDerivative = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Next_76c} returns this
 */
proto.apollo.drivers.Next_76c.prototype.setCurvatureDerivative = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Next_76c} returns this
 */
proto.apollo.drivers.Next_76c.prototype.clearCurvatureDerivative = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Next_76c.prototype.hasCurvatureDerivative = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double lane_mark_width = 7;
 * @return {number}
 */
proto.apollo.drivers.Next_76c.prototype.getLaneMarkWidth = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Next_76c} returns this
 */
proto.apollo.drivers.Next_76c.prototype.setLaneMarkWidth = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Next_76c} returns this
 */
proto.apollo.drivers.Next_76c.prototype.clearLaneMarkWidth = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Next_76c.prototype.hasLaneMarkWidth = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.Details_737.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.Details_737.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.Details_737} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Details_737.toObject = function(includeInstance, msg) {
  var f, obj = {
    laneCurvature: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    laneHeading: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    caConstructionArea: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    rightLdwAvailability: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    leftLdwAvailability: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    reserved1: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    yawAngle: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    pitchAngle: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Details_737 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.Details_737.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.laneCurvature;

  /** @type {?|undefined} */
  this.laneHeading;

  /** @type {?|undefined} */
  this.caConstructionArea;

  /** @type {?|undefined} */
  this.rightLdwAvailability;

  /** @type {?|undefined} */
  this.leftLdwAvailability;

  /** @type {?|undefined} */
  this.reserved1;

  /** @type {?|undefined} */
  this.yawAngle;

  /** @type {?|undefined} */
  this.pitchAngle;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.Details_737.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.Details_737}
 */
proto.apollo.drivers.Details_737.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.Details_737();
  obj.laneCurvature != null && jspb.Message.setField(msg, 1, obj.laneCurvature);
  obj.laneHeading != null && jspb.Message.setField(msg, 2, obj.laneHeading);
  obj.caConstructionArea != null && jspb.Message.setField(msg, 3, obj.caConstructionArea);
  obj.rightLdwAvailability != null && jspb.Message.setField(msg, 4, obj.rightLdwAvailability);
  obj.leftLdwAvailability != null && jspb.Message.setField(msg, 5, obj.leftLdwAvailability);
  obj.reserved1 != null && jspb.Message.setField(msg, 6, obj.reserved1);
  obj.yawAngle != null && jspb.Message.setField(msg, 7, obj.yawAngle);
  obj.pitchAngle != null && jspb.Message.setField(msg, 8, obj.pitchAngle);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.Details_737}
 */
proto.apollo.drivers.Details_737.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.Details_737;
  return proto.apollo.drivers.Details_737.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.Details_737} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.Details_737}
 */
proto.apollo.drivers.Details_737.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLaneCurvature(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLaneHeading(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCaConstructionArea(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRightLdwAvailability(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLeftLdwAvailability(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReserved1(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setYawAngle(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPitchAngle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.Details_737.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.Details_737.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.Details_737} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Details_737.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
};


/**
 * optional double lane_curvature = 1;
 * @return {number}
 */
proto.apollo.drivers.Details_737.prototype.getLaneCurvature = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_737} returns this
 */
proto.apollo.drivers.Details_737.prototype.setLaneCurvature = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_737} returns this
 */
proto.apollo.drivers.Details_737.prototype.clearLaneCurvature = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_737.prototype.hasLaneCurvature = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double lane_heading = 2;
 * @return {number}
 */
proto.apollo.drivers.Details_737.prototype.getLaneHeading = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_737} returns this
 */
proto.apollo.drivers.Details_737.prototype.setLaneHeading = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_737} returns this
 */
proto.apollo.drivers.Details_737.prototype.clearLaneHeading = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_737.prototype.hasLaneHeading = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool ca_construction_area = 3;
 * @return {boolean}
 */
proto.apollo.drivers.Details_737.prototype.getCaConstructionArea = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.Details_737} returns this
 */
proto.apollo.drivers.Details_737.prototype.setCaConstructionArea = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_737} returns this
 */
proto.apollo.drivers.Details_737.prototype.clearCaConstructionArea = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_737.prototype.hasCaConstructionArea = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool right_ldw_availability = 4;
 * @return {boolean}
 */
proto.apollo.drivers.Details_737.prototype.getRightLdwAvailability = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.Details_737} returns this
 */
proto.apollo.drivers.Details_737.prototype.setRightLdwAvailability = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_737} returns this
 */
proto.apollo.drivers.Details_737.prototype.clearRightLdwAvailability = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_737.prototype.hasRightLdwAvailability = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool left_ldw_availability = 5;
 * @return {boolean}
 */
proto.apollo.drivers.Details_737.prototype.getLeftLdwAvailability = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.Details_737} returns this
 */
proto.apollo.drivers.Details_737.prototype.setLeftLdwAvailability = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_737} returns this
 */
proto.apollo.drivers.Details_737.prototype.clearLeftLdwAvailability = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_737.prototype.hasLeftLdwAvailability = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool reserved_1 = 6;
 * @return {boolean}
 */
proto.apollo.drivers.Details_737.prototype.getReserved1 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.Details_737} returns this
 */
proto.apollo.drivers.Details_737.prototype.setReserved1 = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_737} returns this
 */
proto.apollo.drivers.Details_737.prototype.clearReserved1 = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_737.prototype.hasReserved1 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double yaw_angle = 7;
 * @return {number}
 */
proto.apollo.drivers.Details_737.prototype.getYawAngle = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_737} returns this
 */
proto.apollo.drivers.Details_737.prototype.setYawAngle = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_737} returns this
 */
proto.apollo.drivers.Details_737.prototype.clearYawAngle = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_737.prototype.hasYawAngle = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double pitch_angle = 8;
 * @return {number}
 */
proto.apollo.drivers.Details_737.prototype.getPitchAngle = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_737} returns this
 */
proto.apollo.drivers.Details_737.prototype.setPitchAngle = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_737} returns this
 */
proto.apollo.drivers.Details_737.prototype.clearPitchAngle = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_737.prototype.hasPitchAngle = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.Lka_767.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.Lka_767.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.Lka_767} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Lka_767.toObject = function(includeInstance, msg) {
  var f, obj = {
    headingAngle: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    viewRange: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    viewRangeAvailability: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Lka_767 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.Lka_767.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.headingAngle;

  /** @type {?|undefined} */
  this.viewRange;

  /** @type {?|undefined} */
  this.viewRangeAvailability;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.Lka_767.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.Lka_767}
 */
proto.apollo.drivers.Lka_767.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.Lka_767();
  obj.headingAngle != null && jspb.Message.setField(msg, 1, obj.headingAngle);
  obj.viewRange != null && jspb.Message.setField(msg, 2, obj.viewRange);
  obj.viewRangeAvailability != null && jspb.Message.setField(msg, 3, obj.viewRangeAvailability);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.Lka_767}
 */
proto.apollo.drivers.Lka_767.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.Lka_767;
  return proto.apollo.drivers.Lka_767.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.Lka_767} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.Lka_767}
 */
proto.apollo.drivers.Lka_767.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHeadingAngle(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setViewRange(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setViewRangeAvailability(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.Lka_767.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.Lka_767.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.Lka_767} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Lka_767.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional double heading_angle = 1;
 * @return {number}
 */
proto.apollo.drivers.Lka_767.prototype.getHeadingAngle = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Lka_767} returns this
 */
proto.apollo.drivers.Lka_767.prototype.setHeadingAngle = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Lka_767} returns this
 */
proto.apollo.drivers.Lka_767.prototype.clearHeadingAngle = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Lka_767.prototype.hasHeadingAngle = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double view_range = 2;
 * @return {number}
 */
proto.apollo.drivers.Lka_767.prototype.getViewRange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Lka_767} returns this
 */
proto.apollo.drivers.Lka_767.prototype.setViewRange = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Lka_767} returns this
 */
proto.apollo.drivers.Lka_767.prototype.clearViewRange = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Lka_767.prototype.hasViewRange = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool view_range_availability = 3;
 * @return {boolean}
 */
proto.apollo.drivers.Lka_767.prototype.getViewRangeAvailability = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.Lka_767} returns this
 */
proto.apollo.drivers.Lka_767.prototype.setViewRangeAvailability = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Lka_767} returns this
 */
proto.apollo.drivers.Lka_767.prototype.clearViewRangeAvailability = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Lka_767.prototype.hasViewRangeAvailability = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.Lka_766.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.Lka_766.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.Lka_766} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Lka_766.toObject = function(includeInstance, msg) {
  var f, obj = {
    laneType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    quality: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    modelDegree: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    position: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    curvature: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    curvatureDerivative: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    widthLeftMarking: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Lka_766 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.Lka_766.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.laneType;

  /** @type {?|undefined} */
  this.quality;

  /** @type {?|undefined} */
  this.modelDegree;

  /** @type {?|undefined} */
  this.position;

  /** @type {?|undefined} */
  this.curvature;

  /** @type {?|undefined} */
  this.curvatureDerivative;

  /** @type {?|undefined} */
  this.widthLeftMarking;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.Lka_766.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.Lka_766}
 */
proto.apollo.drivers.Lka_766.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.Lka_766();
  obj.laneType != null && jspb.Message.setField(msg, 1, obj.laneType);
  obj.quality != null && jspb.Message.setField(msg, 2, obj.quality);
  obj.modelDegree != null && jspb.Message.setField(msg, 3, obj.modelDegree);
  obj.position != null && jspb.Message.setField(msg, 4, obj.position);
  obj.curvature != null && jspb.Message.setField(msg, 5, obj.curvature);
  obj.curvatureDerivative != null && jspb.Message.setField(msg, 6, obj.curvatureDerivative);
  obj.widthLeftMarking != null && jspb.Message.setField(msg, 7, obj.widthLeftMarking);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.Lka_766}
 */
proto.apollo.drivers.Lka_766.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.Lka_766;
  return proto.apollo.drivers.Lka_766.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.Lka_766} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.Lka_766}
 */
proto.apollo.drivers.Lka_766.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLaneType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuality(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setModelDegree(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPosition(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurvature(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurvatureDerivative(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWidthLeftMarking(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.Lka_766.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.Lka_766.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.Lka_766} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Lka_766.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
};


/**
 * optional int32 lane_type = 1;
 * @return {number}
 */
proto.apollo.drivers.Lka_766.prototype.getLaneType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Lka_766} returns this
 */
proto.apollo.drivers.Lka_766.prototype.setLaneType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Lka_766} returns this
 */
proto.apollo.drivers.Lka_766.prototype.clearLaneType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Lka_766.prototype.hasLaneType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 quality = 2;
 * @return {number}
 */
proto.apollo.drivers.Lka_766.prototype.getQuality = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Lka_766} returns this
 */
proto.apollo.drivers.Lka_766.prototype.setQuality = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Lka_766} returns this
 */
proto.apollo.drivers.Lka_766.prototype.clearQuality = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Lka_766.prototype.hasQuality = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 model_degree = 3;
 * @return {number}
 */
proto.apollo.drivers.Lka_766.prototype.getModelDegree = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Lka_766} returns this
 */
proto.apollo.drivers.Lka_766.prototype.setModelDegree = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Lka_766} returns this
 */
proto.apollo.drivers.Lka_766.prototype.clearModelDegree = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Lka_766.prototype.hasModelDegree = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double position = 4;
 * @return {number}
 */
proto.apollo.drivers.Lka_766.prototype.getPosition = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Lka_766} returns this
 */
proto.apollo.drivers.Lka_766.prototype.setPosition = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Lka_766} returns this
 */
proto.apollo.drivers.Lka_766.prototype.clearPosition = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Lka_766.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double curvature = 5;
 * @return {number}
 */
proto.apollo.drivers.Lka_766.prototype.getCurvature = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Lka_766} returns this
 */
proto.apollo.drivers.Lka_766.prototype.setCurvature = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Lka_766} returns this
 */
proto.apollo.drivers.Lka_766.prototype.clearCurvature = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Lka_766.prototype.hasCurvature = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double curvature_derivative = 6;
 * @return {number}
 */
proto.apollo.drivers.Lka_766.prototype.getCurvatureDerivative = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Lka_766} returns this
 */
proto.apollo.drivers.Lka_766.prototype.setCurvatureDerivative = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Lka_766} returns this
 */
proto.apollo.drivers.Lka_766.prototype.clearCurvatureDerivative = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Lka_766.prototype.hasCurvatureDerivative = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double width_left_marking = 7;
 * @return {number}
 */
proto.apollo.drivers.Lka_766.prototype.getWidthLeftMarking = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Lka_766} returns this
 */
proto.apollo.drivers.Lka_766.prototype.setWidthLeftMarking = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Lka_766} returns this
 */
proto.apollo.drivers.Lka_766.prototype.clearWidthLeftMarking = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Lka_766.prototype.hasWidthLeftMarking = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.Next_76d.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.Next_76d.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.Next_76d} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Next_76d.toObject = function(includeInstance, msg) {
  var f, obj = {
    headingAngle: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    viewRange: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    viewRangeAvailability: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Next_76d as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.Next_76d.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.headingAngle;

  /** @type {?|undefined} */
  this.viewRange;

  /** @type {?|undefined} */
  this.viewRangeAvailability;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.Next_76d.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.Next_76d}
 */
proto.apollo.drivers.Next_76d.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.Next_76d();
  obj.headingAngle != null && jspb.Message.setField(msg, 1, obj.headingAngle);
  obj.viewRange != null && jspb.Message.setField(msg, 2, obj.viewRange);
  obj.viewRangeAvailability != null && jspb.Message.setField(msg, 3, obj.viewRangeAvailability);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.Next_76d}
 */
proto.apollo.drivers.Next_76d.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.Next_76d;
  return proto.apollo.drivers.Next_76d.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.Next_76d} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.Next_76d}
 */
proto.apollo.drivers.Next_76d.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHeadingAngle(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setViewRange(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setViewRangeAvailability(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.Next_76d.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.Next_76d.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.Next_76d} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Next_76d.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional double heading_angle = 1;
 * @return {number}
 */
proto.apollo.drivers.Next_76d.prototype.getHeadingAngle = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Next_76d} returns this
 */
proto.apollo.drivers.Next_76d.prototype.setHeadingAngle = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Next_76d} returns this
 */
proto.apollo.drivers.Next_76d.prototype.clearHeadingAngle = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Next_76d.prototype.hasHeadingAngle = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double view_range = 2;
 * @return {number}
 */
proto.apollo.drivers.Next_76d.prototype.getViewRange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Next_76d} returns this
 */
proto.apollo.drivers.Next_76d.prototype.setViewRange = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Next_76d} returns this
 */
proto.apollo.drivers.Next_76d.prototype.clearViewRange = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Next_76d.prototype.hasViewRange = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool view_range_availability = 3;
 * @return {boolean}
 */
proto.apollo.drivers.Next_76d.prototype.getViewRangeAvailability = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.Next_76d} returns this
 */
proto.apollo.drivers.Next_76d.prototype.setViewRangeAvailability = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Next_76d} returns this
 */
proto.apollo.drivers.Next_76d.prototype.clearViewRangeAvailability = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Next_76d.prototype.hasViewRangeAvailability = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.Details_739.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.Details_739.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.Details_739} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Details_739.toObject = function(includeInstance, msg) {
  var f, obj = {
    obstacleId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    obstaclePosX: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    reseved2: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    obstaclePosY: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    blinkerInfo: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    cutInAndOut: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    obstacleRelVelX: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    obstacleType: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    reserved3: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f,
    obstacleStatus: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    obstacleBrakeLights: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f,
    reserved4: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    obstacleValid: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Details_739 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.Details_739.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.obstacleId;

  /** @type {?|undefined} */
  this.obstaclePosX;

  /** @type {?|undefined} */
  this.reseved2;

  /** @type {?|undefined} */
  this.obstaclePosY;

  /** @type {?|undefined} */
  this.blinkerInfo;

  /** @type {?|undefined} */
  this.cutInAndOut;

  /** @type {?|undefined} */
  this.obstacleRelVelX;

  /** @type {?|undefined} */
  this.obstacleType;

  /** @type {?|undefined} */
  this.reserved3;

  /** @type {?|undefined} */
  this.obstacleStatus;

  /** @type {?|undefined} */
  this.obstacleBrakeLights;

  /** @type {?|undefined} */
  this.reserved4;

  /** @type {?|undefined} */
  this.obstacleValid;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.Details_739.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.Details_739}
 */
proto.apollo.drivers.Details_739.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.Details_739();
  obj.obstacleId != null && jspb.Message.setField(msg, 1, obj.obstacleId);
  obj.obstaclePosX != null && jspb.Message.setField(msg, 2, obj.obstaclePosX);
  obj.reseved2 != null && jspb.Message.setField(msg, 3, obj.reseved2);
  obj.obstaclePosY != null && jspb.Message.setField(msg, 4, obj.obstaclePosY);
  obj.blinkerInfo != null && jspb.Message.setField(msg, 5, obj.blinkerInfo);
  obj.cutInAndOut != null && jspb.Message.setField(msg, 6, obj.cutInAndOut);
  obj.obstacleRelVelX != null && jspb.Message.setField(msg, 7, obj.obstacleRelVelX);
  obj.obstacleType != null && jspb.Message.setField(msg, 8, obj.obstacleType);
  obj.reserved3 != null && jspb.Message.setField(msg, 9, obj.reserved3);
  obj.obstacleStatus != null && jspb.Message.setField(msg, 10, obj.obstacleStatus);
  obj.obstacleBrakeLights != null && jspb.Message.setField(msg, 11, obj.obstacleBrakeLights);
  obj.reserved4 != null && jspb.Message.setField(msg, 12, obj.reserved4);
  obj.obstacleValid != null && jspb.Message.setField(msg, 13, obj.obstacleValid);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.Details_739}
 */
proto.apollo.drivers.Details_739.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.Details_739;
  return proto.apollo.drivers.Details_739.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.Details_739} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.Details_739}
 */
proto.apollo.drivers.Details_739.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setObstacleId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setObstaclePosX(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReseved2(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setObstaclePosY(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBlinkerInfo(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCutInAndOut(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setObstacleRelVelX(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setObstacleType(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReserved3(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setObstacleStatus(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setObstacleBrakeLights(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReserved4(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setObstacleValid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.Details_739.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.Details_739.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.Details_739} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Details_739.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeInt32(
      13,
      f
    );
  }
};


/**
 * optional int32 obstacle_id = 1;
 * @return {number}
 */
proto.apollo.drivers.Details_739.prototype.getObstacleId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.setObstacleId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.clearObstacleId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_739.prototype.hasObstacleId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double obstacle_pos_x = 2;
 * @return {number}
 */
proto.apollo.drivers.Details_739.prototype.getObstaclePosX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.setObstaclePosX = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.clearObstaclePosX = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_739.prototype.hasObstaclePosX = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 reseved_2 = 3;
 * @return {number}
 */
proto.apollo.drivers.Details_739.prototype.getReseved2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.setReseved2 = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.clearReseved2 = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_739.prototype.hasReseved2 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double obstacle_pos_y = 4;
 * @return {number}
 */
proto.apollo.drivers.Details_739.prototype.getObstaclePosY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.setObstaclePosY = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.clearObstaclePosY = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_739.prototype.hasObstaclePosY = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 blinker_info = 5;
 * @return {number}
 */
proto.apollo.drivers.Details_739.prototype.getBlinkerInfo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.setBlinkerInfo = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.clearBlinkerInfo = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_739.prototype.hasBlinkerInfo = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 cut_in_and_out = 6;
 * @return {number}
 */
proto.apollo.drivers.Details_739.prototype.getCutInAndOut = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.setCutInAndOut = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.clearCutInAndOut = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_739.prototype.hasCutInAndOut = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double obstacle_rel_vel_x = 7;
 * @return {number}
 */
proto.apollo.drivers.Details_739.prototype.getObstacleRelVelX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.setObstacleRelVelX = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.clearObstacleRelVelX = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_739.prototype.hasObstacleRelVelX = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 obstacle_type = 8;
 * @return {number}
 */
proto.apollo.drivers.Details_739.prototype.getObstacleType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.setObstacleType = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.clearObstacleType = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_739.prototype.hasObstacleType = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool reserved_3 = 9;
 * @return {boolean}
 */
proto.apollo.drivers.Details_739.prototype.getReserved3 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.setReserved3 = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.clearReserved3 = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_739.prototype.hasReserved3 = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int32 obstacle_status = 10;
 * @return {number}
 */
proto.apollo.drivers.Details_739.prototype.getObstacleStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.setObstacleStatus = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.clearObstacleStatus = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_739.prototype.hasObstacleStatus = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool obstacle_brake_lights = 11;
 * @return {boolean}
 */
proto.apollo.drivers.Details_739.prototype.getObstacleBrakeLights = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.setObstacleBrakeLights = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.clearObstacleBrakeLights = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_739.prototype.hasObstacleBrakeLights = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int32 reserved_4 = 12;
 * @return {number}
 */
proto.apollo.drivers.Details_739.prototype.getReserved4 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.setReserved4 = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.clearReserved4 = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_739.prototype.hasReserved4 = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int32 obstacle_valid = 13;
 * @return {number}
 */
proto.apollo.drivers.Details_739.prototype.getObstacleValid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.setObstacleValid = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_739} returns this
 */
proto.apollo.drivers.Details_739.prototype.clearObstacleValid = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_739.prototype.hasObstacleValid = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.Details_73a.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.Details_73a.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.Details_73a} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Details_73a.toObject = function(includeInstance, msg) {
  var f, obj = {
    obstacleLength: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    obstacleWidth: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    obstacleAge: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    obstacleLane: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    cipvFlag: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    reserved5: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    radarPosX: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    radarVelX: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    radarMatchConfidence: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    reserved6: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f,
    matchedRadarId: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    reserved7: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Details_73a as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.Details_73a.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.obstacleLength;

  /** @type {?|undefined} */
  this.obstacleWidth;

  /** @type {?|undefined} */
  this.obstacleAge;

  /** @type {?|undefined} */
  this.obstacleLane;

  /** @type {?|undefined} */
  this.cipvFlag;

  /** @type {?|undefined} */
  this.reserved5;

  /** @type {?|undefined} */
  this.radarPosX;

  /** @type {?|undefined} */
  this.radarVelX;

  /** @type {?|undefined} */
  this.radarMatchConfidence;

  /** @type {?|undefined} */
  this.reserved6;

  /** @type {?|undefined} */
  this.matchedRadarId;

  /** @type {?|undefined} */
  this.reserved7;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.Details_73a.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.Details_73a}
 */
proto.apollo.drivers.Details_73a.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.Details_73a();
  obj.obstacleLength != null && jspb.Message.setField(msg, 1, obj.obstacleLength);
  obj.obstacleWidth != null && jspb.Message.setField(msg, 2, obj.obstacleWidth);
  obj.obstacleAge != null && jspb.Message.setField(msg, 3, obj.obstacleAge);
  obj.obstacleLane != null && jspb.Message.setField(msg, 4, obj.obstacleLane);
  obj.cipvFlag != null && jspb.Message.setField(msg, 5, obj.cipvFlag);
  obj.reserved5 != null && jspb.Message.setField(msg, 6, obj.reserved5);
  obj.radarPosX != null && jspb.Message.setField(msg, 7, obj.radarPosX);
  obj.radarVelX != null && jspb.Message.setField(msg, 8, obj.radarVelX);
  obj.radarMatchConfidence != null && jspb.Message.setField(msg, 9, obj.radarMatchConfidence);
  obj.reserved6 != null && jspb.Message.setField(msg, 10, obj.reserved6);
  obj.matchedRadarId != null && jspb.Message.setField(msg, 11, obj.matchedRadarId);
  obj.reserved7 != null && jspb.Message.setField(msg, 12, obj.reserved7);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.Details_73a}
 */
proto.apollo.drivers.Details_73a.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.Details_73a;
  return proto.apollo.drivers.Details_73a.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.Details_73a} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.Details_73a}
 */
proto.apollo.drivers.Details_73a.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setObstacleLength(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setObstacleWidth(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setObstacleAge(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setObstacleLane(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCipvFlag(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReserved5(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRadarPosX(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRadarVelX(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRadarMatchConfidence(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReserved6(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMatchedRadarId(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReserved7(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.Details_73a.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.Details_73a.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.Details_73a} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Details_73a.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
};


/**
 * optional double obstacle_length = 1;
 * @return {number}
 */
proto.apollo.drivers.Details_73a.prototype.getObstacleLength = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.setObstacleLength = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.clearObstacleLength = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_73a.prototype.hasObstacleLength = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double obstacle_width = 2;
 * @return {number}
 */
proto.apollo.drivers.Details_73a.prototype.getObstacleWidth = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.setObstacleWidth = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.clearObstacleWidth = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_73a.prototype.hasObstacleWidth = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 obstacle_age = 3;
 * @return {number}
 */
proto.apollo.drivers.Details_73a.prototype.getObstacleAge = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.setObstacleAge = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.clearObstacleAge = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_73a.prototype.hasObstacleAge = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 obstacle_lane = 4;
 * @return {number}
 */
proto.apollo.drivers.Details_73a.prototype.getObstacleLane = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.setObstacleLane = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.clearObstacleLane = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_73a.prototype.hasObstacleLane = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool cipv_flag = 5;
 * @return {boolean}
 */
proto.apollo.drivers.Details_73a.prototype.getCipvFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.setCipvFlag = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.clearCipvFlag = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_73a.prototype.hasCipvFlag = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool reserved_5 = 6;
 * @return {boolean}
 */
proto.apollo.drivers.Details_73a.prototype.getReserved5 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.setReserved5 = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.clearReserved5 = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_73a.prototype.hasReserved5 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double radar_pos_x = 7;
 * @return {number}
 */
proto.apollo.drivers.Details_73a.prototype.getRadarPosX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.setRadarPosX = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.clearRadarPosX = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_73a.prototype.hasRadarPosX = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double radar_vel_x = 8;
 * @return {number}
 */
proto.apollo.drivers.Details_73a.prototype.getRadarVelX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.setRadarVelX = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.clearRadarVelX = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_73a.prototype.hasRadarVelX = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 radar_match_confidence = 9;
 * @return {number}
 */
proto.apollo.drivers.Details_73a.prototype.getRadarMatchConfidence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.setRadarMatchConfidence = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.clearRadarMatchConfidence = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_73a.prototype.hasRadarMatchConfidence = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool reserved_6 = 10;
 * @return {boolean}
 */
proto.apollo.drivers.Details_73a.prototype.getReserved6 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.setReserved6 = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.clearReserved6 = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_73a.prototype.hasReserved6 = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int32 matched_radar_id = 11;
 * @return {number}
 */
proto.apollo.drivers.Details_73a.prototype.getMatchedRadarId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.setMatchedRadarId = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.clearMatchedRadarId = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_73a.prototype.hasMatchedRadarId = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool reserved_7 = 12;
 * @return {boolean}
 */
proto.apollo.drivers.Details_73a.prototype.getReserved7 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.setReserved7 = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_73a} returns this
 */
proto.apollo.drivers.Details_73a.prototype.clearReserved7 = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_73a.prototype.hasReserved7 = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.Details_73b.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.Details_73b.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.Details_73b} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Details_73b.toObject = function(includeInstance, msg) {
  var f, obj = {
    obstacleAngleRate: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    obstacleScaleChange: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    objectAccelX: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    reserved8: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    obstacleReplaced: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    reserved9: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    obstacleAngle: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Details_73b as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.Details_73b.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.obstacleAngleRate;

  /** @type {?|undefined} */
  this.obstacleScaleChange;

  /** @type {?|undefined} */
  this.objectAccelX;

  /** @type {?|undefined} */
  this.reserved8;

  /** @type {?|undefined} */
  this.obstacleReplaced;

  /** @type {?|undefined} */
  this.reserved9;

  /** @type {?|undefined} */
  this.obstacleAngle;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.Details_73b.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.Details_73b}
 */
proto.apollo.drivers.Details_73b.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.Details_73b();
  obj.obstacleAngleRate != null && jspb.Message.setField(msg, 1, obj.obstacleAngleRate);
  obj.obstacleScaleChange != null && jspb.Message.setField(msg, 2, obj.obstacleScaleChange);
  obj.objectAccelX != null && jspb.Message.setField(msg, 3, obj.objectAccelX);
  obj.reserved8 != null && jspb.Message.setField(msg, 4, obj.reserved8);
  obj.obstacleReplaced != null && jspb.Message.setField(msg, 5, obj.obstacleReplaced);
  obj.reserved9 != null && jspb.Message.setField(msg, 6, obj.reserved9);
  obj.obstacleAngle != null && jspb.Message.setField(msg, 7, obj.obstacleAngle);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.Details_73b}
 */
proto.apollo.drivers.Details_73b.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.Details_73b;
  return proto.apollo.drivers.Details_73b.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.Details_73b} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.Details_73b}
 */
proto.apollo.drivers.Details_73b.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setObstacleAngleRate(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setObstacleScaleChange(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setObjectAccelX(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReserved8(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setObstacleReplaced(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReserved9(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setObstacleAngle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.Details_73b.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.Details_73b.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.Details_73b} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Details_73b.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
};


/**
 * optional double obstacle_angle_rate = 1;
 * @return {number}
 */
proto.apollo.drivers.Details_73b.prototype.getObstacleAngleRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_73b} returns this
 */
proto.apollo.drivers.Details_73b.prototype.setObstacleAngleRate = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_73b} returns this
 */
proto.apollo.drivers.Details_73b.prototype.clearObstacleAngleRate = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_73b.prototype.hasObstacleAngleRate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double obstacle_scale_change = 2;
 * @return {number}
 */
proto.apollo.drivers.Details_73b.prototype.getObstacleScaleChange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_73b} returns this
 */
proto.apollo.drivers.Details_73b.prototype.setObstacleScaleChange = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_73b} returns this
 */
proto.apollo.drivers.Details_73b.prototype.clearObstacleScaleChange = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_73b.prototype.hasObstacleScaleChange = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double object_accel_x = 3;
 * @return {number}
 */
proto.apollo.drivers.Details_73b.prototype.getObjectAccelX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_73b} returns this
 */
proto.apollo.drivers.Details_73b.prototype.setObjectAccelX = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_73b} returns this
 */
proto.apollo.drivers.Details_73b.prototype.clearObjectAccelX = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_73b.prototype.hasObjectAccelX = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 reserved_8 = 4;
 * @return {number}
 */
proto.apollo.drivers.Details_73b.prototype.getReserved8 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_73b} returns this
 */
proto.apollo.drivers.Details_73b.prototype.setReserved8 = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_73b} returns this
 */
proto.apollo.drivers.Details_73b.prototype.clearReserved8 = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_73b.prototype.hasReserved8 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool obstacle_replaced = 5;
 * @return {boolean}
 */
proto.apollo.drivers.Details_73b.prototype.getObstacleReplaced = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.Details_73b} returns this
 */
proto.apollo.drivers.Details_73b.prototype.setObstacleReplaced = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_73b} returns this
 */
proto.apollo.drivers.Details_73b.prototype.clearObstacleReplaced = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_73b.prototype.hasObstacleReplaced = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 reserved_9 = 6;
 * @return {number}
 */
proto.apollo.drivers.Details_73b.prototype.getReserved9 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_73b} returns this
 */
proto.apollo.drivers.Details_73b.prototype.setReserved9 = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_73b} returns this
 */
proto.apollo.drivers.Details_73b.prototype.clearReserved9 = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_73b.prototype.hasReserved9 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double obstacle_angle = 7;
 * @return {number}
 */
proto.apollo.drivers.Details_73b.prototype.getObstacleAngle = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.Details_73b} returns this
 */
proto.apollo.drivers.Details_73b.prototype.setObstacleAngle = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.Details_73b} returns this
 */
proto.apollo.drivers.Details_73b.prototype.clearObstacleAngle = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Details_73b.prototype.hasObstacleAngle = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.drivers.Mobileye.repeatedFields_ = [5,6,7,14,15];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.Mobileye.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.Mobileye.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.Mobileye} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Mobileye.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && modules_common_proto_header_pb.Header.toObject(includeInstance, f),
    aftermarket669: (f = msg.getAftermarket669()) && proto.apollo.drivers.Aftermarket_669.toObject(includeInstance, f),
    details737: (f = msg.getDetails737()) && proto.apollo.drivers.Details_737.toObject(includeInstance, f),
    details738: (f = msg.getDetails738()) && proto.apollo.drivers.Details_738.toObject(includeInstance, f),
    details739List: jspb.Message.toObjectList(msg.getDetails739List(),
    proto.apollo.drivers.Details_739.toObject, includeInstance),
    details73aList: jspb.Message.toObjectList(msg.getDetails73aList(),
    proto.apollo.drivers.Details_73a.toObject, includeInstance),
    details73bList: jspb.Message.toObjectList(msg.getDetails73bList(),
    proto.apollo.drivers.Details_73b.toObject, includeInstance),
    lka766: (f = msg.getLka766()) && proto.apollo.drivers.Lka_766.toObject(includeInstance, f),
    lka767: (f = msg.getLka767()) && proto.apollo.drivers.Lka_767.toObject(includeInstance, f),
    lka768: (f = msg.getLka768()) && proto.apollo.drivers.Lka_768.toObject(includeInstance, f),
    lka769: (f = msg.getLka769()) && proto.apollo.drivers.Lka_769.toObject(includeInstance, f),
    reference76a: (f = msg.getReference76a()) && proto.apollo.drivers.Reference_76a.toObject(includeInstance, f),
    num76b: (f = msg.getNum76b()) && proto.apollo.drivers.Num_76b.toObject(includeInstance, f),
    next76cList: jspb.Message.toObjectList(msg.getNext76cList(),
    proto.apollo.drivers.Next_76c.toObject, includeInstance),
    next76dList: jspb.Message.toObjectList(msg.getNext76dList(),
    proto.apollo.drivers.Next_76d.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Mobileye as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.Mobileye.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.header;

  /** @type {?|undefined} */
  this.aftermarket669;

  /** @type {?|undefined} */
  this.details737;

  /** @type {?|undefined} */
  this.details738;

  /** @type {?|undefined} */
  this.details739List;

  /** @type {?|undefined} */
  this.details73aList;

  /** @type {?|undefined} */
  this.details73bList;

  /** @type {?|undefined} */
  this.lka766;

  /** @type {?|undefined} */
  this.lka767;

  /** @type {?|undefined} */
  this.lka768;

  /** @type {?|undefined} */
  this.lka769;

  /** @type {?|undefined} */
  this.reference76a;

  /** @type {?|undefined} */
  this.num76b;

  /** @type {?|undefined} */
  this.next76cList;

  /** @type {?|undefined} */
  this.next76dList;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.Mobileye.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.Mobileye}
 */
proto.apollo.drivers.Mobileye.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.Mobileye();
  obj.header && jspb.Message.setWrapperField(
      msg, 1, modules_common_proto_header_pb.Header.fromObject(obj.header));
  obj.aftermarket669 && jspb.Message.setWrapperField(
      msg, 2, proto.apollo.drivers.Aftermarket_669.fromObject(obj.aftermarket669));
  obj.details737 && jspb.Message.setWrapperField(
      msg, 3, proto.apollo.drivers.Details_737.fromObject(obj.details737));
  obj.details738 && jspb.Message.setWrapperField(
      msg, 4, proto.apollo.drivers.Details_738.fromObject(obj.details738));
  obj.details739List && jspb.Message.setRepeatedWrapperField(
      msg, 5, obj.details739List.map(
          proto.apollo.drivers.Details_739.fromObject));
  obj.details73aList && jspb.Message.setRepeatedWrapperField(
      msg, 6, obj.details73aList.map(
          proto.apollo.drivers.Details_73a.fromObject));
  obj.details73bList && jspb.Message.setRepeatedWrapperField(
      msg, 7, obj.details73bList.map(
          proto.apollo.drivers.Details_73b.fromObject));
  obj.lka766 && jspb.Message.setWrapperField(
      msg, 8, proto.apollo.drivers.Lka_766.fromObject(obj.lka766));
  obj.lka767 && jspb.Message.setWrapperField(
      msg, 9, proto.apollo.drivers.Lka_767.fromObject(obj.lka767));
  obj.lka768 && jspb.Message.setWrapperField(
      msg, 10, proto.apollo.drivers.Lka_768.fromObject(obj.lka768));
  obj.lka769 && jspb.Message.setWrapperField(
      msg, 11, proto.apollo.drivers.Lka_769.fromObject(obj.lka769));
  obj.reference76a && jspb.Message.setWrapperField(
      msg, 12, proto.apollo.drivers.Reference_76a.fromObject(obj.reference76a));
  obj.num76b && jspb.Message.setWrapperField(
      msg, 13, proto.apollo.drivers.Num_76b.fromObject(obj.num76b));
  obj.next76cList && jspb.Message.setRepeatedWrapperField(
      msg, 14, obj.next76cList.map(
          proto.apollo.drivers.Next_76c.fromObject));
  obj.next76dList && jspb.Message.setRepeatedWrapperField(
      msg, 15, obj.next76dList.map(
          proto.apollo.drivers.Next_76d.fromObject));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.Mobileye}
 */
proto.apollo.drivers.Mobileye.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.Mobileye;
  return proto.apollo.drivers.Mobileye.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.Mobileye} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.Mobileye}
 */
proto.apollo.drivers.Mobileye.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modules_common_proto_header_pb.Header;
      reader.readMessage(value,modules_common_proto_header_pb.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.apollo.drivers.Aftermarket_669;
      reader.readMessage(value,proto.apollo.drivers.Aftermarket_669.deserializeBinaryFromReader);
      msg.setAftermarket669(value);
      break;
    case 3:
      var value = new proto.apollo.drivers.Details_737;
      reader.readMessage(value,proto.apollo.drivers.Details_737.deserializeBinaryFromReader);
      msg.setDetails737(value);
      break;
    case 4:
      var value = new proto.apollo.drivers.Details_738;
      reader.readMessage(value,proto.apollo.drivers.Details_738.deserializeBinaryFromReader);
      msg.setDetails738(value);
      break;
    case 5:
      var value = new proto.apollo.drivers.Details_739;
      reader.readMessage(value,proto.apollo.drivers.Details_739.deserializeBinaryFromReader);
      msg.addDetails739(value);
      break;
    case 6:
      var value = new proto.apollo.drivers.Details_73a;
      reader.readMessage(value,proto.apollo.drivers.Details_73a.deserializeBinaryFromReader);
      msg.addDetails73a(value);
      break;
    case 7:
      var value = new proto.apollo.drivers.Details_73b;
      reader.readMessage(value,proto.apollo.drivers.Details_73b.deserializeBinaryFromReader);
      msg.addDetails73b(value);
      break;
    case 8:
      var value = new proto.apollo.drivers.Lka_766;
      reader.readMessage(value,proto.apollo.drivers.Lka_766.deserializeBinaryFromReader);
      msg.setLka766(value);
      break;
    case 9:
      var value = new proto.apollo.drivers.Lka_767;
      reader.readMessage(value,proto.apollo.drivers.Lka_767.deserializeBinaryFromReader);
      msg.setLka767(value);
      break;
    case 10:
      var value = new proto.apollo.drivers.Lka_768;
      reader.readMessage(value,proto.apollo.drivers.Lka_768.deserializeBinaryFromReader);
      msg.setLka768(value);
      break;
    case 11:
      var value = new proto.apollo.drivers.Lka_769;
      reader.readMessage(value,proto.apollo.drivers.Lka_769.deserializeBinaryFromReader);
      msg.setLka769(value);
      break;
    case 12:
      var value = new proto.apollo.drivers.Reference_76a;
      reader.readMessage(value,proto.apollo.drivers.Reference_76a.deserializeBinaryFromReader);
      msg.setReference76a(value);
      break;
    case 13:
      var value = new proto.apollo.drivers.Num_76b;
      reader.readMessage(value,proto.apollo.drivers.Num_76b.deserializeBinaryFromReader);
      msg.setNum76b(value);
      break;
    case 14:
      var value = new proto.apollo.drivers.Next_76c;
      reader.readMessage(value,proto.apollo.drivers.Next_76c.deserializeBinaryFromReader);
      msg.addNext76c(value);
      break;
    case 15:
      var value = new proto.apollo.drivers.Next_76d;
      reader.readMessage(value,proto.apollo.drivers.Next_76d.deserializeBinaryFromReader);
      msg.addNext76d(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.Mobileye.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.Mobileye.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.Mobileye} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.Mobileye.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modules_common_proto_header_pb.Header.serializeBinaryToWriter
    );
  }
  f = message.getAftermarket669();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.apollo.drivers.Aftermarket_669.serializeBinaryToWriter
    );
  }
  f = message.getDetails737();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.apollo.drivers.Details_737.serializeBinaryToWriter
    );
  }
  f = message.getDetails738();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.apollo.drivers.Details_738.serializeBinaryToWriter
    );
  }
  f = message.getDetails739List();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.apollo.drivers.Details_739.serializeBinaryToWriter
    );
  }
  f = message.getDetails73aList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.apollo.drivers.Details_73a.serializeBinaryToWriter
    );
  }
  f = message.getDetails73bList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.apollo.drivers.Details_73b.serializeBinaryToWriter
    );
  }
  f = message.getLka766();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.apollo.drivers.Lka_766.serializeBinaryToWriter
    );
  }
  f = message.getLka767();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.apollo.drivers.Lka_767.serializeBinaryToWriter
    );
  }
  f = message.getLka768();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.apollo.drivers.Lka_768.serializeBinaryToWriter
    );
  }
  f = message.getLka769();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.apollo.drivers.Lka_769.serializeBinaryToWriter
    );
  }
  f = message.getReference76a();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.apollo.drivers.Reference_76a.serializeBinaryToWriter
    );
  }
  f = message.getNum76b();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.apollo.drivers.Num_76b.serializeBinaryToWriter
    );
  }
  f = message.getNext76cList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      proto.apollo.drivers.Next_76c.serializeBinaryToWriter
    );
  }
  f = message.getNext76dList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.apollo.drivers.Next_76d.serializeBinaryToWriter
    );
  }
};


/**
 * optional apollo.common.Header header = 1;
 * @return {?proto.apollo.common.Header}
 */
proto.apollo.drivers.Mobileye.prototype.getHeader = function() {
  return /** @type{?proto.apollo.common.Header} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_header_pb.Header, 1));
};


/**
 * @param {?proto.apollo.common.Header|undefined} value
 * @return {!proto.apollo.drivers.Mobileye} returns this
*/
proto.apollo.drivers.Mobileye.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.Mobileye} returns this
 */
proto.apollo.drivers.Mobileye.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Mobileye.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Aftermarket_669 aftermarket_669 = 2;
 * @return {?proto.apollo.drivers.Aftermarket_669}
 */
proto.apollo.drivers.Mobileye.prototype.getAftermarket669 = function() {
  return /** @type{?proto.apollo.drivers.Aftermarket_669} */ (
    jspb.Message.getWrapperField(this, proto.apollo.drivers.Aftermarket_669, 2));
};


/**
 * @param {?proto.apollo.drivers.Aftermarket_669|undefined} value
 * @return {!proto.apollo.drivers.Mobileye} returns this
*/
proto.apollo.drivers.Mobileye.prototype.setAftermarket669 = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.Mobileye} returns this
 */
proto.apollo.drivers.Mobileye.prototype.clearAftermarket669 = function() {
  return this.setAftermarket669(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Mobileye.prototype.hasAftermarket669 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Details_737 details_737 = 3;
 * @return {?proto.apollo.drivers.Details_737}
 */
proto.apollo.drivers.Mobileye.prototype.getDetails737 = function() {
  return /** @type{?proto.apollo.drivers.Details_737} */ (
    jspb.Message.getWrapperField(this, proto.apollo.drivers.Details_737, 3));
};


/**
 * @param {?proto.apollo.drivers.Details_737|undefined} value
 * @return {!proto.apollo.drivers.Mobileye} returns this
*/
proto.apollo.drivers.Mobileye.prototype.setDetails737 = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.Mobileye} returns this
 */
proto.apollo.drivers.Mobileye.prototype.clearDetails737 = function() {
  return this.setDetails737(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Mobileye.prototype.hasDetails737 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Details_738 details_738 = 4;
 * @return {?proto.apollo.drivers.Details_738}
 */
proto.apollo.drivers.Mobileye.prototype.getDetails738 = function() {
  return /** @type{?proto.apollo.drivers.Details_738} */ (
    jspb.Message.getWrapperField(this, proto.apollo.drivers.Details_738, 4));
};


/**
 * @param {?proto.apollo.drivers.Details_738|undefined} value
 * @return {!proto.apollo.drivers.Mobileye} returns this
*/
proto.apollo.drivers.Mobileye.prototype.setDetails738 = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.Mobileye} returns this
 */
proto.apollo.drivers.Mobileye.prototype.clearDetails738 = function() {
  return this.setDetails738(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Mobileye.prototype.hasDetails738 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated Details_739 details_739 = 5;
 * @return {!Array<!proto.apollo.drivers.Details_739>}
 */
proto.apollo.drivers.Mobileye.prototype.getDetails739List = function() {
  return /** @type{!Array<!proto.apollo.drivers.Details_739>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.drivers.Details_739, 5));
};


/**
 * @param {!Array<!proto.apollo.drivers.Details_739>} value
 * @return {!proto.apollo.drivers.Mobileye} returns this
*/
proto.apollo.drivers.Mobileye.prototype.setDetails739List = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.apollo.drivers.Details_739=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.drivers.Details_739}
 */
proto.apollo.drivers.Mobileye.prototype.addDetails739 = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.apollo.drivers.Details_739, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.drivers.Mobileye} returns this
 */
proto.apollo.drivers.Mobileye.prototype.clearDetails739List = function() {
  return this.setDetails739List([]);
};


/**
 * repeated Details_73a details_73a = 6;
 * @return {!Array<!proto.apollo.drivers.Details_73a>}
 */
proto.apollo.drivers.Mobileye.prototype.getDetails73aList = function() {
  return /** @type{!Array<!proto.apollo.drivers.Details_73a>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.drivers.Details_73a, 6));
};


/**
 * @param {!Array<!proto.apollo.drivers.Details_73a>} value
 * @return {!proto.apollo.drivers.Mobileye} returns this
*/
proto.apollo.drivers.Mobileye.prototype.setDetails73aList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.apollo.drivers.Details_73a=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.drivers.Details_73a}
 */
proto.apollo.drivers.Mobileye.prototype.addDetails73a = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.apollo.drivers.Details_73a, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.drivers.Mobileye} returns this
 */
proto.apollo.drivers.Mobileye.prototype.clearDetails73aList = function() {
  return this.setDetails73aList([]);
};


/**
 * repeated Details_73b details_73b = 7;
 * @return {!Array<!proto.apollo.drivers.Details_73b>}
 */
proto.apollo.drivers.Mobileye.prototype.getDetails73bList = function() {
  return /** @type{!Array<!proto.apollo.drivers.Details_73b>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.drivers.Details_73b, 7));
};


/**
 * @param {!Array<!proto.apollo.drivers.Details_73b>} value
 * @return {!proto.apollo.drivers.Mobileye} returns this
*/
proto.apollo.drivers.Mobileye.prototype.setDetails73bList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.apollo.drivers.Details_73b=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.drivers.Details_73b}
 */
proto.apollo.drivers.Mobileye.prototype.addDetails73b = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.apollo.drivers.Details_73b, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.drivers.Mobileye} returns this
 */
proto.apollo.drivers.Mobileye.prototype.clearDetails73bList = function() {
  return this.setDetails73bList([]);
};


/**
 * optional Lka_766 lka_766 = 8;
 * @return {?proto.apollo.drivers.Lka_766}
 */
proto.apollo.drivers.Mobileye.prototype.getLka766 = function() {
  return /** @type{?proto.apollo.drivers.Lka_766} */ (
    jspb.Message.getWrapperField(this, proto.apollo.drivers.Lka_766, 8));
};


/**
 * @param {?proto.apollo.drivers.Lka_766|undefined} value
 * @return {!proto.apollo.drivers.Mobileye} returns this
*/
proto.apollo.drivers.Mobileye.prototype.setLka766 = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.Mobileye} returns this
 */
proto.apollo.drivers.Mobileye.prototype.clearLka766 = function() {
  return this.setLka766(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Mobileye.prototype.hasLka766 = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Lka_767 lka_767 = 9;
 * @return {?proto.apollo.drivers.Lka_767}
 */
proto.apollo.drivers.Mobileye.prototype.getLka767 = function() {
  return /** @type{?proto.apollo.drivers.Lka_767} */ (
    jspb.Message.getWrapperField(this, proto.apollo.drivers.Lka_767, 9));
};


/**
 * @param {?proto.apollo.drivers.Lka_767|undefined} value
 * @return {!proto.apollo.drivers.Mobileye} returns this
*/
proto.apollo.drivers.Mobileye.prototype.setLka767 = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.Mobileye} returns this
 */
proto.apollo.drivers.Mobileye.prototype.clearLka767 = function() {
  return this.setLka767(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Mobileye.prototype.hasLka767 = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Lka_768 lka_768 = 10;
 * @return {?proto.apollo.drivers.Lka_768}
 */
proto.apollo.drivers.Mobileye.prototype.getLka768 = function() {
  return /** @type{?proto.apollo.drivers.Lka_768} */ (
    jspb.Message.getWrapperField(this, proto.apollo.drivers.Lka_768, 10));
};


/**
 * @param {?proto.apollo.drivers.Lka_768|undefined} value
 * @return {!proto.apollo.drivers.Mobileye} returns this
*/
proto.apollo.drivers.Mobileye.prototype.setLka768 = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.Mobileye} returns this
 */
proto.apollo.drivers.Mobileye.prototype.clearLka768 = function() {
  return this.setLka768(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Mobileye.prototype.hasLka768 = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Lka_769 lka_769 = 11;
 * @return {?proto.apollo.drivers.Lka_769}
 */
proto.apollo.drivers.Mobileye.prototype.getLka769 = function() {
  return /** @type{?proto.apollo.drivers.Lka_769} */ (
    jspb.Message.getWrapperField(this, proto.apollo.drivers.Lka_769, 11));
};


/**
 * @param {?proto.apollo.drivers.Lka_769|undefined} value
 * @return {!proto.apollo.drivers.Mobileye} returns this
*/
proto.apollo.drivers.Mobileye.prototype.setLka769 = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.Mobileye} returns this
 */
proto.apollo.drivers.Mobileye.prototype.clearLka769 = function() {
  return this.setLka769(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Mobileye.prototype.hasLka769 = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Reference_76a reference_76a = 12;
 * @return {?proto.apollo.drivers.Reference_76a}
 */
proto.apollo.drivers.Mobileye.prototype.getReference76a = function() {
  return /** @type{?proto.apollo.drivers.Reference_76a} */ (
    jspb.Message.getWrapperField(this, proto.apollo.drivers.Reference_76a, 12));
};


/**
 * @param {?proto.apollo.drivers.Reference_76a|undefined} value
 * @return {!proto.apollo.drivers.Mobileye} returns this
*/
proto.apollo.drivers.Mobileye.prototype.setReference76a = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.Mobileye} returns this
 */
proto.apollo.drivers.Mobileye.prototype.clearReference76a = function() {
  return this.setReference76a(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Mobileye.prototype.hasReference76a = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Num_76b num_76b = 13;
 * @return {?proto.apollo.drivers.Num_76b}
 */
proto.apollo.drivers.Mobileye.prototype.getNum76b = function() {
  return /** @type{?proto.apollo.drivers.Num_76b} */ (
    jspb.Message.getWrapperField(this, proto.apollo.drivers.Num_76b, 13));
};


/**
 * @param {?proto.apollo.drivers.Num_76b|undefined} value
 * @return {!proto.apollo.drivers.Mobileye} returns this
*/
proto.apollo.drivers.Mobileye.prototype.setNum76b = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.Mobileye} returns this
 */
proto.apollo.drivers.Mobileye.prototype.clearNum76b = function() {
  return this.setNum76b(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.Mobileye.prototype.hasNum76b = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * repeated Next_76c next_76c = 14;
 * @return {!Array<!proto.apollo.drivers.Next_76c>}
 */
proto.apollo.drivers.Mobileye.prototype.getNext76cList = function() {
  return /** @type{!Array<!proto.apollo.drivers.Next_76c>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.drivers.Next_76c, 14));
};


/**
 * @param {!Array<!proto.apollo.drivers.Next_76c>} value
 * @return {!proto.apollo.drivers.Mobileye} returns this
*/
proto.apollo.drivers.Mobileye.prototype.setNext76cList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.apollo.drivers.Next_76c=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.drivers.Next_76c}
 */
proto.apollo.drivers.Mobileye.prototype.addNext76c = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.apollo.drivers.Next_76c, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.drivers.Mobileye} returns this
 */
proto.apollo.drivers.Mobileye.prototype.clearNext76cList = function() {
  return this.setNext76cList([]);
};


/**
 * repeated Next_76d next_76d = 15;
 * @return {!Array<!proto.apollo.drivers.Next_76d>}
 */
proto.apollo.drivers.Mobileye.prototype.getNext76dList = function() {
  return /** @type{!Array<!proto.apollo.drivers.Next_76d>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.drivers.Next_76d, 15));
};


/**
 * @param {!Array<!proto.apollo.drivers.Next_76d>} value
 * @return {!proto.apollo.drivers.Mobileye} returns this
*/
proto.apollo.drivers.Mobileye.prototype.setNext76dList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.apollo.drivers.Next_76d=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.drivers.Next_76d}
 */
proto.apollo.drivers.Mobileye.prototype.addNext76d = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.apollo.drivers.Next_76d, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.drivers.Mobileye} returns this
 */
proto.apollo.drivers.Mobileye.prototype.clearNext76dList = function() {
  return this.setNext76dList([]);
};


goog.object.extend(exports, proto.apollo.drivers);
