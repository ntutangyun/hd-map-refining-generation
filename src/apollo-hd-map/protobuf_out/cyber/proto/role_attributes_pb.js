// source: cyber/proto/role_attributes.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var cyber_proto_qos_profile_pb = require('../../cyber/proto/qos_profile_pb.js');
goog.object.extend(proto, cyber_proto_qos_profile_pb);
goog.exportSymbol('proto.apollo.cyber.proto.RoleAttributes', null, global);
goog.exportSymbol('proto.apollo.cyber.proto.SocketAddr', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.cyber.proto.SocketAddr = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.cyber.proto.SocketAddr, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.cyber.proto.SocketAddr.displayName = 'proto.apollo.cyber.proto.SocketAddr';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.cyber.proto.RoleAttributes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.cyber.proto.RoleAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.cyber.proto.RoleAttributes.displayName = 'proto.apollo.cyber.proto.RoleAttributes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.cyber.proto.SocketAddr.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.cyber.proto.SocketAddr.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.cyber.proto.SocketAddr} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.cyber.proto.SocketAddr.toObject = function(includeInstance, msg) {
  var f, obj = {
    ip: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of SocketAddr as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.cyber.proto.SocketAddr.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.ip;

  /** @type {?|undefined} */
  this.port;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.cyber.proto.SocketAddr.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.cyber.proto.SocketAddr}
 */
proto.apollo.cyber.proto.SocketAddr.fromObject = function(obj) {
  var msg = new proto.apollo.cyber.proto.SocketAddr();
  obj.ip != null && jspb.Message.setField(msg, 1, obj.ip);
  obj.port != null && jspb.Message.setField(msg, 2, obj.port);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.cyber.proto.SocketAddr}
 */
proto.apollo.cyber.proto.SocketAddr.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.cyber.proto.SocketAddr;
  return proto.apollo.cyber.proto.SocketAddr.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.cyber.proto.SocketAddr} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.cyber.proto.SocketAddr}
 */
proto.apollo.cyber.proto.SocketAddr.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.cyber.proto.SocketAddr.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.cyber.proto.SocketAddr.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.cyber.proto.SocketAddr} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.cyber.proto.SocketAddr.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string ip = 1;
 * @return {string}
 */
proto.apollo.cyber.proto.SocketAddr.prototype.getIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.cyber.proto.SocketAddr} returns this
 */
proto.apollo.cyber.proto.SocketAddr.prototype.setIp = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.SocketAddr} returns this
 */
proto.apollo.cyber.proto.SocketAddr.prototype.clearIp = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.SocketAddr.prototype.hasIp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 port = 2;
 * @return {number}
 */
proto.apollo.cyber.proto.SocketAddr.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.cyber.proto.SocketAddr} returns this
 */
proto.apollo.cyber.proto.SocketAddr.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.SocketAddr} returns this
 */
proto.apollo.cyber.proto.SocketAddr.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.SocketAddr.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.cyber.proto.RoleAttributes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.cyber.proto.RoleAttributes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.cyber.proto.RoleAttributes.toObject = function(includeInstance, msg) {
  var f, obj = {
    hostName: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    hostIp: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    processId: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    nodeName: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    nodeId: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    channelName: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    channelId: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    messageType: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    protoDesc: msg.getProtoDesc_asB64(),
    id: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    qosProfile: (f = msg.getQosProfile()) && cyber_proto_qos_profile_pb.QosProfile.toObject(includeInstance, f),
    socketAddr: (f = msg.getSocketAddr()) && proto.apollo.cyber.proto.SocketAddr.toObject(includeInstance, f),
    serviceName: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    serviceId: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of RoleAttributes as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.cyber.proto.RoleAttributes.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.hostName;

  /** @type {?|undefined} */
  this.hostIp;

  /** @type {?|undefined} */
  this.processId;

  /** @type {?|undefined} */
  this.nodeName;

  /** @type {?|undefined} */
  this.nodeId;

  /** @type {?|undefined} */
  this.channelName;

  /** @type {?|undefined} */
  this.channelId;

  /** @type {?|undefined} */
  this.messageType;

  /** @type {?|undefined} */
  this.protoDesc;

  /** @type {?|undefined} */
  this.id;

  /** @type {?|undefined} */
  this.qosProfile;

  /** @type {?|undefined} */
  this.socketAddr;

  /** @type {?|undefined} */
  this.serviceName;

  /** @type {?|undefined} */
  this.serviceId;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.cyber.proto.RoleAttributes.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.cyber.proto.RoleAttributes}
 */
proto.apollo.cyber.proto.RoleAttributes.fromObject = function(obj) {
  var msg = new proto.apollo.cyber.proto.RoleAttributes();
  obj.hostName != null && jspb.Message.setField(msg, 1, obj.hostName);
  obj.hostIp != null && jspb.Message.setField(msg, 2, obj.hostIp);
  obj.processId != null && jspb.Message.setField(msg, 3, obj.processId);
  obj.nodeName != null && jspb.Message.setField(msg, 4, obj.nodeName);
  obj.nodeId != null && jspb.Message.setField(msg, 5, obj.nodeId);
  obj.channelName != null && jspb.Message.setField(msg, 6, obj.channelName);
  obj.channelId != null && jspb.Message.setField(msg, 7, obj.channelId);
  obj.messageType != null && jspb.Message.setField(msg, 8, obj.messageType);
  obj.protoDesc != null && jspb.Message.setField(msg, 9, obj.protoDesc);
  obj.id != null && jspb.Message.setField(msg, 10, obj.id);
  obj.qosProfile && jspb.Message.setWrapperField(
      msg, 11, cyber_proto_qos_profile_pb.QosProfile.fromObject(obj.qosProfile));
  obj.socketAddr && jspb.Message.setWrapperField(
      msg, 12, proto.apollo.cyber.proto.SocketAddr.fromObject(obj.socketAddr));
  obj.serviceName != null && jspb.Message.setField(msg, 13, obj.serviceName);
  obj.serviceId != null && jspb.Message.setField(msg, 14, obj.serviceId);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.cyber.proto.RoleAttributes}
 */
proto.apollo.cyber.proto.RoleAttributes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.cyber.proto.RoleAttributes;
  return proto.apollo.cyber.proto.RoleAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.cyber.proto.RoleAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.cyber.proto.RoleAttributes}
 */
proto.apollo.cyber.proto.RoleAttributes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostIp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProcessId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNodeId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelName(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChannelId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageType(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProtoDesc(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 11:
      var value = new cyber_proto_qos_profile_pb.QosProfile;
      reader.readMessage(value,cyber_proto_qos_profile_pb.QosProfile.deserializeBinaryFromReader);
      msg.setQosProfile(value);
      break;
    case 12:
      var value = new proto.apollo.cyber.proto.SocketAddr;
      reader.readMessage(value,proto.apollo.cyber.proto.SocketAddr.deserializeBinaryFromReader);
      msg.setSocketAddr(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceName(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setServiceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.cyber.proto.RoleAttributes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.cyber.proto.RoleAttributes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.cyber.proto.RoleAttributes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getQosProfile();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      cyber_proto_qos_profile_pb.QosProfile.serializeBinaryToWriter
    );
  }
  f = message.getSocketAddr();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.apollo.cyber.proto.SocketAddr.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint64(
      14,
      f
    );
  }
};


/**
 * optional string host_name = 1;
 * @return {string}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.getHostName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.setHostName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.clearHostName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.hasHostName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string host_ip = 2;
 * @return {string}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.getHostIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.setHostIp = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.clearHostIp = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.hasHostIp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 process_id = 3;
 * @return {number}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.getProcessId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.setProcessId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.clearProcessId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.hasProcessId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string node_name = 4;
 * @return {string}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.getNodeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.setNodeName = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.clearNodeName = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.hasNodeName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 node_id = 5;
 * @return {number}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.getNodeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.setNodeId = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.clearNodeId = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.hasNodeId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string channel_name = 6;
 * @return {string}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.getChannelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.setChannelName = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.clearChannelName = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.hasChannelName = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 channel_id = 7;
 * @return {number}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.getChannelId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.setChannelId = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.clearChannelId = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.hasChannelId = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string message_type = 8;
 * @return {string}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.getMessageType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.setMessageType = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.clearMessageType = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.hasMessageType = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bytes proto_desc = 9;
 * @return {!(string|Uint8Array)}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.getProtoDesc = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes proto_desc = 9;
 * This is a type-conversion wrapper around `getProtoDesc()`
 * @return {string}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.getProtoDesc_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProtoDesc()));
};


/**
 * optional bytes proto_desc = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProtoDesc()`
 * @return {!Uint8Array}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.getProtoDesc_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProtoDesc()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.setProtoDesc = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.clearProtoDesc = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.hasProtoDesc = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint64 id = 10;
 * @return {number}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.setId = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.clearId = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.hasId = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional QosProfile qos_profile = 11;
 * @return {?proto.apollo.cyber.proto.QosProfile}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.getQosProfile = function() {
  return /** @type{?proto.apollo.cyber.proto.QosProfile} */ (
    jspb.Message.getWrapperField(this, cyber_proto_qos_profile_pb.QosProfile, 11));
};


/**
 * @param {?proto.apollo.cyber.proto.QosProfile|undefined} value
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
*/
proto.apollo.cyber.proto.RoleAttributes.prototype.setQosProfile = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.clearQosProfile = function() {
  return this.setQosProfile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.hasQosProfile = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional SocketAddr socket_addr = 12;
 * @return {?proto.apollo.cyber.proto.SocketAddr}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.getSocketAddr = function() {
  return /** @type{?proto.apollo.cyber.proto.SocketAddr} */ (
    jspb.Message.getWrapperField(this, proto.apollo.cyber.proto.SocketAddr, 12));
};


/**
 * @param {?proto.apollo.cyber.proto.SocketAddr|undefined} value
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
*/
proto.apollo.cyber.proto.RoleAttributes.prototype.setSocketAddr = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.clearSocketAddr = function() {
  return this.setSocketAddr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.hasSocketAddr = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string service_name = 13;
 * @return {string}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.getServiceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.setServiceName = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.clearServiceName = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.hasServiceName = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint64 service_id = 14;
 * @return {number}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.getServiceId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.setServiceId = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.RoleAttributes} returns this
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.clearServiceId = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.RoleAttributes.prototype.hasServiceId = function() {
  return jspb.Message.getField(this, 14) != null;
};


goog.object.extend(exports, proto.apollo.cyber.proto);
