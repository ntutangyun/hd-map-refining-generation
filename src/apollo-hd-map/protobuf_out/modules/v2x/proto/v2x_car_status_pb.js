// source: modules/v2x/proto/v2x_car_status.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var modules_localization_proto_localization_pb = require('../../../modules/localization/proto/localization_pb.js');
goog.object.extend(proto, modules_localization_proto_localization_pb);
var modules_canbus_proto_chassis_detail_pb = require('../../../modules/canbus/proto/chassis_detail_pb.js');
goog.object.extend(proto, modules_canbus_proto_chassis_detail_pb);
var modules_v2x_proto_v2x_junction_pb = require('../../../modules/v2x/proto/v2x_junction_pb.js');
goog.object.extend(proto, modules_v2x_proto_v2x_junction_pb);
goog.exportSymbol('proto.apollo.v2x.CarStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.v2x.CarStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.v2x.CarStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.v2x.CarStatus.displayName = 'proto.apollo.v2x.CarStatus';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.v2x.CarStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.v2x.CarStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.v2x.CarStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.v2x.CarStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    localization: (f = msg.getLocalization()) && modules_localization_proto_localization_pb.LocalizationEstimate.toObject(includeInstance, f),
    chassisDetail: (f = msg.getChassisDetail()) && modules_canbus_proto_chassis_detail_pb.ChassisDetail.toObject(includeInstance, f),
    junction: (f = msg.getJunction()) && modules_v2x_proto_v2x_junction_pb.Junction.toObject(includeInstance, f),
    rsuId: (f = msg.getRsuId()) && modules_v2x_proto_v2x_junction_pb.Id.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of CarStatus as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.v2x.CarStatus.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.localization;

  /** @type {?|undefined} */
  this.chassisDetail;

  /** @type {?|undefined} */
  this.junction;

  /** @type {?|undefined} */
  this.rsuId;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.v2x.CarStatus.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.v2x.CarStatus}
 */
proto.apollo.v2x.CarStatus.fromObject = function(obj) {
  var msg = new proto.apollo.v2x.CarStatus();
  obj.localization && jspb.Message.setWrapperField(
      msg, 1, modules_localization_proto_localization_pb.LocalizationEstimate.fromObject(obj.localization));
  obj.chassisDetail && jspb.Message.setWrapperField(
      msg, 2, modules_canbus_proto_chassis_detail_pb.ChassisDetail.fromObject(obj.chassisDetail));
  obj.junction && jspb.Message.setWrapperField(
      msg, 3, modules_v2x_proto_v2x_junction_pb.Junction.fromObject(obj.junction));
  obj.rsuId && jspb.Message.setWrapperField(
      msg, 4, modules_v2x_proto_v2x_junction_pb.Id.fromObject(obj.rsuId));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.v2x.CarStatus}
 */
proto.apollo.v2x.CarStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.v2x.CarStatus;
  return proto.apollo.v2x.CarStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.v2x.CarStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.v2x.CarStatus}
 */
proto.apollo.v2x.CarStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modules_localization_proto_localization_pb.LocalizationEstimate;
      reader.readMessage(value,modules_localization_proto_localization_pb.LocalizationEstimate.deserializeBinaryFromReader);
      msg.setLocalization(value);
      break;
    case 2:
      var value = new modules_canbus_proto_chassis_detail_pb.ChassisDetail;
      reader.readMessage(value,modules_canbus_proto_chassis_detail_pb.ChassisDetail.deserializeBinaryFromReader);
      msg.setChassisDetail(value);
      break;
    case 3:
      var value = new modules_v2x_proto_v2x_junction_pb.Junction;
      reader.readMessage(value,modules_v2x_proto_v2x_junction_pb.Junction.deserializeBinaryFromReader);
      msg.setJunction(value);
      break;
    case 4:
      var value = new modules_v2x_proto_v2x_junction_pb.Id;
      reader.readMessage(value,modules_v2x_proto_v2x_junction_pb.Id.deserializeBinaryFromReader);
      msg.setRsuId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.v2x.CarStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.v2x.CarStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.v2x.CarStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.v2x.CarStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocalization();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modules_localization_proto_localization_pb.LocalizationEstimate.serializeBinaryToWriter
    );
  }
  f = message.getChassisDetail();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      modules_canbus_proto_chassis_detail_pb.ChassisDetail.serializeBinaryToWriter
    );
  }
  f = message.getJunction();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      modules_v2x_proto_v2x_junction_pb.Junction.serializeBinaryToWriter
    );
  }
  f = message.getRsuId();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      modules_v2x_proto_v2x_junction_pb.Id.serializeBinaryToWriter
    );
  }
};


/**
 * optional apollo.localization.LocalizationEstimate localization = 1;
 * @return {?proto.apollo.localization.LocalizationEstimate}
 */
proto.apollo.v2x.CarStatus.prototype.getLocalization = function() {
  return /** @type{?proto.apollo.localization.LocalizationEstimate} */ (
    jspb.Message.getWrapperField(this, modules_localization_proto_localization_pb.LocalizationEstimate, 1));
};


/**
 * @param {?proto.apollo.localization.LocalizationEstimate|undefined} value
 * @return {!proto.apollo.v2x.CarStatus} returns this
*/
proto.apollo.v2x.CarStatus.prototype.setLocalization = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.v2x.CarStatus} returns this
 */
proto.apollo.v2x.CarStatus.prototype.clearLocalization = function() {
  return this.setLocalization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.CarStatus.prototype.hasLocalization = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional apollo.canbus.ChassisDetail chassis_detail = 2;
 * @return {?proto.apollo.canbus.ChassisDetail}
 */
proto.apollo.v2x.CarStatus.prototype.getChassisDetail = function() {
  return /** @type{?proto.apollo.canbus.ChassisDetail} */ (
    jspb.Message.getWrapperField(this, modules_canbus_proto_chassis_detail_pb.ChassisDetail, 2));
};


/**
 * @param {?proto.apollo.canbus.ChassisDetail|undefined} value
 * @return {!proto.apollo.v2x.CarStatus} returns this
*/
proto.apollo.v2x.CarStatus.prototype.setChassisDetail = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.v2x.CarStatus} returns this
 */
proto.apollo.v2x.CarStatus.prototype.clearChassisDetail = function() {
  return this.setChassisDetail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.CarStatus.prototype.hasChassisDetail = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Junction junction = 3;
 * @return {?proto.apollo.v2x.Junction}
 */
proto.apollo.v2x.CarStatus.prototype.getJunction = function() {
  return /** @type{?proto.apollo.v2x.Junction} */ (
    jspb.Message.getWrapperField(this, modules_v2x_proto_v2x_junction_pb.Junction, 3));
};


/**
 * @param {?proto.apollo.v2x.Junction|undefined} value
 * @return {!proto.apollo.v2x.CarStatus} returns this
*/
proto.apollo.v2x.CarStatus.prototype.setJunction = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.v2x.CarStatus} returns this
 */
proto.apollo.v2x.CarStatus.prototype.clearJunction = function() {
  return this.setJunction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.CarStatus.prototype.hasJunction = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Id rsu_id = 4;
 * @return {?proto.apollo.v2x.Id}
 */
proto.apollo.v2x.CarStatus.prototype.getRsuId = function() {
  return /** @type{?proto.apollo.v2x.Id} */ (
    jspb.Message.getWrapperField(this, modules_v2x_proto_v2x_junction_pb.Id, 4));
};


/**
 * @param {?proto.apollo.v2x.Id|undefined} value
 * @return {!proto.apollo.v2x.CarStatus} returns this
*/
proto.apollo.v2x.CarStatus.prototype.setRsuId = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.v2x.CarStatus} returns this
 */
proto.apollo.v2x.CarStatus.prototype.clearRsuId = function() {
  return this.setRsuId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.CarStatus.prototype.hasRsuId = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.apollo.v2x);
