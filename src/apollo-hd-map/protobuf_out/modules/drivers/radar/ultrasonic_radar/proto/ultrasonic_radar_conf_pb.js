// source: modules/drivers/radar/ultrasonic_radar/proto/ultrasonic_radar_conf.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var modules_drivers_canbus_proto_can_card_parameter_pb = require('../../../../../modules/drivers/canbus/proto/can_card_parameter_pb.js');
goog.object.extend(proto, modules_drivers_canbus_proto_can_card_parameter_pb);
goog.exportSymbol('proto.apollo.drivers.ultrasonic_radar.CanConf', null, global);
goog.exportSymbol('proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.ultrasonic_radar.CanConf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.ultrasonic_radar.CanConf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.ultrasonic_radar.CanConf.displayName = 'proto.apollo.drivers.ultrasonic_radar.CanConf';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.displayName = 'proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.ultrasonic_radar.CanConf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.ultrasonic_radar.CanConf} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.toObject = function(includeInstance, msg) {
  var f, obj = {
    canCardParameter: (f = msg.getCanCardParameter()) && modules_drivers_canbus_proto_can_card_parameter_pb.CANCardParameter.toObject(includeInstance, f),
    enableDebugMode: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    enableReceiverLog: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    enableSenderLog: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of CanConf as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.canCardParameter;

  /** @type {?|undefined} */
  this.enableDebugMode;

  /** @type {?|undefined} */
  this.enableReceiverLog;

  /** @type {?|undefined} */
  this.enableSenderLog;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.ultrasonic_radar.CanConf.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.ultrasonic_radar.CanConf}
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.ultrasonic_radar.CanConf();
  obj.canCardParameter && jspb.Message.setWrapperField(
      msg, 1, modules_drivers_canbus_proto_can_card_parameter_pb.CANCardParameter.fromObject(obj.canCardParameter));
  obj.enableDebugMode != null && jspb.Message.setField(msg, 2, obj.enableDebugMode);
  obj.enableReceiverLog != null && jspb.Message.setField(msg, 3, obj.enableReceiverLog);
  obj.enableSenderLog != null && jspb.Message.setField(msg, 4, obj.enableSenderLog);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.ultrasonic_radar.CanConf}
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.ultrasonic_radar.CanConf;
  return proto.apollo.drivers.ultrasonic_radar.CanConf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.ultrasonic_radar.CanConf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.ultrasonic_radar.CanConf}
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modules_drivers_canbus_proto_can_card_parameter_pb.CANCardParameter;
      reader.readMessage(value,modules_drivers_canbus_proto_can_card_parameter_pb.CANCardParameter.deserializeBinaryFromReader);
      msg.setCanCardParameter(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableDebugMode(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableReceiverLog(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableSenderLog(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.ultrasonic_radar.CanConf.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.ultrasonic_radar.CanConf} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCanCardParameter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modules_drivers_canbus_proto_can_card_parameter_pb.CANCardParameter.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional apollo.drivers.canbus.CANCardParameter can_card_parameter = 1;
 * @return {?proto.apollo.drivers.canbus.CANCardParameter}
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.prototype.getCanCardParameter = function() {
  return /** @type{?proto.apollo.drivers.canbus.CANCardParameter} */ (
    jspb.Message.getWrapperField(this, modules_drivers_canbus_proto_can_card_parameter_pb.CANCardParameter, 1));
};


/**
 * @param {?proto.apollo.drivers.canbus.CANCardParameter|undefined} value
 * @return {!proto.apollo.drivers.ultrasonic_radar.CanConf} returns this
*/
proto.apollo.drivers.ultrasonic_radar.CanConf.prototype.setCanCardParameter = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.ultrasonic_radar.CanConf} returns this
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.prototype.clearCanCardParameter = function() {
  return this.setCanCardParameter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.prototype.hasCanCardParameter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool enable_debug_mode = 2;
 * @return {boolean}
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.prototype.getEnableDebugMode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.ultrasonic_radar.CanConf} returns this
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.prototype.setEnableDebugMode = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.ultrasonic_radar.CanConf} returns this
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.prototype.clearEnableDebugMode = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.prototype.hasEnableDebugMode = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool enable_receiver_log = 3;
 * @return {boolean}
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.prototype.getEnableReceiverLog = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.ultrasonic_radar.CanConf} returns this
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.prototype.setEnableReceiverLog = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.ultrasonic_radar.CanConf} returns this
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.prototype.clearEnableReceiverLog = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.prototype.hasEnableReceiverLog = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool enable_sender_log = 4;
 * @return {boolean}
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.prototype.getEnableSenderLog = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.drivers.ultrasonic_radar.CanConf} returns this
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.prototype.setEnableSenderLog = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.ultrasonic_radar.CanConf} returns this
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.prototype.clearEnableSenderLog = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.ultrasonic_radar.CanConf.prototype.hasEnableSenderLog = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.toObject = function(includeInstance, msg) {
  var f, obj = {
    canConf: (f = msg.getCanConf()) && proto.apollo.drivers.ultrasonic_radar.CanConf.toObject(includeInstance, f),
    entranceNum: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of UltrasonicRadarConf as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.canConf;

  /** @type {?|undefined} */
  this.entranceNum;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf}
 */
proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf();
  obj.canConf && jspb.Message.setWrapperField(
      msg, 1, proto.apollo.drivers.ultrasonic_radar.CanConf.fromObject(obj.canConf));
  obj.entranceNum != null && jspb.Message.setField(msg, 2, obj.entranceNum);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf}
 */
proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf;
  return proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf}
 */
proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.apollo.drivers.ultrasonic_radar.CanConf;
      reader.readMessage(value,proto.apollo.drivers.ultrasonic_radar.CanConf.deserializeBinaryFromReader);
      msg.setCanConf(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEntranceNum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCanConf();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.apollo.drivers.ultrasonic_radar.CanConf.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional CanConf can_conf = 1;
 * @return {?proto.apollo.drivers.ultrasonic_radar.CanConf}
 */
proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.prototype.getCanConf = function() {
  return /** @type{?proto.apollo.drivers.ultrasonic_radar.CanConf} */ (
    jspb.Message.getWrapperField(this, proto.apollo.drivers.ultrasonic_radar.CanConf, 1));
};


/**
 * @param {?proto.apollo.drivers.ultrasonic_radar.CanConf|undefined} value
 * @return {!proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf} returns this
*/
proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.prototype.setCanConf = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf} returns this
 */
proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.prototype.clearCanConf = function() {
  return this.setCanConf(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.prototype.hasCanConf = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 entrance_num = 2;
 * @return {number}
 */
proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.prototype.getEntranceNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf} returns this
 */
proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.prototype.setEntranceNum = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf} returns this
 */
proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.prototype.clearEntranceNum = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.prototype.hasEntranceNum = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.apollo.drivers.ultrasonic_radar);
