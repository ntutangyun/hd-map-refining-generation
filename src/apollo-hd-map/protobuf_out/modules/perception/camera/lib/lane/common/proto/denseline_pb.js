// source: modules/perception/camera/lib/lane/common/proto/denseline.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.apollo.perception.camera.denseline.DenselineParam', null, global);
goog.exportSymbol('proto.apollo.perception.camera.denseline.ModelParam', null, global);
goog.exportSymbol('proto.apollo.perception.camera.denseline.NetworkParam', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.perception.camera.denseline.DenselineParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.perception.camera.denseline.DenselineParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.perception.camera.denseline.DenselineParam.displayName = 'proto.apollo.perception.camera.denseline.DenselineParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.perception.camera.denseline.ModelParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.perception.camera.denseline.ModelParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.perception.camera.denseline.ModelParam.displayName = 'proto.apollo.perception.camera.denseline.ModelParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.perception.camera.denseline.NetworkParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.perception.camera.denseline.NetworkParam.repeatedFields_, null);
};
goog.inherits(proto.apollo.perception.camera.denseline.NetworkParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.perception.camera.denseline.NetworkParam.displayName = 'proto.apollo.perception.camera.denseline.NetworkParam';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.perception.camera.denseline.DenselineParam.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.perception.camera.denseline.DenselineParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.perception.camera.denseline.DenselineParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.denseline.DenselineParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelParam: (f = msg.getModelParam()) && proto.apollo.perception.camera.denseline.ModelParam.toObject(includeInstance, f),
    netParam: (f = msg.getNetParam()) && proto.apollo.perception.camera.denseline.NetworkParam.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of DenselineParam as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.perception.camera.denseline.DenselineParam.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.modelParam;

  /** @type {?|undefined} */
  this.netParam;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.perception.camera.denseline.DenselineParam.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.perception.camera.denseline.DenselineParam}
 */
proto.apollo.perception.camera.denseline.DenselineParam.fromObject = function(obj) {
  var msg = new proto.apollo.perception.camera.denseline.DenselineParam();
  obj.modelParam && jspb.Message.setWrapperField(
      msg, 1, proto.apollo.perception.camera.denseline.ModelParam.fromObject(obj.modelParam));
  obj.netParam && jspb.Message.setWrapperField(
      msg, 2, proto.apollo.perception.camera.denseline.NetworkParam.fromObject(obj.netParam));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.perception.camera.denseline.DenselineParam}
 */
proto.apollo.perception.camera.denseline.DenselineParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.perception.camera.denseline.DenselineParam;
  return proto.apollo.perception.camera.denseline.DenselineParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.perception.camera.denseline.DenselineParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.perception.camera.denseline.DenselineParam}
 */
proto.apollo.perception.camera.denseline.DenselineParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.apollo.perception.camera.denseline.ModelParam;
      reader.readMessage(value,proto.apollo.perception.camera.denseline.ModelParam.deserializeBinaryFromReader);
      msg.setModelParam(value);
      break;
    case 2:
      var value = new proto.apollo.perception.camera.denseline.NetworkParam;
      reader.readMessage(value,proto.apollo.perception.camera.denseline.NetworkParam.deserializeBinaryFromReader);
      msg.setNetParam(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.perception.camera.denseline.DenselineParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.perception.camera.denseline.DenselineParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.perception.camera.denseline.DenselineParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.denseline.DenselineParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelParam();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.apollo.perception.camera.denseline.ModelParam.serializeBinaryToWriter
    );
  }
  f = message.getNetParam();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.apollo.perception.camera.denseline.NetworkParam.serializeBinaryToWriter
    );
  }
};


/**
 * optional ModelParam model_param = 1;
 * @return {?proto.apollo.perception.camera.denseline.ModelParam}
 */
proto.apollo.perception.camera.denseline.DenselineParam.prototype.getModelParam = function() {
  return /** @type{?proto.apollo.perception.camera.denseline.ModelParam} */ (
    jspb.Message.getWrapperField(this, proto.apollo.perception.camera.denseline.ModelParam, 1));
};


/**
 * @param {?proto.apollo.perception.camera.denseline.ModelParam|undefined} value
 * @return {!proto.apollo.perception.camera.denseline.DenselineParam} returns this
*/
proto.apollo.perception.camera.denseline.DenselineParam.prototype.setModelParam = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.perception.camera.denseline.DenselineParam} returns this
 */
proto.apollo.perception.camera.denseline.DenselineParam.prototype.clearModelParam = function() {
  return this.setModelParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.denseline.DenselineParam.prototype.hasModelParam = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NetworkParam net_param = 2;
 * @return {?proto.apollo.perception.camera.denseline.NetworkParam}
 */
proto.apollo.perception.camera.denseline.DenselineParam.prototype.getNetParam = function() {
  return /** @type{?proto.apollo.perception.camera.denseline.NetworkParam} */ (
    jspb.Message.getWrapperField(this, proto.apollo.perception.camera.denseline.NetworkParam, 2));
};


/**
 * @param {?proto.apollo.perception.camera.denseline.NetworkParam|undefined} value
 * @return {!proto.apollo.perception.camera.denseline.DenselineParam} returns this
*/
proto.apollo.perception.camera.denseline.DenselineParam.prototype.setNetParam = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.perception.camera.denseline.DenselineParam} returns this
 */
proto.apollo.perception.camera.denseline.DenselineParam.prototype.clearNetParam = function() {
  return this.setNetParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.denseline.DenselineParam.prototype.hasNetParam = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.perception.camera.denseline.ModelParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.perception.camera.denseline.ModelParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.denseline.ModelParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelName: jspb.Message.getFieldWithDefault(msg, 1, "denseline"),
    protoFile: jspb.Message.getFieldWithDefault(msg, 2, "caffe.pt"),
    weightFile: jspb.Message.getFieldWithDefault(msg, 3, "caffe.model"),
    resizeScale: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 1.0),
    inputOffsetY: jspb.Message.getFieldWithDefault(msg, 5, 0),
    inputOffsetX: jspb.Message.getFieldWithDefault(msg, 6, 0),
    cropHeight: jspb.Message.getFieldWithDefault(msg, 7, 512),
    cropWidth: jspb.Message.getFieldWithDefault(msg, 8, 512),
    meanB: jspb.Message.getFieldWithDefault(msg, 9, 95),
    meanG: jspb.Message.getFieldWithDefault(msg, 10, 99),
    meanR: jspb.Message.getFieldWithDefault(msg, 11, 96),
    isBgr: jspb.Message.getBooleanFieldWithDefault(msg, 12, true),
    modelType: jspb.Message.getFieldWithDefault(msg, 13, "RTNet")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ModelParam as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.perception.camera.denseline.ModelParam.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.modelName;

  /** @type {?|undefined} */
  this.protoFile;

  /** @type {?|undefined} */
  this.weightFile;

  /** @type {?|undefined} */
  this.resizeScale;

  /** @type {?|undefined} */
  this.inputOffsetY;

  /** @type {?|undefined} */
  this.inputOffsetX;

  /** @type {?|undefined} */
  this.cropHeight;

  /** @type {?|undefined} */
  this.cropWidth;

  /** @type {?|undefined} */
  this.meanB;

  /** @type {?|undefined} */
  this.meanG;

  /** @type {?|undefined} */
  this.meanR;

  /** @type {?|undefined} */
  this.isBgr;

  /** @type {?|undefined} */
  this.modelType;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.perception.camera.denseline.ModelParam.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.perception.camera.denseline.ModelParam}
 */
proto.apollo.perception.camera.denseline.ModelParam.fromObject = function(obj) {
  var msg = new proto.apollo.perception.camera.denseline.ModelParam();
  obj.modelName != null && jspb.Message.setField(msg, 1, obj.modelName);
  obj.protoFile != null && jspb.Message.setField(msg, 2, obj.protoFile);
  obj.weightFile != null && jspb.Message.setField(msg, 3, obj.weightFile);
  obj.resizeScale != null && jspb.Message.setField(msg, 4, obj.resizeScale);
  obj.inputOffsetY != null && jspb.Message.setField(msg, 5, obj.inputOffsetY);
  obj.inputOffsetX != null && jspb.Message.setField(msg, 6, obj.inputOffsetX);
  obj.cropHeight != null && jspb.Message.setField(msg, 7, obj.cropHeight);
  obj.cropWidth != null && jspb.Message.setField(msg, 8, obj.cropWidth);
  obj.meanB != null && jspb.Message.setField(msg, 9, obj.meanB);
  obj.meanG != null && jspb.Message.setField(msg, 10, obj.meanG);
  obj.meanR != null && jspb.Message.setField(msg, 11, obj.meanR);
  obj.isBgr != null && jspb.Message.setField(msg, 12, obj.isBgr);
  obj.modelType != null && jspb.Message.setField(msg, 13, obj.modelType);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.perception.camera.denseline.ModelParam}
 */
proto.apollo.perception.camera.denseline.ModelParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.perception.camera.denseline.ModelParam;
  return proto.apollo.perception.camera.denseline.ModelParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.perception.camera.denseline.ModelParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.perception.camera.denseline.ModelParam}
 */
proto.apollo.perception.camera.denseline.ModelParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProtoFile(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setWeightFile(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setResizeScale(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInputOffsetY(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInputOffsetX(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCropHeight(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCropWidth(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMeanB(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMeanG(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMeanR(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsBgr(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.perception.camera.denseline.ModelParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.perception.camera.denseline.ModelParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.denseline.ModelParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string model_name = 1;
 * @return {string}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.getModelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "denseline"));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.setModelName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.clearModelName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.hasModelName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string proto_file = 2;
 * @return {string}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.getProtoFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "caffe.pt"));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.setProtoFile = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.clearProtoFile = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.hasProtoFile = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string weight_file = 3;
 * @return {string}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.getWeightFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "caffe.model"));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.setWeightFile = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.clearWeightFile = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.hasWeightFile = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float resize_scale = 4;
 * @return {number}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.getResizeScale = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 1.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.setResizeScale = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.clearResizeScale = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.hasResizeScale = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 input_offset_y = 5;
 * @return {number}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.getInputOffsetY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.setInputOffsetY = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.clearInputOffsetY = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.hasInputOffsetY = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 input_offset_x = 6;
 * @return {number}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.getInputOffsetX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.setInputOffsetX = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.clearInputOffsetX = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.hasInputOffsetX = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 crop_height = 7;
 * @return {number}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.getCropHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 512));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.setCropHeight = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.clearCropHeight = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.hasCropHeight = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 crop_width = 8;
 * @return {number}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.getCropWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 512));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.setCropWidth = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.clearCropWidth = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.hasCropWidth = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 mean_b = 9;
 * @return {number}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.getMeanB = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 95));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.setMeanB = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.clearMeanB = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.hasMeanB = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 mean_g = 10;
 * @return {number}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.getMeanG = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 99));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.setMeanG = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.clearMeanG = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.hasMeanG = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 mean_r = 11;
 * @return {number}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.getMeanR = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 96));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.setMeanR = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.clearMeanR = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.hasMeanR = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool is_bgr = 12;
 * @return {boolean}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.getIsBgr = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, true));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.setIsBgr = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.clearIsBgr = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.hasIsBgr = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string model_type = 13;
 * @return {string}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.getModelType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, "RTNet"));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.setModelType = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.denseline.ModelParam} returns this
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.clearModelType = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.denseline.ModelParam.prototype.hasModelType = function() {
  return jspb.Message.getField(this, 13) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.perception.camera.denseline.NetworkParam.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.perception.camera.denseline.NetworkParam.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.perception.camera.denseline.NetworkParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.perception.camera.denseline.NetworkParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.denseline.NetworkParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    inBlob: jspb.Message.getFieldWithDefault(msg, 1, "data"),
    outBlob: jspb.Message.getFieldWithDefault(msg, 2, "conv_out"),
    internalBlobInt8List: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of NetworkParam as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.perception.camera.denseline.NetworkParam.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.inBlob;

  /** @type {?|undefined} */
  this.outBlob;

  /** @type {?|undefined} */
  this.internalBlobInt8List;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.perception.camera.denseline.NetworkParam.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.perception.camera.denseline.NetworkParam}
 */
proto.apollo.perception.camera.denseline.NetworkParam.fromObject = function(obj) {
  var msg = new proto.apollo.perception.camera.denseline.NetworkParam();
  obj.inBlob != null && jspb.Message.setField(msg, 1, obj.inBlob);
  obj.outBlob != null && jspb.Message.setField(msg, 2, obj.outBlob);
  obj.internalBlobInt8List != null && jspb.Message.setField(msg, 3, obj.internalBlobInt8List);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.perception.camera.denseline.NetworkParam}
 */
proto.apollo.perception.camera.denseline.NetworkParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.perception.camera.denseline.NetworkParam;
  return proto.apollo.perception.camera.denseline.NetworkParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.perception.camera.denseline.NetworkParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.perception.camera.denseline.NetworkParam}
 */
proto.apollo.perception.camera.denseline.NetworkParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInBlob(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutBlob(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addInternalBlobInt8(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.perception.camera.denseline.NetworkParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.perception.camera.denseline.NetworkParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.perception.camera.denseline.NetworkParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.denseline.NetworkParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInternalBlobInt8List();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string in_blob = 1;
 * @return {string}
 */
proto.apollo.perception.camera.denseline.NetworkParam.prototype.getInBlob = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "data"));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.camera.denseline.NetworkParam} returns this
 */
proto.apollo.perception.camera.denseline.NetworkParam.prototype.setInBlob = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.denseline.NetworkParam} returns this
 */
proto.apollo.perception.camera.denseline.NetworkParam.prototype.clearInBlob = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.denseline.NetworkParam.prototype.hasInBlob = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string out_blob = 2;
 * @return {string}
 */
proto.apollo.perception.camera.denseline.NetworkParam.prototype.getOutBlob = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "conv_out"));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.camera.denseline.NetworkParam} returns this
 */
proto.apollo.perception.camera.denseline.NetworkParam.prototype.setOutBlob = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.denseline.NetworkParam} returns this
 */
proto.apollo.perception.camera.denseline.NetworkParam.prototype.clearOutBlob = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.denseline.NetworkParam.prototype.hasOutBlob = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string internal_blob_int8 = 3;
 * @return {!Array<string>}
 */
proto.apollo.perception.camera.denseline.NetworkParam.prototype.getInternalBlobInt8List = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.apollo.perception.camera.denseline.NetworkParam} returns this
 */
proto.apollo.perception.camera.denseline.NetworkParam.prototype.setInternalBlobInt8List = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.apollo.perception.camera.denseline.NetworkParam} returns this
 */
proto.apollo.perception.camera.denseline.NetworkParam.prototype.addInternalBlobInt8 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.perception.camera.denseline.NetworkParam} returns this
 */
proto.apollo.perception.camera.denseline.NetworkParam.prototype.clearInternalBlobInt8List = function() {
  return this.setInternalBlobInt8List([]);
};


goog.object.extend(exports, proto.apollo.perception.camera.denseline);
