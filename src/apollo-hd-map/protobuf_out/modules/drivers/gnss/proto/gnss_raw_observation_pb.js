// source: modules/drivers/gnss/proto/gnss_raw_observation.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.apollo.drivers.gnss.BandObservation', null, global);
goog.exportSymbol('proto.apollo.drivers.gnss.EpochObservation', null, global);
goog.exportSymbol('proto.apollo.drivers.gnss.GlonassOrbit', null, global);
goog.exportSymbol('proto.apollo.drivers.gnss.GnssBandID', null, global);
goog.exportSymbol('proto.apollo.drivers.gnss.GnssEphemeris', null, global);
goog.exportSymbol('proto.apollo.drivers.gnss.GnssTimeType', null, global);
goog.exportSymbol('proto.apollo.drivers.gnss.GnssType', null, global);
goog.exportSymbol('proto.apollo.drivers.gnss.KepplerOrbit', null, global);
goog.exportSymbol('proto.apollo.drivers.gnss.PseudoType', null, global);
goog.exportSymbol('proto.apollo.drivers.gnss.SatelliteObservation', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.gnss.BandObservation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.gnss.BandObservation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.gnss.BandObservation.displayName = 'proto.apollo.drivers.gnss.BandObservation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.gnss.SatelliteObservation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.drivers.gnss.SatelliteObservation.repeatedFields_, null);
};
goog.inherits(proto.apollo.drivers.gnss.SatelliteObservation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.gnss.SatelliteObservation.displayName = 'proto.apollo.drivers.gnss.SatelliteObservation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.gnss.EpochObservation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.drivers.gnss.EpochObservation.repeatedFields_, null);
};
goog.inherits(proto.apollo.drivers.gnss.EpochObservation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.gnss.EpochObservation.displayName = 'proto.apollo.drivers.gnss.EpochObservation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.gnss.KepplerOrbit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.gnss.KepplerOrbit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.gnss.KepplerOrbit.displayName = 'proto.apollo.drivers.gnss.KepplerOrbit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.gnss.GlonassOrbit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.gnss.GlonassOrbit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.gnss.GlonassOrbit.displayName = 'proto.apollo.drivers.gnss.GlonassOrbit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.gnss.GnssEphemeris = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.gnss.GnssEphemeris, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.gnss.GnssEphemeris.displayName = 'proto.apollo.drivers.gnss.GnssEphemeris';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.gnss.BandObservation.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.gnss.BandObservation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.gnss.BandObservation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.gnss.BandObservation.toObject = function(includeInstance, msg) {
  var f, obj = {
    bandId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    frequencyValue: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    pseudoType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pseudoRange: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    carrierPhase: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    lossLockIndex: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    doppler: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    snr: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of BandObservation as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.gnss.BandObservation.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.bandId;

  /** @type {?|undefined} */
  this.frequencyValue;

  /** @type {?|undefined} */
  this.pseudoType;

  /** @type {?|undefined} */
  this.pseudoRange;

  /** @type {?|undefined} */
  this.carrierPhase;

  /** @type {?|undefined} */
  this.lossLockIndex;

  /** @type {?|undefined} */
  this.doppler;

  /** @type {?|undefined} */
  this.snr;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.gnss.BandObservation.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.gnss.BandObservation}
 */
proto.apollo.drivers.gnss.BandObservation.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.gnss.BandObservation();
  obj.bandId != null && jspb.Message.setField(msg, 1, obj.bandId);
  obj.frequencyValue != null && jspb.Message.setField(msg, 2, obj.frequencyValue);
  obj.pseudoType != null && jspb.Message.setField(msg, 3, obj.pseudoType);
  obj.pseudoRange != null && jspb.Message.setField(msg, 4, obj.pseudoRange);
  obj.carrierPhase != null && jspb.Message.setField(msg, 5, obj.carrierPhase);
  obj.lossLockIndex != null && jspb.Message.setField(msg, 6, obj.lossLockIndex);
  obj.doppler != null && jspb.Message.setField(msg, 7, obj.doppler);
  obj.snr != null && jspb.Message.setField(msg, 8, obj.snr);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.gnss.BandObservation}
 */
proto.apollo.drivers.gnss.BandObservation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.gnss.BandObservation;
  return proto.apollo.drivers.gnss.BandObservation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.gnss.BandObservation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.gnss.BandObservation}
 */
proto.apollo.drivers.gnss.BandObservation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.drivers.gnss.GnssBandID} */ (reader.readEnum());
      msg.setBandId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFrequencyValue(value);
      break;
    case 3:
      var value = /** @type {!proto.apollo.drivers.gnss.PseudoType} */ (reader.readEnum());
      msg.setPseudoType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPseudoRange(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCarrierPhase(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLossLockIndex(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDoppler(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSnr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.gnss.BandObservation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.gnss.BandObservation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.gnss.BandObservation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.gnss.BandObservation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.drivers.gnss.GnssBandID} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {!proto.apollo.drivers.gnss.PseudoType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeFloat(
      8,
      f
    );
  }
};


/**
 * optional GnssBandID band_id = 1;
 * @return {!proto.apollo.drivers.gnss.GnssBandID}
 */
proto.apollo.drivers.gnss.BandObservation.prototype.getBandId = function() {
  return /** @type {!proto.apollo.drivers.gnss.GnssBandID} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.drivers.gnss.GnssBandID} value
 * @return {!proto.apollo.drivers.gnss.BandObservation} returns this
 */
proto.apollo.drivers.gnss.BandObservation.prototype.setBandId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.BandObservation} returns this
 */
proto.apollo.drivers.gnss.BandObservation.prototype.clearBandId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.BandObservation.prototype.hasBandId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double frequency_value = 2;
 * @return {number}
 */
proto.apollo.drivers.gnss.BandObservation.prototype.getFrequencyValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.BandObservation} returns this
 */
proto.apollo.drivers.gnss.BandObservation.prototype.setFrequencyValue = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.BandObservation} returns this
 */
proto.apollo.drivers.gnss.BandObservation.prototype.clearFrequencyValue = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.BandObservation.prototype.hasFrequencyValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PseudoType pseudo_type = 3;
 * @return {!proto.apollo.drivers.gnss.PseudoType}
 */
proto.apollo.drivers.gnss.BandObservation.prototype.getPseudoType = function() {
  return /** @type {!proto.apollo.drivers.gnss.PseudoType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.apollo.drivers.gnss.PseudoType} value
 * @return {!proto.apollo.drivers.gnss.BandObservation} returns this
 */
proto.apollo.drivers.gnss.BandObservation.prototype.setPseudoType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.BandObservation} returns this
 */
proto.apollo.drivers.gnss.BandObservation.prototype.clearPseudoType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.BandObservation.prototype.hasPseudoType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double pseudo_range = 4;
 * @return {number}
 */
proto.apollo.drivers.gnss.BandObservation.prototype.getPseudoRange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.BandObservation} returns this
 */
proto.apollo.drivers.gnss.BandObservation.prototype.setPseudoRange = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.BandObservation} returns this
 */
proto.apollo.drivers.gnss.BandObservation.prototype.clearPseudoRange = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.BandObservation.prototype.hasPseudoRange = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double carrier_phase = 5;
 * @return {number}
 */
proto.apollo.drivers.gnss.BandObservation.prototype.getCarrierPhase = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.BandObservation} returns this
 */
proto.apollo.drivers.gnss.BandObservation.prototype.setCarrierPhase = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.BandObservation} returns this
 */
proto.apollo.drivers.gnss.BandObservation.prototype.clearCarrierPhase = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.BandObservation.prototype.hasCarrierPhase = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 loss_lock_index = 6;
 * @return {number}
 */
proto.apollo.drivers.gnss.BandObservation.prototype.getLossLockIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.BandObservation} returns this
 */
proto.apollo.drivers.gnss.BandObservation.prototype.setLossLockIndex = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.BandObservation} returns this
 */
proto.apollo.drivers.gnss.BandObservation.prototype.clearLossLockIndex = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.BandObservation.prototype.hasLossLockIndex = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double doppler = 7;
 * @return {number}
 */
proto.apollo.drivers.gnss.BandObservation.prototype.getDoppler = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.BandObservation} returns this
 */
proto.apollo.drivers.gnss.BandObservation.prototype.setDoppler = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.BandObservation} returns this
 */
proto.apollo.drivers.gnss.BandObservation.prototype.clearDoppler = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.BandObservation.prototype.hasDoppler = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional float snr = 8;
 * @return {number}
 */
proto.apollo.drivers.gnss.BandObservation.prototype.getSnr = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.BandObservation} returns this
 */
proto.apollo.drivers.gnss.BandObservation.prototype.setSnr = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.BandObservation} returns this
 */
proto.apollo.drivers.gnss.BandObservation.prototype.clearSnr = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.BandObservation.prototype.hasSnr = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.drivers.gnss.SatelliteObservation.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.gnss.SatelliteObservation.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.gnss.SatelliteObservation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.gnss.SatelliteObservation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.gnss.SatelliteObservation.toObject = function(includeInstance, msg) {
  var f, obj = {
    satPrn: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    satSys: jspb.Message.getFieldWithDefault(msg, 2, 1),
    bandObsNum: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    bandObsList: jspb.Message.toObjectList(msg.getBandObsList(),
    proto.apollo.drivers.gnss.BandObservation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of SatelliteObservation as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.gnss.SatelliteObservation.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.satPrn;

  /** @type {?|undefined} */
  this.satSys;

  /** @type {?|undefined} */
  this.bandObsNum;

  /** @type {?|undefined} */
  this.bandObsList;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.gnss.SatelliteObservation.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.gnss.SatelliteObservation}
 */
proto.apollo.drivers.gnss.SatelliteObservation.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.gnss.SatelliteObservation();
  obj.satPrn != null && jspb.Message.setField(msg, 1, obj.satPrn);
  obj.satSys != null && jspb.Message.setField(msg, 2, obj.satSys);
  obj.bandObsNum != null && jspb.Message.setField(msg, 3, obj.bandObsNum);
  obj.bandObsList && jspb.Message.setRepeatedWrapperField(
      msg, 4, obj.bandObsList.map(
          proto.apollo.drivers.gnss.BandObservation.fromObject));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.gnss.SatelliteObservation}
 */
proto.apollo.drivers.gnss.SatelliteObservation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.gnss.SatelliteObservation;
  return proto.apollo.drivers.gnss.SatelliteObservation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.gnss.SatelliteObservation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.gnss.SatelliteObservation}
 */
proto.apollo.drivers.gnss.SatelliteObservation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSatPrn(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.drivers.gnss.GnssType} */ (reader.readEnum());
      msg.setSatSys(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBandObsNum(value);
      break;
    case 4:
      var value = new proto.apollo.drivers.gnss.BandObservation;
      reader.readMessage(value,proto.apollo.drivers.gnss.BandObservation.deserializeBinaryFromReader);
      msg.addBandObs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.gnss.SatelliteObservation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.gnss.SatelliteObservation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.gnss.SatelliteObservation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.gnss.SatelliteObservation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {!proto.apollo.drivers.gnss.GnssType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getBandObsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.apollo.drivers.gnss.BandObservation.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 sat_prn = 1;
 * @return {number}
 */
proto.apollo.drivers.gnss.SatelliteObservation.prototype.getSatPrn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.SatelliteObservation} returns this
 */
proto.apollo.drivers.gnss.SatelliteObservation.prototype.setSatPrn = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.SatelliteObservation} returns this
 */
proto.apollo.drivers.gnss.SatelliteObservation.prototype.clearSatPrn = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.SatelliteObservation.prototype.hasSatPrn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GnssType sat_sys = 2;
 * @return {!proto.apollo.drivers.gnss.GnssType}
 */
proto.apollo.drivers.gnss.SatelliteObservation.prototype.getSatSys = function() {
  return /** @type {!proto.apollo.drivers.gnss.GnssType} */ (jspb.Message.getFieldWithDefault(this, 2, 1));
};


/**
 * @param {!proto.apollo.drivers.gnss.GnssType} value
 * @return {!proto.apollo.drivers.gnss.SatelliteObservation} returns this
 */
proto.apollo.drivers.gnss.SatelliteObservation.prototype.setSatSys = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.SatelliteObservation} returns this
 */
proto.apollo.drivers.gnss.SatelliteObservation.prototype.clearSatSys = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.SatelliteObservation.prototype.hasSatSys = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 band_obs_num = 3;
 * @return {number}
 */
proto.apollo.drivers.gnss.SatelliteObservation.prototype.getBandObsNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.SatelliteObservation} returns this
 */
proto.apollo.drivers.gnss.SatelliteObservation.prototype.setBandObsNum = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.SatelliteObservation} returns this
 */
proto.apollo.drivers.gnss.SatelliteObservation.prototype.clearBandObsNum = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.SatelliteObservation.prototype.hasBandObsNum = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated BandObservation band_obs = 4;
 * @return {!Array<!proto.apollo.drivers.gnss.BandObservation>}
 */
proto.apollo.drivers.gnss.SatelliteObservation.prototype.getBandObsList = function() {
  return /** @type{!Array<!proto.apollo.drivers.gnss.BandObservation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.drivers.gnss.BandObservation, 4));
};


/**
 * @param {!Array<!proto.apollo.drivers.gnss.BandObservation>} value
 * @return {!proto.apollo.drivers.gnss.SatelliteObservation} returns this
*/
proto.apollo.drivers.gnss.SatelliteObservation.prototype.setBandObsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.apollo.drivers.gnss.BandObservation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.drivers.gnss.BandObservation}
 */
proto.apollo.drivers.gnss.SatelliteObservation.prototype.addBandObs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.apollo.drivers.gnss.BandObservation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.drivers.gnss.SatelliteObservation} returns this
 */
proto.apollo.drivers.gnss.SatelliteObservation.prototype.clearBandObsList = function() {
  return this.setBandObsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.drivers.gnss.EpochObservation.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.gnss.EpochObservation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.gnss.EpochObservation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.gnss.EpochObservation.toObject = function(includeInstance, msg) {
  var f, obj = {
    receiverId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    gnssTimeType: jspb.Message.getFieldWithDefault(msg, 2, 1),
    gnssWeek: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    gnssSecondS: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    positionX: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    positionY: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    positionZ: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    healthFlag: jspb.Message.getFieldWithDefault(msg, 8, 0),
    satObsNum: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    satObsList: jspb.Message.toObjectList(msg.getSatObsList(),
    proto.apollo.drivers.gnss.SatelliteObservation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of EpochObservation as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.gnss.EpochObservation.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.receiverId;

  /** @type {?|undefined} */
  this.gnssTimeType;

  /** @type {?|undefined} */
  this.gnssWeek;

  /** @type {?|undefined} */
  this.gnssSecondS;

  /** @type {?|undefined} */
  this.positionX;

  /** @type {?|undefined} */
  this.positionY;

  /** @type {?|undefined} */
  this.positionZ;

  /** @type {?|undefined} */
  this.healthFlag;

  /** @type {?|undefined} */
  this.satObsNum;

  /** @type {?|undefined} */
  this.satObsList;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.gnss.EpochObservation.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.gnss.EpochObservation}
 */
proto.apollo.drivers.gnss.EpochObservation.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.gnss.EpochObservation();
  obj.receiverId != null && jspb.Message.setField(msg, 1, obj.receiverId);
  obj.gnssTimeType != null && jspb.Message.setField(msg, 2, obj.gnssTimeType);
  obj.gnssWeek != null && jspb.Message.setField(msg, 3, obj.gnssWeek);
  obj.gnssSecondS != null && jspb.Message.setField(msg, 4, obj.gnssSecondS);
  obj.positionX != null && jspb.Message.setField(msg, 5, obj.positionX);
  obj.positionY != null && jspb.Message.setField(msg, 6, obj.positionY);
  obj.positionZ != null && jspb.Message.setField(msg, 7, obj.positionZ);
  obj.healthFlag != null && jspb.Message.setField(msg, 8, obj.healthFlag);
  obj.satObsNum != null && jspb.Message.setField(msg, 9, obj.satObsNum);
  obj.satObsList && jspb.Message.setRepeatedWrapperField(
      msg, 10, obj.satObsList.map(
          proto.apollo.drivers.gnss.SatelliteObservation.fromObject));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.gnss.EpochObservation}
 */
proto.apollo.drivers.gnss.EpochObservation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.gnss.EpochObservation;
  return proto.apollo.drivers.gnss.EpochObservation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.gnss.EpochObservation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.gnss.EpochObservation}
 */
proto.apollo.drivers.gnss.EpochObservation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReceiverId(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.drivers.gnss.GnssTimeType} */ (reader.readEnum());
      msg.setGnssTimeType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGnssWeek(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGnssSecondS(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPositionX(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPositionY(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPositionZ(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHealthFlag(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSatObsNum(value);
      break;
    case 10:
      var value = new proto.apollo.drivers.gnss.SatelliteObservation;
      reader.readMessage(value,proto.apollo.drivers.gnss.SatelliteObservation.deserializeBinaryFromReader);
      msg.addSatObs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.gnss.EpochObservation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.gnss.EpochObservation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.gnss.EpochObservation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {!proto.apollo.drivers.gnss.GnssTimeType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getSatObsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.apollo.drivers.gnss.SatelliteObservation.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 receiver_id = 1;
 * @return {number}
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.getReceiverId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.EpochObservation} returns this
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.setReceiverId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.EpochObservation} returns this
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.clearReceiverId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.hasReceiverId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GnssTimeType gnss_time_type = 2;
 * @return {!proto.apollo.drivers.gnss.GnssTimeType}
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.getGnssTimeType = function() {
  return /** @type {!proto.apollo.drivers.gnss.GnssTimeType} */ (jspb.Message.getFieldWithDefault(this, 2, 1));
};


/**
 * @param {!proto.apollo.drivers.gnss.GnssTimeType} value
 * @return {!proto.apollo.drivers.gnss.EpochObservation} returns this
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.setGnssTimeType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.EpochObservation} returns this
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.clearGnssTimeType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.hasGnssTimeType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 gnss_week = 3;
 * @return {number}
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.getGnssWeek = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.EpochObservation} returns this
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.setGnssWeek = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.EpochObservation} returns this
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.clearGnssWeek = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.hasGnssWeek = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double gnss_second_s = 4;
 * @return {number}
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.getGnssSecondS = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.EpochObservation} returns this
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.setGnssSecondS = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.EpochObservation} returns this
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.clearGnssSecondS = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.hasGnssSecondS = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double position_x = 5;
 * @return {number}
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.getPositionX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.EpochObservation} returns this
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.setPositionX = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.EpochObservation} returns this
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.clearPositionX = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.hasPositionX = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double position_y = 6;
 * @return {number}
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.getPositionY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.EpochObservation} returns this
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.setPositionY = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.EpochObservation} returns this
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.clearPositionY = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.hasPositionY = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double position_z = 7;
 * @return {number}
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.getPositionZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.EpochObservation} returns this
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.setPositionZ = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.EpochObservation} returns this
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.clearPositionZ = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.hasPositionZ = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 health_flag = 8;
 * @return {number}
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.getHealthFlag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.EpochObservation} returns this
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.setHealthFlag = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.EpochObservation} returns this
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.clearHealthFlag = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.hasHealthFlag = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 sat_obs_num = 9;
 * @return {number}
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.getSatObsNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.EpochObservation} returns this
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.setSatObsNum = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.EpochObservation} returns this
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.clearSatObsNum = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.hasSatObsNum = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated SatelliteObservation sat_obs = 10;
 * @return {!Array<!proto.apollo.drivers.gnss.SatelliteObservation>}
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.getSatObsList = function() {
  return /** @type{!Array<!proto.apollo.drivers.gnss.SatelliteObservation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.drivers.gnss.SatelliteObservation, 10));
};


/**
 * @param {!Array<!proto.apollo.drivers.gnss.SatelliteObservation>} value
 * @return {!proto.apollo.drivers.gnss.EpochObservation} returns this
*/
proto.apollo.drivers.gnss.EpochObservation.prototype.setSatObsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.apollo.drivers.gnss.SatelliteObservation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.drivers.gnss.SatelliteObservation}
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.addSatObs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.apollo.drivers.gnss.SatelliteObservation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.drivers.gnss.EpochObservation} returns this
 */
proto.apollo.drivers.gnss.EpochObservation.prototype.clearSatObsList = function() {
  return this.setSatObsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.gnss.KepplerOrbit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.gnss.KepplerOrbit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.gnss.KepplerOrbit.toObject = function(includeInstance, msg) {
  var f, obj = {
    gnssType: jspb.Message.getFieldWithDefault(msg, 1, 1),
    satPrn: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    gnssTimeType: jspb.Message.getFieldWithDefault(msg, 3, 1),
    year: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    month: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    day: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    hour: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    minute: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    secondS: (f = jspb.Message.getOptionalFloatingPointField(msg, 9)) == null ? undefined : f,
    weekNum: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    reserved: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    af0: (f = jspb.Message.getOptionalFloatingPointField(msg, 12)) == null ? undefined : f,
    af1: (f = jspb.Message.getOptionalFloatingPointField(msg, 13)) == null ? undefined : f,
    af2: (f = jspb.Message.getOptionalFloatingPointField(msg, 14)) == null ? undefined : f,
    iode: (f = jspb.Message.getOptionalFloatingPointField(msg, 15)) == null ? undefined : f,
    deltan: (f = jspb.Message.getOptionalFloatingPointField(msg, 16)) == null ? undefined : f,
    m0: (f = jspb.Message.getOptionalFloatingPointField(msg, 17)) == null ? undefined : f,
    e: (f = jspb.Message.getOptionalFloatingPointField(msg, 18)) == null ? undefined : f,
    roota: (f = jspb.Message.getOptionalFloatingPointField(msg, 19)) == null ? undefined : f,
    toe: (f = jspb.Message.getOptionalFloatingPointField(msg, 20)) == null ? undefined : f,
    toc: (f = jspb.Message.getOptionalFloatingPointField(msg, 21)) == null ? undefined : f,
    cic: (f = jspb.Message.getOptionalFloatingPointField(msg, 22)) == null ? undefined : f,
    crc: (f = jspb.Message.getOptionalFloatingPointField(msg, 23)) == null ? undefined : f,
    cis: (f = jspb.Message.getOptionalFloatingPointField(msg, 24)) == null ? undefined : f,
    crs: (f = jspb.Message.getOptionalFloatingPointField(msg, 25)) == null ? undefined : f,
    cuc: (f = jspb.Message.getOptionalFloatingPointField(msg, 26)) == null ? undefined : f,
    cus: (f = jspb.Message.getOptionalFloatingPointField(msg, 27)) == null ? undefined : f,
    omega0: (f = jspb.Message.getOptionalFloatingPointField(msg, 28)) == null ? undefined : f,
    omega: (f = jspb.Message.getOptionalFloatingPointField(msg, 29)) == null ? undefined : f,
    i0: (f = jspb.Message.getOptionalFloatingPointField(msg, 30)) == null ? undefined : f,
    omegadot: (f = jspb.Message.getOptionalFloatingPointField(msg, 31)) == null ? undefined : f,
    idot: (f = jspb.Message.getOptionalFloatingPointField(msg, 32)) == null ? undefined : f,
    codesonl2channel: (f = jspb.Message.getOptionalFloatingPointField(msg, 33)) == null ? undefined : f,
    l2pdataflag: (f = jspb.Message.getField(msg, 34)) == null ? undefined : f,
    accuracy: (f = jspb.Message.getField(msg, 35)) == null ? undefined : f,
    health: (f = jspb.Message.getField(msg, 36)) == null ? undefined : f,
    tgd: (f = jspb.Message.getOptionalFloatingPointField(msg, 37)) == null ? undefined : f,
    iodc: (f = jspb.Message.getOptionalFloatingPointField(msg, 38)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of KepplerOrbit as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.gnss.KepplerOrbit.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.gnssType;

  /** @type {?|undefined} */
  this.satPrn;

  /** @type {?|undefined} */
  this.gnssTimeType;

  /** @type {?|undefined} */
  this.year;

  /** @type {?|undefined} */
  this.month;

  /** @type {?|undefined} */
  this.day;

  /** @type {?|undefined} */
  this.hour;

  /** @type {?|undefined} */
  this.minute;

  /** @type {?|undefined} */
  this.secondS;

  /** @type {?|undefined} */
  this.weekNum;

  /** @type {?|undefined} */
  this.reserved;

  /** @type {?|undefined} */
  this.af0;

  /** @type {?|undefined} */
  this.af1;

  /** @type {?|undefined} */
  this.af2;

  /** @type {?|undefined} */
  this.iode;

  /** @type {?|undefined} */
  this.deltan;

  /** @type {?|undefined} */
  this.m0;

  /** @type {?|undefined} */
  this.e;

  /** @type {?|undefined} */
  this.roota;

  /** @type {?|undefined} */
  this.toe;

  /** @type {?|undefined} */
  this.toc;

  /** @type {?|undefined} */
  this.cic;

  /** @type {?|undefined} */
  this.crc;

  /** @type {?|undefined} */
  this.cis;

  /** @type {?|undefined} */
  this.crs;

  /** @type {?|undefined} */
  this.cuc;

  /** @type {?|undefined} */
  this.cus;

  /** @type {?|undefined} */
  this.omega0;

  /** @type {?|undefined} */
  this.omega;

  /** @type {?|undefined} */
  this.i0;

  /** @type {?|undefined} */
  this.omegadot;

  /** @type {?|undefined} */
  this.idot;

  /** @type {?|undefined} */
  this.codesonl2channel;

  /** @type {?|undefined} */
  this.l2pdataflag;

  /** @type {?|undefined} */
  this.accuracy;

  /** @type {?|undefined} */
  this.health;

  /** @type {?|undefined} */
  this.tgd;

  /** @type {?|undefined} */
  this.iodc;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.gnss.KepplerOrbit.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit}
 */
proto.apollo.drivers.gnss.KepplerOrbit.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.gnss.KepplerOrbit();
  obj.gnssType != null && jspb.Message.setField(msg, 1, obj.gnssType);
  obj.satPrn != null && jspb.Message.setField(msg, 2, obj.satPrn);
  obj.gnssTimeType != null && jspb.Message.setField(msg, 3, obj.gnssTimeType);
  obj.year != null && jspb.Message.setField(msg, 4, obj.year);
  obj.month != null && jspb.Message.setField(msg, 5, obj.month);
  obj.day != null && jspb.Message.setField(msg, 6, obj.day);
  obj.hour != null && jspb.Message.setField(msg, 7, obj.hour);
  obj.minute != null && jspb.Message.setField(msg, 8, obj.minute);
  obj.secondS != null && jspb.Message.setField(msg, 9, obj.secondS);
  obj.weekNum != null && jspb.Message.setField(msg, 10, obj.weekNum);
  obj.reserved != null && jspb.Message.setField(msg, 11, obj.reserved);
  obj.af0 != null && jspb.Message.setField(msg, 12, obj.af0);
  obj.af1 != null && jspb.Message.setField(msg, 13, obj.af1);
  obj.af2 != null && jspb.Message.setField(msg, 14, obj.af2);
  obj.iode != null && jspb.Message.setField(msg, 15, obj.iode);
  obj.deltan != null && jspb.Message.setField(msg, 16, obj.deltan);
  obj.m0 != null && jspb.Message.setField(msg, 17, obj.m0);
  obj.e != null && jspb.Message.setField(msg, 18, obj.e);
  obj.roota != null && jspb.Message.setField(msg, 19, obj.roota);
  obj.toe != null && jspb.Message.setField(msg, 20, obj.toe);
  obj.toc != null && jspb.Message.setField(msg, 21, obj.toc);
  obj.cic != null && jspb.Message.setField(msg, 22, obj.cic);
  obj.crc != null && jspb.Message.setField(msg, 23, obj.crc);
  obj.cis != null && jspb.Message.setField(msg, 24, obj.cis);
  obj.crs != null && jspb.Message.setField(msg, 25, obj.crs);
  obj.cuc != null && jspb.Message.setField(msg, 26, obj.cuc);
  obj.cus != null && jspb.Message.setField(msg, 27, obj.cus);
  obj.omega0 != null && jspb.Message.setField(msg, 28, obj.omega0);
  obj.omega != null && jspb.Message.setField(msg, 29, obj.omega);
  obj.i0 != null && jspb.Message.setField(msg, 30, obj.i0);
  obj.omegadot != null && jspb.Message.setField(msg, 31, obj.omegadot);
  obj.idot != null && jspb.Message.setField(msg, 32, obj.idot);
  obj.codesonl2channel != null && jspb.Message.setField(msg, 33, obj.codesonl2channel);
  obj.l2pdataflag != null && jspb.Message.setField(msg, 34, obj.l2pdataflag);
  obj.accuracy != null && jspb.Message.setField(msg, 35, obj.accuracy);
  obj.health != null && jspb.Message.setField(msg, 36, obj.health);
  obj.tgd != null && jspb.Message.setField(msg, 37, obj.tgd);
  obj.iodc != null && jspb.Message.setField(msg, 38, obj.iodc);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit}
 */
proto.apollo.drivers.gnss.KepplerOrbit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.gnss.KepplerOrbit;
  return proto.apollo.drivers.gnss.KepplerOrbit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.gnss.KepplerOrbit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit}
 */
proto.apollo.drivers.gnss.KepplerOrbit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.drivers.gnss.GnssType} */ (reader.readEnum());
      msg.setGnssType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSatPrn(value);
      break;
    case 3:
      var value = /** @type {!proto.apollo.drivers.gnss.GnssTimeType} */ (reader.readEnum());
      msg.setGnssTimeType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setYear(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMonth(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDay(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHour(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinute(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondS(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWeekNum(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setReserved(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAf0(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAf1(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAf2(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setIode(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDeltan(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setM0(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setE(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRoota(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setToe(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setToc(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCic(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCrc(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCis(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCrs(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCuc(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCus(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOmega0(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOmega(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setI0(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOmegadot(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setIdot(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCodesonl2channel(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setL2pdataflag(value);
      break;
    case 35:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAccuracy(value);
      break;
    case 36:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHealth(value);
      break;
    case 37:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTgd(value);
      break;
    case 38:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setIodc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.gnss.KepplerOrbit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.gnss.KepplerOrbit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.gnss.KepplerOrbit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.drivers.gnss.GnssType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {!proto.apollo.drivers.gnss.GnssTimeType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeDouble(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeDouble(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeDouble(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeDouble(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeDouble(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeDouble(
      22,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeDouble(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeDouble(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeDouble(
      25,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeDouble(
      26,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeDouble(
      27,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeDouble(
      28,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeDouble(
      29,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeDouble(
      30,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeDouble(
      31,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeDouble(
      32,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 33));
  if (f != null) {
    writer.writeDouble(
      33,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 34));
  if (f != null) {
    writer.writeUint32(
      34,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 35));
  if (f != null) {
    writer.writeUint32(
      35,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 36));
  if (f != null) {
    writer.writeUint32(
      36,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 37));
  if (f != null) {
    writer.writeDouble(
      37,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 38));
  if (f != null) {
    writer.writeDouble(
      38,
      f
    );
  }
};


/**
 * optional GnssType gnss_type = 1;
 * @return {!proto.apollo.drivers.gnss.GnssType}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getGnssType = function() {
  return /** @type {!proto.apollo.drivers.gnss.GnssType} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.apollo.drivers.gnss.GnssType} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setGnssType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearGnssType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasGnssType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 sat_prn = 2;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getSatPrn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setSatPrn = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearSatPrn = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasSatPrn = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GnssTimeType gnss_time_type = 3;
 * @return {!proto.apollo.drivers.gnss.GnssTimeType}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getGnssTimeType = function() {
  return /** @type {!proto.apollo.drivers.gnss.GnssTimeType} */ (jspb.Message.getFieldWithDefault(this, 3, 1));
};


/**
 * @param {!proto.apollo.drivers.gnss.GnssTimeType} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setGnssTimeType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearGnssTimeType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasGnssTimeType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 year = 4;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getYear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setYear = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearYear = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasYear = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 month = 5;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getMonth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setMonth = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearMonth = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasMonth = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 day = 6;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setDay = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearDay = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasDay = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 hour = 7;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getHour = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setHour = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearHour = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasHour = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 minute = 8;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getMinute = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setMinute = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearMinute = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasMinute = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double second_s = 9;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getSecondS = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setSecondS = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearSecondS = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasSecondS = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 week_num = 10;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getWeekNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setWeekNum = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearWeekNum = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasWeekNum = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional double reserved = 11;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getReserved = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setReserved = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearReserved = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasReserved = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional double af0 = 12;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getAf0 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setAf0 = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearAf0 = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasAf0 = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional double af1 = 13;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getAf1 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setAf1 = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearAf1 = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasAf1 = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional double af2 = 14;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getAf2 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setAf2 = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearAf2 = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasAf2 = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional double iode = 15;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getIode = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setIode = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearIode = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasIode = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional double deltan = 16;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getDeltan = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setDeltan = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearDeltan = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasDeltan = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional double m0 = 17;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getM0 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setM0 = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearM0 = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasM0 = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional double e = 18;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getE = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 18, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setE = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearE = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasE = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional double roota = 19;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getRoota = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 19, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setRoota = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearRoota = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasRoota = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional double toe = 20;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getToe = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 20, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setToe = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearToe = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasToe = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional double toc = 21;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getToc = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 21, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setToc = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearToc = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasToc = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional double cic = 22;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getCic = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 22, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setCic = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearCic = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasCic = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional double crc = 23;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getCrc = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 23, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setCrc = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearCrc = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasCrc = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional double cis = 24;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getCis = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 24, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setCis = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearCis = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasCis = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional double crs = 25;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getCrs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 25, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setCrs = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearCrs = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasCrs = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional double cuc = 26;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getCuc = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 26, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setCuc = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearCuc = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasCuc = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional double cus = 27;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getCus = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 27, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setCus = function(value) {
  return jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearCus = function() {
  return jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasCus = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional double omega0 = 28;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getOmega0 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 28, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setOmega0 = function(value) {
  return jspb.Message.setField(this, 28, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearOmega0 = function() {
  return jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasOmega0 = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional double omega = 29;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getOmega = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 29, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setOmega = function(value) {
  return jspb.Message.setField(this, 29, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearOmega = function() {
  return jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasOmega = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional double i0 = 30;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getI0 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 30, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setI0 = function(value) {
  return jspb.Message.setField(this, 30, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearI0 = function() {
  return jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasI0 = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional double omegadot = 31;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getOmegadot = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 31, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setOmegadot = function(value) {
  return jspb.Message.setField(this, 31, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearOmegadot = function() {
  return jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasOmegadot = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional double idot = 32;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getIdot = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 32, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setIdot = function(value) {
  return jspb.Message.setField(this, 32, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearIdot = function() {
  return jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasIdot = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional double codesonL2channel = 33;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getCodesonl2channel = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 33, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setCodesonl2channel = function(value) {
  return jspb.Message.setField(this, 33, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearCodesonl2channel = function() {
  return jspb.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasCodesonl2channel = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional uint32 L2Pdataflag = 34;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getL2pdataflag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setL2pdataflag = function(value) {
  return jspb.Message.setField(this, 34, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearL2pdataflag = function() {
  return jspb.Message.setField(this, 34, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasL2pdataflag = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional uint32 accuracy = 35;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getAccuracy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 35, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setAccuracy = function(value) {
  return jspb.Message.setField(this, 35, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearAccuracy = function() {
  return jspb.Message.setField(this, 35, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasAccuracy = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional uint32 health = 36;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getHealth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 36, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setHealth = function(value) {
  return jspb.Message.setField(this, 36, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearHealth = function() {
  return jspb.Message.setField(this, 36, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasHealth = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional double tgd = 37;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getTgd = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 37, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setTgd = function(value) {
  return jspb.Message.setField(this, 37, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearTgd = function() {
  return jspb.Message.setField(this, 37, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasTgd = function() {
  return jspb.Message.getField(this, 37) != null;
};


/**
 * optional double iodc = 38;
 * @return {number}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.getIodc = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 38, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.setIodc = function(value) {
  return jspb.Message.setField(this, 38, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.KepplerOrbit} returns this
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.clearIodc = function() {
  return jspb.Message.setField(this, 38, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.KepplerOrbit.prototype.hasIodc = function() {
  return jspb.Message.getField(this, 38) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.gnss.GlonassOrbit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.gnss.GlonassOrbit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.gnss.GlonassOrbit.toObject = function(includeInstance, msg) {
  var f, obj = {
    gnssType: jspb.Message.getFieldWithDefault(msg, 1, 3),
    slotPrn: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    gnssTimeType: jspb.Message.getFieldWithDefault(msg, 3, 3),
    toe: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    year: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    month: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    day: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    hour: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    minute: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    secondS: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    frequencyNo: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    weekNum: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    weekSecondS: (f = jspb.Message.getOptionalFloatingPointField(msg, 13)) == null ? undefined : f,
    tk: (f = jspb.Message.getOptionalFloatingPointField(msg, 14)) == null ? undefined : f,
    clockOffset: (f = jspb.Message.getOptionalFloatingPointField(msg, 15)) == null ? undefined : f,
    clockDrift: (f = jspb.Message.getOptionalFloatingPointField(msg, 16)) == null ? undefined : f,
    health: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    positionX: (f = jspb.Message.getOptionalFloatingPointField(msg, 18)) == null ? undefined : f,
    positionY: (f = jspb.Message.getOptionalFloatingPointField(msg, 19)) == null ? undefined : f,
    positionZ: (f = jspb.Message.getOptionalFloatingPointField(msg, 20)) == null ? undefined : f,
    velocityX: (f = jspb.Message.getOptionalFloatingPointField(msg, 21)) == null ? undefined : f,
    velocityY: (f = jspb.Message.getOptionalFloatingPointField(msg, 22)) == null ? undefined : f,
    velocityZ: (f = jspb.Message.getOptionalFloatingPointField(msg, 23)) == null ? undefined : f,
    accelerateX: (f = jspb.Message.getOptionalFloatingPointField(msg, 24)) == null ? undefined : f,
    accelerateY: (f = jspb.Message.getOptionalFloatingPointField(msg, 25)) == null ? undefined : f,
    accelerateZ: (f = jspb.Message.getOptionalFloatingPointField(msg, 26)) == null ? undefined : f,
    inforAge: (f = jspb.Message.getOptionalFloatingPointField(msg, 27)) == null ? undefined : f,
    satPrn: (f = jspb.Message.getField(msg, 28)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of GlonassOrbit as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.gnss.GlonassOrbit.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.gnssType;

  /** @type {?|undefined} */
  this.slotPrn;

  /** @type {?|undefined} */
  this.gnssTimeType;

  /** @type {?|undefined} */
  this.toe;

  /** @type {?|undefined} */
  this.year;

  /** @type {?|undefined} */
  this.month;

  /** @type {?|undefined} */
  this.day;

  /** @type {?|undefined} */
  this.hour;

  /** @type {?|undefined} */
  this.minute;

  /** @type {?|undefined} */
  this.secondS;

  /** @type {?|undefined} */
  this.frequencyNo;

  /** @type {?|undefined} */
  this.weekNum;

  /** @type {?|undefined} */
  this.weekSecondS;

  /** @type {?|undefined} */
  this.tk;

  /** @type {?|undefined} */
  this.clockOffset;

  /** @type {?|undefined} */
  this.clockDrift;

  /** @type {?|undefined} */
  this.health;

  /** @type {?|undefined} */
  this.positionX;

  /** @type {?|undefined} */
  this.positionY;

  /** @type {?|undefined} */
  this.positionZ;

  /** @type {?|undefined} */
  this.velocityX;

  /** @type {?|undefined} */
  this.velocityY;

  /** @type {?|undefined} */
  this.velocityZ;

  /** @type {?|undefined} */
  this.accelerateX;

  /** @type {?|undefined} */
  this.accelerateY;

  /** @type {?|undefined} */
  this.accelerateZ;

  /** @type {?|undefined} */
  this.inforAge;

  /** @type {?|undefined} */
  this.satPrn;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.gnss.GlonassOrbit.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit}
 */
proto.apollo.drivers.gnss.GlonassOrbit.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.gnss.GlonassOrbit();
  obj.gnssType != null && jspb.Message.setField(msg, 1, obj.gnssType);
  obj.slotPrn != null && jspb.Message.setField(msg, 2, obj.slotPrn);
  obj.gnssTimeType != null && jspb.Message.setField(msg, 3, obj.gnssTimeType);
  obj.toe != null && jspb.Message.setField(msg, 4, obj.toe);
  obj.year != null && jspb.Message.setField(msg, 5, obj.year);
  obj.month != null && jspb.Message.setField(msg, 6, obj.month);
  obj.day != null && jspb.Message.setField(msg, 7, obj.day);
  obj.hour != null && jspb.Message.setField(msg, 8, obj.hour);
  obj.minute != null && jspb.Message.setField(msg, 9, obj.minute);
  obj.secondS != null && jspb.Message.setField(msg, 10, obj.secondS);
  obj.frequencyNo != null && jspb.Message.setField(msg, 11, obj.frequencyNo);
  obj.weekNum != null && jspb.Message.setField(msg, 12, obj.weekNum);
  obj.weekSecondS != null && jspb.Message.setField(msg, 13, obj.weekSecondS);
  obj.tk != null && jspb.Message.setField(msg, 14, obj.tk);
  obj.clockOffset != null && jspb.Message.setField(msg, 15, obj.clockOffset);
  obj.clockDrift != null && jspb.Message.setField(msg, 16, obj.clockDrift);
  obj.health != null && jspb.Message.setField(msg, 17, obj.health);
  obj.positionX != null && jspb.Message.setField(msg, 18, obj.positionX);
  obj.positionY != null && jspb.Message.setField(msg, 19, obj.positionY);
  obj.positionZ != null && jspb.Message.setField(msg, 20, obj.positionZ);
  obj.velocityX != null && jspb.Message.setField(msg, 21, obj.velocityX);
  obj.velocityY != null && jspb.Message.setField(msg, 22, obj.velocityY);
  obj.velocityZ != null && jspb.Message.setField(msg, 23, obj.velocityZ);
  obj.accelerateX != null && jspb.Message.setField(msg, 24, obj.accelerateX);
  obj.accelerateY != null && jspb.Message.setField(msg, 25, obj.accelerateY);
  obj.accelerateZ != null && jspb.Message.setField(msg, 26, obj.accelerateZ);
  obj.inforAge != null && jspb.Message.setField(msg, 27, obj.inforAge);
  obj.satPrn != null && jspb.Message.setField(msg, 28, obj.satPrn);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit}
 */
proto.apollo.drivers.gnss.GlonassOrbit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.gnss.GlonassOrbit;
  return proto.apollo.drivers.gnss.GlonassOrbit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.gnss.GlonassOrbit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit}
 */
proto.apollo.drivers.gnss.GlonassOrbit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.drivers.gnss.GnssType} */ (reader.readEnum());
      msg.setGnssType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSlotPrn(value);
      break;
    case 3:
      var value = /** @type {!proto.apollo.drivers.gnss.GnssTimeType} */ (reader.readEnum());
      msg.setGnssTimeType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setToe(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setYear(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMonth(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDay(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHour(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinute(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondS(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrequencyNo(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWeekNum(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWeekSecondS(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTk(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setClockOffset(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setClockDrift(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHealth(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPositionX(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPositionY(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPositionZ(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVelocityX(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVelocityY(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVelocityZ(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAccelerateX(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAccelerateY(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAccelerateZ(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setInforAge(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSatPrn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.gnss.GlonassOrbit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.gnss.GlonassOrbit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.gnss.GlonassOrbit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.drivers.gnss.GnssType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {!proto.apollo.drivers.gnss.GnssTimeType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeDouble(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeDouble(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeDouble(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeDouble(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeDouble(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeDouble(
      22,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeDouble(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeDouble(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeDouble(
      25,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeDouble(
      26,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeDouble(
      27,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeUint32(
      28,
      f
    );
  }
};


/**
 * optional GnssType gnss_type = 1;
 * @return {!proto.apollo.drivers.gnss.GnssType}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getGnssType = function() {
  return /** @type {!proto.apollo.drivers.gnss.GnssType} */ (jspb.Message.getFieldWithDefault(this, 1, 3));
};


/**
 * @param {!proto.apollo.drivers.gnss.GnssType} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setGnssType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearGnssType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasGnssType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 slot_prn = 2;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getSlotPrn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setSlotPrn = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearSlotPrn = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasSlotPrn = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GnssTimeType gnss_time_type = 3;
 * @return {!proto.apollo.drivers.gnss.GnssTimeType}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getGnssTimeType = function() {
  return /** @type {!proto.apollo.drivers.gnss.GnssTimeType} */ (jspb.Message.getFieldWithDefault(this, 3, 3));
};


/**
 * @param {!proto.apollo.drivers.gnss.GnssTimeType} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setGnssTimeType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearGnssTimeType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasGnssTimeType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double toe = 4;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getToe = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setToe = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearToe = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasToe = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 year = 5;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getYear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setYear = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearYear = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasYear = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 month = 6;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getMonth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setMonth = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearMonth = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasMonth = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 day = 7;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setDay = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearDay = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasDay = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 hour = 8;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getHour = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setHour = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearHour = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasHour = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 minute = 9;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getMinute = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setMinute = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearMinute = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasMinute = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional double second_s = 10;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getSecondS = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setSecondS = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearSecondS = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasSecondS = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int32 frequency_no = 11;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getFrequencyNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setFrequencyNo = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearFrequencyNo = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasFrequencyNo = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 week_num = 12;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getWeekNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setWeekNum = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearWeekNum = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasWeekNum = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional double week_second_s = 13;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getWeekSecondS = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setWeekSecondS = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearWeekSecondS = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasWeekSecondS = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional double tk = 14;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getTk = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setTk = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearTk = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasTk = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional double clock_offset = 15;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getClockOffset = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setClockOffset = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearClockOffset = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasClockOffset = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional double clock_drift = 16;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getClockDrift = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setClockDrift = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearClockDrift = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasClockDrift = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint32 health = 17;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getHealth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setHealth = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearHealth = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasHealth = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional double position_x = 18;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getPositionX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 18, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setPositionX = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearPositionX = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasPositionX = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional double position_y = 19;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getPositionY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 19, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setPositionY = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearPositionY = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasPositionY = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional double position_z = 20;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getPositionZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 20, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setPositionZ = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearPositionZ = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasPositionZ = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional double velocity_x = 21;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getVelocityX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 21, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setVelocityX = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearVelocityX = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasVelocityX = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional double velocity_y = 22;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getVelocityY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 22, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setVelocityY = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearVelocityY = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasVelocityY = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional double velocity_z = 23;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getVelocityZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 23, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setVelocityZ = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearVelocityZ = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasVelocityZ = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional double accelerate_x = 24;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getAccelerateX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 24, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setAccelerateX = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearAccelerateX = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasAccelerateX = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional double accelerate_y = 25;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getAccelerateY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 25, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setAccelerateY = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearAccelerateY = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasAccelerateY = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional double accelerate_z = 26;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getAccelerateZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 26, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setAccelerateZ = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearAccelerateZ = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasAccelerateZ = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional double infor_age = 27;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getInforAge = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 27, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setInforAge = function(value) {
  return jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearInforAge = function() {
  return jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasInforAge = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional uint32 sat_prn = 28;
 * @return {number}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.getSatPrn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.setSatPrn = function(value) {
  return jspb.Message.setField(this, 28, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GlonassOrbit} returns this
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.clearSatPrn = function() {
  return jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GlonassOrbit.prototype.hasSatPrn = function() {
  return jspb.Message.getField(this, 28) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.gnss.GnssEphemeris.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.gnss.GnssEphemeris.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.gnss.GnssEphemeris} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.gnss.GnssEphemeris.toObject = function(includeInstance, msg) {
  var f, obj = {
    gnssType: jspb.Message.getFieldWithDefault(msg, 1, 3),
    kepplerOrbit: (f = msg.getKepplerOrbit()) && proto.apollo.drivers.gnss.KepplerOrbit.toObject(includeInstance, f),
    glonassOrbit: (f = msg.getGlonassOrbit()) && proto.apollo.drivers.gnss.GlonassOrbit.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of GnssEphemeris as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.gnss.GnssEphemeris.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.gnssType;

  /** @type {?|undefined} */
  this.kepplerOrbit;

  /** @type {?|undefined} */
  this.glonassOrbit;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.gnss.GnssEphemeris.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.gnss.GnssEphemeris}
 */
proto.apollo.drivers.gnss.GnssEphemeris.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.gnss.GnssEphemeris();
  obj.gnssType != null && jspb.Message.setField(msg, 1, obj.gnssType);
  obj.kepplerOrbit && jspb.Message.setWrapperField(
      msg, 2, proto.apollo.drivers.gnss.KepplerOrbit.fromObject(obj.kepplerOrbit));
  obj.glonassOrbit && jspb.Message.setWrapperField(
      msg, 3, proto.apollo.drivers.gnss.GlonassOrbit.fromObject(obj.glonassOrbit));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.gnss.GnssEphemeris}
 */
proto.apollo.drivers.gnss.GnssEphemeris.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.gnss.GnssEphemeris;
  return proto.apollo.drivers.gnss.GnssEphemeris.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.gnss.GnssEphemeris} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.gnss.GnssEphemeris}
 */
proto.apollo.drivers.gnss.GnssEphemeris.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.drivers.gnss.GnssType} */ (reader.readEnum());
      msg.setGnssType(value);
      break;
    case 2:
      var value = new proto.apollo.drivers.gnss.KepplerOrbit;
      reader.readMessage(value,proto.apollo.drivers.gnss.KepplerOrbit.deserializeBinaryFromReader);
      msg.setKepplerOrbit(value);
      break;
    case 3:
      var value = new proto.apollo.drivers.gnss.GlonassOrbit;
      reader.readMessage(value,proto.apollo.drivers.gnss.GlonassOrbit.deserializeBinaryFromReader);
      msg.setGlonassOrbit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.gnss.GnssEphemeris.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.gnss.GnssEphemeris.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.gnss.GnssEphemeris} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.gnss.GnssEphemeris.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.drivers.gnss.GnssType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getKepplerOrbit();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.apollo.drivers.gnss.KepplerOrbit.serializeBinaryToWriter
    );
  }
  f = message.getGlonassOrbit();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.apollo.drivers.gnss.GlonassOrbit.serializeBinaryToWriter
    );
  }
};


/**
 * optional GnssType gnss_type = 1;
 * @return {!proto.apollo.drivers.gnss.GnssType}
 */
proto.apollo.drivers.gnss.GnssEphemeris.prototype.getGnssType = function() {
  return /** @type {!proto.apollo.drivers.gnss.GnssType} */ (jspb.Message.getFieldWithDefault(this, 1, 3));
};


/**
 * @param {!proto.apollo.drivers.gnss.GnssType} value
 * @return {!proto.apollo.drivers.gnss.GnssEphemeris} returns this
 */
proto.apollo.drivers.gnss.GnssEphemeris.prototype.setGnssType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssEphemeris} returns this
 */
proto.apollo.drivers.gnss.GnssEphemeris.prototype.clearGnssType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssEphemeris.prototype.hasGnssType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional KepplerOrbit keppler_orbit = 2;
 * @return {?proto.apollo.drivers.gnss.KepplerOrbit}
 */
proto.apollo.drivers.gnss.GnssEphemeris.prototype.getKepplerOrbit = function() {
  return /** @type{?proto.apollo.drivers.gnss.KepplerOrbit} */ (
    jspb.Message.getWrapperField(this, proto.apollo.drivers.gnss.KepplerOrbit, 2));
};


/**
 * @param {?proto.apollo.drivers.gnss.KepplerOrbit|undefined} value
 * @return {!proto.apollo.drivers.gnss.GnssEphemeris} returns this
*/
proto.apollo.drivers.gnss.GnssEphemeris.prototype.setKepplerOrbit = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssEphemeris} returns this
 */
proto.apollo.drivers.gnss.GnssEphemeris.prototype.clearKepplerOrbit = function() {
  return this.setKepplerOrbit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssEphemeris.prototype.hasKepplerOrbit = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GlonassOrbit glonass_orbit = 3;
 * @return {?proto.apollo.drivers.gnss.GlonassOrbit}
 */
proto.apollo.drivers.gnss.GnssEphemeris.prototype.getGlonassOrbit = function() {
  return /** @type{?proto.apollo.drivers.gnss.GlonassOrbit} */ (
    jspb.Message.getWrapperField(this, proto.apollo.drivers.gnss.GlonassOrbit, 3));
};


/**
 * @param {?proto.apollo.drivers.gnss.GlonassOrbit|undefined} value
 * @return {!proto.apollo.drivers.gnss.GnssEphemeris} returns this
*/
proto.apollo.drivers.gnss.GnssEphemeris.prototype.setGlonassOrbit = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssEphemeris} returns this
 */
proto.apollo.drivers.gnss.GnssEphemeris.prototype.clearGlonassOrbit = function() {
  return this.setGlonassOrbit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssEphemeris.prototype.hasGlonassOrbit = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.apollo.drivers.gnss.GnssBandID = {
  BAND_UNKNOWN: 0,
  GPS_L1: 1,
  GPS_L2: 2,
  GPS_L5: 3,
  BDS_B1: 4,
  BDS_B2: 5,
  BDS_B3: 6,
  GLO_G1: 7,
  GLO_G2: 8,
  GLO_G3: 9
};

/**
 * @enum {number}
 */
proto.apollo.drivers.gnss.GnssTimeType = {
  TIME_UNKNOWN: 0,
  GPS_TIME: 1,
  BDS_TIME: 2,
  GLO_TIME: 3,
  GAL_TIME: 4
};

/**
 * @enum {number}
 */
proto.apollo.drivers.gnss.GnssType = {
  SYS_UNKNOWN: 0,
  GPS_SYS: 1,
  BDS_SYS: 2,
  GLO_SYS: 3,
  GAL_SYS: 4
};

/**
 * @enum {number}
 */
proto.apollo.drivers.gnss.PseudoType = {
  CODE_UNKNOWN: 0,
  CORSE_CODE: 1,
  PRECISION_CODE: 2
};

goog.object.extend(exports, proto.apollo.drivers.gnss);
