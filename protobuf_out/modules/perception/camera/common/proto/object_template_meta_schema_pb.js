// source: modules/perception/camera/common/proto/object_template_meta_schema.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.apollo.perception.camera.Dim', null, global);
goog.exportSymbol('proto.apollo.perception.camera.ObjectTemplate', null, global);
goog.exportSymbol('proto.apollo.perception.camera.ObjectTemplateMeta', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.perception.camera.Dim = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.perception.camera.Dim, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.perception.camera.Dim.displayName = 'proto.apollo.perception.camera.Dim';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.perception.camera.ObjectTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.perception.camera.ObjectTemplate.repeatedFields_, null);
};
goog.inherits(proto.apollo.perception.camera.ObjectTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.perception.camera.ObjectTemplate.displayName = 'proto.apollo.perception.camera.ObjectTemplate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.perception.camera.ObjectTemplateMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.perception.camera.ObjectTemplateMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.perception.camera.ObjectTemplateMeta.displayName = 'proto.apollo.perception.camera.ObjectTemplateMeta';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.perception.camera.Dim.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.perception.camera.Dim.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.perception.camera.Dim} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.Dim.toObject = function(includeInstance, msg) {
  var f, obj = {
    h: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    w: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    l: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Dim as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.perception.camera.Dim.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.h;

  /** @type {?|undefined} */
  this.w;

  /** @type {?|undefined} */
  this.l;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.perception.camera.Dim.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.perception.camera.Dim}
 */
proto.apollo.perception.camera.Dim.fromObject = function(obj) {
  var msg = new proto.apollo.perception.camera.Dim();
  obj.h != null && jspb.Message.setField(msg, 1, obj.h);
  obj.w != null && jspb.Message.setField(msg, 2, obj.w);
  obj.l != null && jspb.Message.setField(msg, 3, obj.l);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.perception.camera.Dim}
 */
proto.apollo.perception.camera.Dim.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.perception.camera.Dim;
  return proto.apollo.perception.camera.Dim.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.perception.camera.Dim} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.perception.camera.Dim}
 */
proto.apollo.perception.camera.Dim.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setH(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setW(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setL(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.perception.camera.Dim.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.perception.camera.Dim.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.perception.camera.Dim} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.Dim.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * optional float H = 1;
 * @return {number}
 */
proto.apollo.perception.camera.Dim.prototype.getH = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.Dim} returns this
 */
proto.apollo.perception.camera.Dim.prototype.setH = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.Dim} returns this
 */
proto.apollo.perception.camera.Dim.prototype.clearH = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.Dim.prototype.hasH = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float W = 2;
 * @return {number}
 */
proto.apollo.perception.camera.Dim.prototype.getW = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.Dim} returns this
 */
proto.apollo.perception.camera.Dim.prototype.setW = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.Dim} returns this
 */
proto.apollo.perception.camera.Dim.prototype.clearW = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.Dim.prototype.hasW = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float L = 3;
 * @return {number}
 */
proto.apollo.perception.camera.Dim.prototype.getL = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.Dim} returns this
 */
proto.apollo.perception.camera.Dim.prototype.setL = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.Dim} returns this
 */
proto.apollo.perception.camera.Dim.prototype.clearL = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.Dim.prototype.hasL = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.perception.camera.ObjectTemplate.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.perception.camera.ObjectTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.perception.camera.ObjectTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.perception.camera.ObjectTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.ObjectTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    speedLimit: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    dimList: jspb.Message.toObjectList(msg.getDimList(),
    proto.apollo.perception.camera.Dim.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ObjectTemplate as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.perception.camera.ObjectTemplate.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.speedLimit;

  /** @type {?|undefined} */
  this.dimList;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.perception.camera.ObjectTemplate.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.perception.camera.ObjectTemplate}
 */
proto.apollo.perception.camera.ObjectTemplate.fromObject = function(obj) {
  var msg = new proto.apollo.perception.camera.ObjectTemplate();
  obj.speedLimit != null && jspb.Message.setField(msg, 1, obj.speedLimit);
  obj.dimList && jspb.Message.setRepeatedWrapperField(
      msg, 2, obj.dimList.map(
          proto.apollo.perception.camera.Dim.fromObject));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.perception.camera.ObjectTemplate}
 */
proto.apollo.perception.camera.ObjectTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.perception.camera.ObjectTemplate;
  return proto.apollo.perception.camera.ObjectTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.perception.camera.ObjectTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.perception.camera.ObjectTemplate}
 */
proto.apollo.perception.camera.ObjectTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSpeedLimit(value);
      break;
    case 2:
      var value = new proto.apollo.perception.camera.Dim;
      reader.readMessage(value,proto.apollo.perception.camera.Dim.deserializeBinaryFromReader);
      msg.addDim(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.perception.camera.ObjectTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.perception.camera.ObjectTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.perception.camera.ObjectTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.ObjectTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getDimList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.apollo.perception.camera.Dim.serializeBinaryToWriter
    );
  }
};


/**
 * optional float speed_limit = 1;
 * @return {number}
 */
proto.apollo.perception.camera.ObjectTemplate.prototype.getSpeedLimit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.ObjectTemplate} returns this
 */
proto.apollo.perception.camera.ObjectTemplate.prototype.setSpeedLimit = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.ObjectTemplate} returns this
 */
proto.apollo.perception.camera.ObjectTemplate.prototype.clearSpeedLimit = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.ObjectTemplate.prototype.hasSpeedLimit = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Dim dim = 2;
 * @return {!Array<!proto.apollo.perception.camera.Dim>}
 */
proto.apollo.perception.camera.ObjectTemplate.prototype.getDimList = function() {
  return /** @type{!Array<!proto.apollo.perception.camera.Dim>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.perception.camera.Dim, 2));
};


/**
 * @param {!Array<!proto.apollo.perception.camera.Dim>} value
 * @return {!proto.apollo.perception.camera.ObjectTemplate} returns this
*/
proto.apollo.perception.camera.ObjectTemplate.prototype.setDimList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.apollo.perception.camera.Dim=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.perception.camera.Dim}
 */
proto.apollo.perception.camera.ObjectTemplate.prototype.addDim = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.apollo.perception.camera.Dim, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.perception.camera.ObjectTemplate} returns this
 */
proto.apollo.perception.camera.ObjectTemplate.prototype.clearDimList = function() {
  return this.setDimList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.perception.camera.ObjectTemplateMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.perception.camera.ObjectTemplateMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.ObjectTemplateMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    unknown: (f = msg.getUnknown()) && proto.apollo.perception.camera.ObjectTemplate.toObject(includeInstance, f),
    unknownMovable: (f = msg.getUnknownMovable()) && proto.apollo.perception.camera.ObjectTemplate.toObject(includeInstance, f),
    unknownUnmovable: (f = msg.getUnknownUnmovable()) && proto.apollo.perception.camera.ObjectTemplate.toObject(includeInstance, f),
    car: (f = msg.getCar()) && proto.apollo.perception.camera.ObjectTemplate.toObject(includeInstance, f),
    van: (f = msg.getVan()) && proto.apollo.perception.camera.ObjectTemplate.toObject(includeInstance, f),
    truck: (f = msg.getTruck()) && proto.apollo.perception.camera.ObjectTemplate.toObject(includeInstance, f),
    bus: (f = msg.getBus()) && proto.apollo.perception.camera.ObjectTemplate.toObject(includeInstance, f),
    cyclist: (f = msg.getCyclist()) && proto.apollo.perception.camera.ObjectTemplate.toObject(includeInstance, f),
    motorcyclist: (f = msg.getMotorcyclist()) && proto.apollo.perception.camera.ObjectTemplate.toObject(includeInstance, f),
    tricyclist: (f = msg.getTricyclist()) && proto.apollo.perception.camera.ObjectTemplate.toObject(includeInstance, f),
    pedestrian: (f = msg.getPedestrian()) && proto.apollo.perception.camera.ObjectTemplate.toObject(includeInstance, f),
    trafficcone: (f = msg.getTrafficcone()) && proto.apollo.perception.camera.ObjectTemplate.toObject(includeInstance, f),
    maxDimChangeRatio: jspb.Message.getFloatingPointFieldWithDefault(msg, 21, 0.1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ObjectTemplateMeta as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.perception.camera.ObjectTemplateMeta.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.unknown;

  /** @type {?|undefined} */
  this.unknownMovable;

  /** @type {?|undefined} */
  this.unknownUnmovable;

  /** @type {?|undefined} */
  this.car;

  /** @type {?|undefined} */
  this.van;

  /** @type {?|undefined} */
  this.truck;

  /** @type {?|undefined} */
  this.bus;

  /** @type {?|undefined} */
  this.cyclist;

  /** @type {?|undefined} */
  this.motorcyclist;

  /** @type {?|undefined} */
  this.tricyclist;

  /** @type {?|undefined} */
  this.pedestrian;

  /** @type {?|undefined} */
  this.trafficcone;

  /** @type {?|undefined} */
  this.maxDimChangeRatio;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.perception.camera.ObjectTemplateMeta.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.fromObject = function(obj) {
  var msg = new proto.apollo.perception.camera.ObjectTemplateMeta();
  obj.unknown && jspb.Message.setWrapperField(
      msg, 1, proto.apollo.perception.camera.ObjectTemplate.fromObject(obj.unknown));
  obj.unknownMovable && jspb.Message.setWrapperField(
      msg, 2, proto.apollo.perception.camera.ObjectTemplate.fromObject(obj.unknownMovable));
  obj.unknownUnmovable && jspb.Message.setWrapperField(
      msg, 3, proto.apollo.perception.camera.ObjectTemplate.fromObject(obj.unknownUnmovable));
  obj.car && jspb.Message.setWrapperField(
      msg, 4, proto.apollo.perception.camera.ObjectTemplate.fromObject(obj.car));
  obj.van && jspb.Message.setWrapperField(
      msg, 5, proto.apollo.perception.camera.ObjectTemplate.fromObject(obj.van));
  obj.truck && jspb.Message.setWrapperField(
      msg, 6, proto.apollo.perception.camera.ObjectTemplate.fromObject(obj.truck));
  obj.bus && jspb.Message.setWrapperField(
      msg, 7, proto.apollo.perception.camera.ObjectTemplate.fromObject(obj.bus));
  obj.cyclist && jspb.Message.setWrapperField(
      msg, 8, proto.apollo.perception.camera.ObjectTemplate.fromObject(obj.cyclist));
  obj.motorcyclist && jspb.Message.setWrapperField(
      msg, 9, proto.apollo.perception.camera.ObjectTemplate.fromObject(obj.motorcyclist));
  obj.tricyclist && jspb.Message.setWrapperField(
      msg, 10, proto.apollo.perception.camera.ObjectTemplate.fromObject(obj.tricyclist));
  obj.pedestrian && jspb.Message.setWrapperField(
      msg, 11, proto.apollo.perception.camera.ObjectTemplate.fromObject(obj.pedestrian));
  obj.trafficcone && jspb.Message.setWrapperField(
      msg, 12, proto.apollo.perception.camera.ObjectTemplate.fromObject(obj.trafficcone));
  obj.maxDimChangeRatio != null && jspb.Message.setField(msg, 21, obj.maxDimChangeRatio);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.perception.camera.ObjectTemplateMeta;
  return proto.apollo.perception.camera.ObjectTemplateMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.perception.camera.ObjectTemplateMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.apollo.perception.camera.ObjectTemplate;
      reader.readMessage(value,proto.apollo.perception.camera.ObjectTemplate.deserializeBinaryFromReader);
      msg.setUnknown(value);
      break;
    case 2:
      var value = new proto.apollo.perception.camera.ObjectTemplate;
      reader.readMessage(value,proto.apollo.perception.camera.ObjectTemplate.deserializeBinaryFromReader);
      msg.setUnknownMovable(value);
      break;
    case 3:
      var value = new proto.apollo.perception.camera.ObjectTemplate;
      reader.readMessage(value,proto.apollo.perception.camera.ObjectTemplate.deserializeBinaryFromReader);
      msg.setUnknownUnmovable(value);
      break;
    case 4:
      var value = new proto.apollo.perception.camera.ObjectTemplate;
      reader.readMessage(value,proto.apollo.perception.camera.ObjectTemplate.deserializeBinaryFromReader);
      msg.setCar(value);
      break;
    case 5:
      var value = new proto.apollo.perception.camera.ObjectTemplate;
      reader.readMessage(value,proto.apollo.perception.camera.ObjectTemplate.deserializeBinaryFromReader);
      msg.setVan(value);
      break;
    case 6:
      var value = new proto.apollo.perception.camera.ObjectTemplate;
      reader.readMessage(value,proto.apollo.perception.camera.ObjectTemplate.deserializeBinaryFromReader);
      msg.setTruck(value);
      break;
    case 7:
      var value = new proto.apollo.perception.camera.ObjectTemplate;
      reader.readMessage(value,proto.apollo.perception.camera.ObjectTemplate.deserializeBinaryFromReader);
      msg.setBus(value);
      break;
    case 8:
      var value = new proto.apollo.perception.camera.ObjectTemplate;
      reader.readMessage(value,proto.apollo.perception.camera.ObjectTemplate.deserializeBinaryFromReader);
      msg.setCyclist(value);
      break;
    case 9:
      var value = new proto.apollo.perception.camera.ObjectTemplate;
      reader.readMessage(value,proto.apollo.perception.camera.ObjectTemplate.deserializeBinaryFromReader);
      msg.setMotorcyclist(value);
      break;
    case 10:
      var value = new proto.apollo.perception.camera.ObjectTemplate;
      reader.readMessage(value,proto.apollo.perception.camera.ObjectTemplate.deserializeBinaryFromReader);
      msg.setTricyclist(value);
      break;
    case 11:
      var value = new proto.apollo.perception.camera.ObjectTemplate;
      reader.readMessage(value,proto.apollo.perception.camera.ObjectTemplate.deserializeBinaryFromReader);
      msg.setPedestrian(value);
      break;
    case 12:
      var value = new proto.apollo.perception.camera.ObjectTemplate;
      reader.readMessage(value,proto.apollo.perception.camera.ObjectTemplate.deserializeBinaryFromReader);
      msg.setTrafficcone(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMaxDimChangeRatio(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.perception.camera.ObjectTemplateMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.perception.camera.ObjectTemplateMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.ObjectTemplateMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnknown();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.apollo.perception.camera.ObjectTemplate.serializeBinaryToWriter
    );
  }
  f = message.getUnknownMovable();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.apollo.perception.camera.ObjectTemplate.serializeBinaryToWriter
    );
  }
  f = message.getUnknownUnmovable();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.apollo.perception.camera.ObjectTemplate.serializeBinaryToWriter
    );
  }
  f = message.getCar();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.apollo.perception.camera.ObjectTemplate.serializeBinaryToWriter
    );
  }
  f = message.getVan();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.apollo.perception.camera.ObjectTemplate.serializeBinaryToWriter
    );
  }
  f = message.getTruck();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.apollo.perception.camera.ObjectTemplate.serializeBinaryToWriter
    );
  }
  f = message.getBus();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.apollo.perception.camera.ObjectTemplate.serializeBinaryToWriter
    );
  }
  f = message.getCyclist();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.apollo.perception.camera.ObjectTemplate.serializeBinaryToWriter
    );
  }
  f = message.getMotorcyclist();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.apollo.perception.camera.ObjectTemplate.serializeBinaryToWriter
    );
  }
  f = message.getTricyclist();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.apollo.perception.camera.ObjectTemplate.serializeBinaryToWriter
    );
  }
  f = message.getPedestrian();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.apollo.perception.camera.ObjectTemplate.serializeBinaryToWriter
    );
  }
  f = message.getTrafficcone();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.apollo.perception.camera.ObjectTemplate.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeFloat(
      21,
      f
    );
  }
};


/**
 * optional ObjectTemplate unknown = 1;
 * @return {?proto.apollo.perception.camera.ObjectTemplate}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.getUnknown = function() {
  return /** @type{?proto.apollo.perception.camera.ObjectTemplate} */ (
    jspb.Message.getWrapperField(this, proto.apollo.perception.camera.ObjectTemplate, 1));
};


/**
 * @param {?proto.apollo.perception.camera.ObjectTemplate|undefined} value
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
*/
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.setUnknown = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.clearUnknown = function() {
  return this.setUnknown(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.hasUnknown = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ObjectTemplate unknown_movable = 2;
 * @return {?proto.apollo.perception.camera.ObjectTemplate}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.getUnknownMovable = function() {
  return /** @type{?proto.apollo.perception.camera.ObjectTemplate} */ (
    jspb.Message.getWrapperField(this, proto.apollo.perception.camera.ObjectTemplate, 2));
};


/**
 * @param {?proto.apollo.perception.camera.ObjectTemplate|undefined} value
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
*/
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.setUnknownMovable = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.clearUnknownMovable = function() {
  return this.setUnknownMovable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.hasUnknownMovable = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ObjectTemplate unknown_unmovable = 3;
 * @return {?proto.apollo.perception.camera.ObjectTemplate}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.getUnknownUnmovable = function() {
  return /** @type{?proto.apollo.perception.camera.ObjectTemplate} */ (
    jspb.Message.getWrapperField(this, proto.apollo.perception.camera.ObjectTemplate, 3));
};


/**
 * @param {?proto.apollo.perception.camera.ObjectTemplate|undefined} value
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
*/
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.setUnknownUnmovable = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.clearUnknownUnmovable = function() {
  return this.setUnknownUnmovable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.hasUnknownUnmovable = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ObjectTemplate car = 4;
 * @return {?proto.apollo.perception.camera.ObjectTemplate}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.getCar = function() {
  return /** @type{?proto.apollo.perception.camera.ObjectTemplate} */ (
    jspb.Message.getWrapperField(this, proto.apollo.perception.camera.ObjectTemplate, 4));
};


/**
 * @param {?proto.apollo.perception.camera.ObjectTemplate|undefined} value
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
*/
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.setCar = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.clearCar = function() {
  return this.setCar(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.hasCar = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ObjectTemplate van = 5;
 * @return {?proto.apollo.perception.camera.ObjectTemplate}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.getVan = function() {
  return /** @type{?proto.apollo.perception.camera.ObjectTemplate} */ (
    jspb.Message.getWrapperField(this, proto.apollo.perception.camera.ObjectTemplate, 5));
};


/**
 * @param {?proto.apollo.perception.camera.ObjectTemplate|undefined} value
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
*/
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.setVan = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.clearVan = function() {
  return this.setVan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.hasVan = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ObjectTemplate truck = 6;
 * @return {?proto.apollo.perception.camera.ObjectTemplate}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.getTruck = function() {
  return /** @type{?proto.apollo.perception.camera.ObjectTemplate} */ (
    jspb.Message.getWrapperField(this, proto.apollo.perception.camera.ObjectTemplate, 6));
};


/**
 * @param {?proto.apollo.perception.camera.ObjectTemplate|undefined} value
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
*/
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.setTruck = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.clearTruck = function() {
  return this.setTruck(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.hasTruck = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ObjectTemplate bus = 7;
 * @return {?proto.apollo.perception.camera.ObjectTemplate}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.getBus = function() {
  return /** @type{?proto.apollo.perception.camera.ObjectTemplate} */ (
    jspb.Message.getWrapperField(this, proto.apollo.perception.camera.ObjectTemplate, 7));
};


/**
 * @param {?proto.apollo.perception.camera.ObjectTemplate|undefined} value
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
*/
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.setBus = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.clearBus = function() {
  return this.setBus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.hasBus = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ObjectTemplate cyclist = 8;
 * @return {?proto.apollo.perception.camera.ObjectTemplate}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.getCyclist = function() {
  return /** @type{?proto.apollo.perception.camera.ObjectTemplate} */ (
    jspb.Message.getWrapperField(this, proto.apollo.perception.camera.ObjectTemplate, 8));
};


/**
 * @param {?proto.apollo.perception.camera.ObjectTemplate|undefined} value
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
*/
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.setCyclist = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.clearCyclist = function() {
  return this.setCyclist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.hasCyclist = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ObjectTemplate motorcyclist = 9;
 * @return {?proto.apollo.perception.camera.ObjectTemplate}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.getMotorcyclist = function() {
  return /** @type{?proto.apollo.perception.camera.ObjectTemplate} */ (
    jspb.Message.getWrapperField(this, proto.apollo.perception.camera.ObjectTemplate, 9));
};


/**
 * @param {?proto.apollo.perception.camera.ObjectTemplate|undefined} value
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
*/
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.setMotorcyclist = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.clearMotorcyclist = function() {
  return this.setMotorcyclist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.hasMotorcyclist = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ObjectTemplate tricyclist = 10;
 * @return {?proto.apollo.perception.camera.ObjectTemplate}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.getTricyclist = function() {
  return /** @type{?proto.apollo.perception.camera.ObjectTemplate} */ (
    jspb.Message.getWrapperField(this, proto.apollo.perception.camera.ObjectTemplate, 10));
};


/**
 * @param {?proto.apollo.perception.camera.ObjectTemplate|undefined} value
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
*/
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.setTricyclist = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.clearTricyclist = function() {
  return this.setTricyclist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.hasTricyclist = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ObjectTemplate pedestrian = 11;
 * @return {?proto.apollo.perception.camera.ObjectTemplate}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.getPedestrian = function() {
  return /** @type{?proto.apollo.perception.camera.ObjectTemplate} */ (
    jspb.Message.getWrapperField(this, proto.apollo.perception.camera.ObjectTemplate, 11));
};


/**
 * @param {?proto.apollo.perception.camera.ObjectTemplate|undefined} value
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
*/
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.setPedestrian = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.clearPedestrian = function() {
  return this.setPedestrian(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.hasPedestrian = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ObjectTemplate trafficcone = 12;
 * @return {?proto.apollo.perception.camera.ObjectTemplate}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.getTrafficcone = function() {
  return /** @type{?proto.apollo.perception.camera.ObjectTemplate} */ (
    jspb.Message.getWrapperField(this, proto.apollo.perception.camera.ObjectTemplate, 12));
};


/**
 * @param {?proto.apollo.perception.camera.ObjectTemplate|undefined} value
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
*/
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.setTrafficcone = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.clearTrafficcone = function() {
  return this.setTrafficcone(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.hasTrafficcone = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional float max_dim_change_ratio = 21;
 * @return {number}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.getMaxDimChangeRatio = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 21, 0.1));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.setMaxDimChangeRatio = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.ObjectTemplateMeta} returns this
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.clearMaxDimChangeRatio = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.ObjectTemplateMeta.prototype.hasMaxDimChangeRatio = function() {
  return jspb.Message.getField(this, 21) != null;
};


goog.object.extend(exports, proto.apollo.perception.camera);
