// source: modules/drivers/gnss/proto/gnss.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var modules_common_proto_header_pb = require('../../../../modules/common/proto/header_pb.js');
goog.object.extend(proto, modules_common_proto_header_pb);
var modules_common_proto_geometry_pb = require('../../../../modules/common/proto/geometry_pb.js');
goog.object.extend(proto, modules_common_proto_geometry_pb);
goog.exportSymbol('proto.apollo.drivers.gnss.Gnss', null, global);
goog.exportSymbol('proto.apollo.drivers.gnss.Gnss.Type', null, global);
goog.exportSymbol('proto.apollo.drivers.gnss.RawData', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.gnss.Gnss = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.gnss.Gnss, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.gnss.Gnss.displayName = 'proto.apollo.drivers.gnss.Gnss';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.gnss.RawData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.gnss.RawData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.gnss.RawData.displayName = 'proto.apollo.drivers.gnss.RawData';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.gnss.Gnss.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.gnss.Gnss.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.gnss.Gnss} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.gnss.Gnss.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && modules_common_proto_header_pb.Header.toObject(includeInstance, f),
    measurementTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    velocityLatency: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    position: (f = msg.getPosition()) && modules_common_proto_geometry_pb.PointLLH.toObject(includeInstance, f),
    positionStdDev: (f = msg.getPositionStdDev()) && modules_common_proto_geometry_pb.Point3D.toObject(includeInstance, f),
    linearVelocity: (f = msg.getLinearVelocity()) && modules_common_proto_geometry_pb.Point3D.toObject(includeInstance, f),
    linearVelocityStdDev: (f = msg.getLinearVelocityStdDev()) && modules_common_proto_geometry_pb.Point3D.toObject(includeInstance, f),
    numSats: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    type: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    solutionStatus: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    positionType: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Gnss as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.gnss.Gnss.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.header;

  /** @type {?|undefined} */
  this.measurementTime;

  /** @type {?|undefined} */
  this.velocityLatency;

  /** @type {?|undefined} */
  this.position;

  /** @type {?|undefined} */
  this.positionStdDev;

  /** @type {?|undefined} */
  this.linearVelocity;

  /** @type {?|undefined} */
  this.linearVelocityStdDev;

  /** @type {?|undefined} */
  this.numSats;

  /** @type {?|undefined} */
  this.type;

  /** @type {?|undefined} */
  this.solutionStatus;

  /** @type {?|undefined} */
  this.positionType;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.gnss.Gnss.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.gnss.Gnss}
 */
proto.apollo.drivers.gnss.Gnss.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.gnss.Gnss();
  obj.header && jspb.Message.setWrapperField(
      msg, 1, modules_common_proto_header_pb.Header.fromObject(obj.header));
  obj.measurementTime != null && jspb.Message.setField(msg, 2, obj.measurementTime);
  obj.velocityLatency != null && jspb.Message.setField(msg, 3, obj.velocityLatency);
  obj.position && jspb.Message.setWrapperField(
      msg, 4, modules_common_proto_geometry_pb.PointLLH.fromObject(obj.position));
  obj.positionStdDev && jspb.Message.setWrapperField(
      msg, 5, modules_common_proto_geometry_pb.Point3D.fromObject(obj.positionStdDev));
  obj.linearVelocity && jspb.Message.setWrapperField(
      msg, 6, modules_common_proto_geometry_pb.Point3D.fromObject(obj.linearVelocity));
  obj.linearVelocityStdDev && jspb.Message.setWrapperField(
      msg, 7, modules_common_proto_geometry_pb.Point3D.fromObject(obj.linearVelocityStdDev));
  obj.numSats != null && jspb.Message.setField(msg, 8, obj.numSats);
  obj.type != null && jspb.Message.setField(msg, 9, obj.type);
  obj.solutionStatus != null && jspb.Message.setField(msg, 10, obj.solutionStatus);
  obj.positionType != null && jspb.Message.setField(msg, 11, obj.positionType);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.gnss.Gnss}
 */
proto.apollo.drivers.gnss.Gnss.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.gnss.Gnss;
  return proto.apollo.drivers.gnss.Gnss.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.gnss.Gnss} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.gnss.Gnss}
 */
proto.apollo.drivers.gnss.Gnss.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modules_common_proto_header_pb.Header;
      reader.readMessage(value,modules_common_proto_header_pb.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMeasurementTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setVelocityLatency(value);
      break;
    case 4:
      var value = new modules_common_proto_geometry_pb.PointLLH;
      reader.readMessage(value,modules_common_proto_geometry_pb.PointLLH.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    case 5:
      var value = new modules_common_proto_geometry_pb.Point3D;
      reader.readMessage(value,modules_common_proto_geometry_pb.Point3D.deserializeBinaryFromReader);
      msg.setPositionStdDev(value);
      break;
    case 6:
      var value = new modules_common_proto_geometry_pb.Point3D;
      reader.readMessage(value,modules_common_proto_geometry_pb.Point3D.deserializeBinaryFromReader);
      msg.setLinearVelocity(value);
      break;
    case 7:
      var value = new modules_common_proto_geometry_pb.Point3D;
      reader.readMessage(value,modules_common_proto_geometry_pb.Point3D.deserializeBinaryFromReader);
      msg.setLinearVelocityStdDev(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumSats(value);
      break;
    case 9:
      var value = /** @type {!proto.apollo.drivers.gnss.Gnss.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSolutionStatus(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPositionType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.gnss.Gnss.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.gnss.Gnss.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.gnss.Gnss} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.gnss.Gnss.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modules_common_proto_header_pb.Header.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      modules_common_proto_geometry_pb.PointLLH.serializeBinaryToWriter
    );
  }
  f = message.getPositionStdDev();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      modules_common_proto_geometry_pb.Point3D.serializeBinaryToWriter
    );
  }
  f = message.getLinearVelocity();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      modules_common_proto_geometry_pb.Point3D.serializeBinaryToWriter
    );
  }
  f = message.getLinearVelocityStdDev();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      modules_common_proto_geometry_pb.Point3D.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = /** @type {!proto.apollo.drivers.gnss.Gnss.Type} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.drivers.gnss.Gnss.Type = {
  INVALID: 0,
  PROPAGATED: 1,
  SINGLE: 2,
  PSRDIFF: 3,
  PPP: 4,
  RTK_FLOAT: 5,
  RTK_INTEGER: 6
};

/**
 * optional apollo.common.Header header = 1;
 * @return {?proto.apollo.common.Header}
 */
proto.apollo.drivers.gnss.Gnss.prototype.getHeader = function() {
  return /** @type{?proto.apollo.common.Header} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_header_pb.Header, 1));
};


/**
 * @param {?proto.apollo.common.Header|undefined} value
 * @return {!proto.apollo.drivers.gnss.Gnss} returns this
*/
proto.apollo.drivers.gnss.Gnss.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Gnss} returns this
 */
proto.apollo.drivers.gnss.Gnss.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Gnss.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double measurement_time = 2;
 * @return {number}
 */
proto.apollo.drivers.gnss.Gnss.prototype.getMeasurementTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.Gnss} returns this
 */
proto.apollo.drivers.gnss.Gnss.prototype.setMeasurementTime = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Gnss} returns this
 */
proto.apollo.drivers.gnss.Gnss.prototype.clearMeasurementTime = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Gnss.prototype.hasMeasurementTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float velocity_latency = 3;
 * @return {number}
 */
proto.apollo.drivers.gnss.Gnss.prototype.getVelocityLatency = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.Gnss} returns this
 */
proto.apollo.drivers.gnss.Gnss.prototype.setVelocityLatency = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Gnss} returns this
 */
proto.apollo.drivers.gnss.Gnss.prototype.clearVelocityLatency = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Gnss.prototype.hasVelocityLatency = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional apollo.common.PointLLH position = 4;
 * @return {?proto.apollo.common.PointLLH}
 */
proto.apollo.drivers.gnss.Gnss.prototype.getPosition = function() {
  return /** @type{?proto.apollo.common.PointLLH} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_geometry_pb.PointLLH, 4));
};


/**
 * @param {?proto.apollo.common.PointLLH|undefined} value
 * @return {!proto.apollo.drivers.gnss.Gnss} returns this
*/
proto.apollo.drivers.gnss.Gnss.prototype.setPosition = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Gnss} returns this
 */
proto.apollo.drivers.gnss.Gnss.prototype.clearPosition = function() {
  return this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Gnss.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional apollo.common.Point3D position_std_dev = 5;
 * @return {?proto.apollo.common.Point3D}
 */
proto.apollo.drivers.gnss.Gnss.prototype.getPositionStdDev = function() {
  return /** @type{?proto.apollo.common.Point3D} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_geometry_pb.Point3D, 5));
};


/**
 * @param {?proto.apollo.common.Point3D|undefined} value
 * @return {!proto.apollo.drivers.gnss.Gnss} returns this
*/
proto.apollo.drivers.gnss.Gnss.prototype.setPositionStdDev = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Gnss} returns this
 */
proto.apollo.drivers.gnss.Gnss.prototype.clearPositionStdDev = function() {
  return this.setPositionStdDev(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Gnss.prototype.hasPositionStdDev = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional apollo.common.Point3D linear_velocity = 6;
 * @return {?proto.apollo.common.Point3D}
 */
proto.apollo.drivers.gnss.Gnss.prototype.getLinearVelocity = function() {
  return /** @type{?proto.apollo.common.Point3D} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_geometry_pb.Point3D, 6));
};


/**
 * @param {?proto.apollo.common.Point3D|undefined} value
 * @return {!proto.apollo.drivers.gnss.Gnss} returns this
*/
proto.apollo.drivers.gnss.Gnss.prototype.setLinearVelocity = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Gnss} returns this
 */
proto.apollo.drivers.gnss.Gnss.prototype.clearLinearVelocity = function() {
  return this.setLinearVelocity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Gnss.prototype.hasLinearVelocity = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional apollo.common.Point3D linear_velocity_std_dev = 7;
 * @return {?proto.apollo.common.Point3D}
 */
proto.apollo.drivers.gnss.Gnss.prototype.getLinearVelocityStdDev = function() {
  return /** @type{?proto.apollo.common.Point3D} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_geometry_pb.Point3D, 7));
};


/**
 * @param {?proto.apollo.common.Point3D|undefined} value
 * @return {!proto.apollo.drivers.gnss.Gnss} returns this
*/
proto.apollo.drivers.gnss.Gnss.prototype.setLinearVelocityStdDev = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Gnss} returns this
 */
proto.apollo.drivers.gnss.Gnss.prototype.clearLinearVelocityStdDev = function() {
  return this.setLinearVelocityStdDev(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Gnss.prototype.hasLinearVelocityStdDev = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 num_sats = 8;
 * @return {number}
 */
proto.apollo.drivers.gnss.Gnss.prototype.getNumSats = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.Gnss} returns this
 */
proto.apollo.drivers.gnss.Gnss.prototype.setNumSats = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Gnss} returns this
 */
proto.apollo.drivers.gnss.Gnss.prototype.clearNumSats = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Gnss.prototype.hasNumSats = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Type type = 9;
 * @return {!proto.apollo.drivers.gnss.Gnss.Type}
 */
proto.apollo.drivers.gnss.Gnss.prototype.getType = function() {
  return /** @type {!proto.apollo.drivers.gnss.Gnss.Type} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.apollo.drivers.gnss.Gnss.Type} value
 * @return {!proto.apollo.drivers.gnss.Gnss} returns this
 */
proto.apollo.drivers.gnss.Gnss.prototype.setType = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Gnss} returns this
 */
proto.apollo.drivers.gnss.Gnss.prototype.clearType = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Gnss.prototype.hasType = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 solution_status = 10;
 * @return {number}
 */
proto.apollo.drivers.gnss.Gnss.prototype.getSolutionStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.Gnss} returns this
 */
proto.apollo.drivers.gnss.Gnss.prototype.setSolutionStatus = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Gnss} returns this
 */
proto.apollo.drivers.gnss.Gnss.prototype.clearSolutionStatus = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Gnss.prototype.hasSolutionStatus = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 position_type = 11;
 * @return {number}
 */
proto.apollo.drivers.gnss.Gnss.prototype.getPositionType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.Gnss} returns this
 */
proto.apollo.drivers.gnss.Gnss.prototype.setPositionType = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Gnss} returns this
 */
proto.apollo.drivers.gnss.Gnss.prototype.clearPositionType = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Gnss.prototype.hasPositionType = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.gnss.RawData.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.gnss.RawData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.gnss.RawData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.gnss.RawData.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && modules_common_proto_header_pb.Header.toObject(includeInstance, f),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of RawData as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.gnss.RawData.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.header;

  /** @type {?|undefined} */
  this.data;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.gnss.RawData.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.gnss.RawData}
 */
proto.apollo.drivers.gnss.RawData.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.gnss.RawData();
  obj.header && jspb.Message.setWrapperField(
      msg, 1, modules_common_proto_header_pb.Header.fromObject(obj.header));
  obj.data != null && jspb.Message.setField(msg, 2, obj.data);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.gnss.RawData}
 */
proto.apollo.drivers.gnss.RawData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.gnss.RawData;
  return proto.apollo.drivers.gnss.RawData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.gnss.RawData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.gnss.RawData}
 */
proto.apollo.drivers.gnss.RawData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modules_common_proto_header_pb.Header;
      reader.readMessage(value,modules_common_proto_header_pb.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.gnss.RawData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.gnss.RawData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.gnss.RawData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.gnss.RawData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modules_common_proto_header_pb.Header.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional apollo.common.Header header = 1;
 * @return {?proto.apollo.common.Header}
 */
proto.apollo.drivers.gnss.RawData.prototype.getHeader = function() {
  return /** @type{?proto.apollo.common.Header} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_header_pb.Header, 1));
};


/**
 * @param {?proto.apollo.common.Header|undefined} value
 * @return {!proto.apollo.drivers.gnss.RawData} returns this
*/
proto.apollo.drivers.gnss.RawData.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.gnss.RawData} returns this
 */
proto.apollo.drivers.gnss.RawData.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.RawData.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.apollo.drivers.gnss.RawData.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.apollo.drivers.gnss.RawData.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.apollo.drivers.gnss.RawData.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.apollo.drivers.gnss.RawData} returns this
 */
proto.apollo.drivers.gnss.RawData.prototype.setData = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.RawData} returns this
 */
proto.apollo.drivers.gnss.RawData.prototype.clearData = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.RawData.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.apollo.drivers.gnss);
