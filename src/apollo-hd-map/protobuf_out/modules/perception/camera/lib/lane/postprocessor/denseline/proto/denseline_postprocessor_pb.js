// source: modules/perception/camera/lib/lane/postprocessor/denseline/proto/denseline_postprocessor.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.apollo.perception.camera.lane.LanePostprocessorParam', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.perception.camera.lane.LanePostprocessorParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.perception.camera.lane.LanePostprocessorParam.displayName = 'proto.apollo.perception.camera.lane.LanePostprocessorParam';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.perception.camera.lane.LanePostprocessorParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.perception.camera.lane.LanePostprocessorParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    omitBottomLineNum: jspb.Message.getFieldWithDefault(msg, 1, 3),
    lanelineMapScoreThresh: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.4),
    lanelinePointScoreThresh: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.6),
    lanelinePointMinNumThresh: jspb.Message.getFieldWithDefault(msg, 4, 2),
    ccValidPixelsRatio: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 2.0),
    lanelineRejectDistThresh: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 50.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of LanePostprocessorParam as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.omitBottomLineNum;

  /** @type {?|undefined} */
  this.lanelineMapScoreThresh;

  /** @type {?|undefined} */
  this.lanelinePointScoreThresh;

  /** @type {?|undefined} */
  this.lanelinePointMinNumThresh;

  /** @type {?|undefined} */
  this.ccValidPixelsRatio;

  /** @type {?|undefined} */
  this.lanelineRejectDistThresh;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.perception.camera.lane.LanePostprocessorParam.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.perception.camera.lane.LanePostprocessorParam}
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.fromObject = function(obj) {
  var msg = new proto.apollo.perception.camera.lane.LanePostprocessorParam();
  obj.omitBottomLineNum != null && jspb.Message.setField(msg, 1, obj.omitBottomLineNum);
  obj.lanelineMapScoreThresh != null && jspb.Message.setField(msg, 2, obj.lanelineMapScoreThresh);
  obj.lanelinePointScoreThresh != null && jspb.Message.setField(msg, 3, obj.lanelinePointScoreThresh);
  obj.lanelinePointMinNumThresh != null && jspb.Message.setField(msg, 4, obj.lanelinePointMinNumThresh);
  obj.ccValidPixelsRatio != null && jspb.Message.setField(msg, 5, obj.ccValidPixelsRatio);
  obj.lanelineRejectDistThresh != null && jspb.Message.setField(msg, 6, obj.lanelineRejectDistThresh);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.perception.camera.lane.LanePostprocessorParam}
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.perception.camera.lane.LanePostprocessorParam;
  return proto.apollo.perception.camera.lane.LanePostprocessorParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.perception.camera.lane.LanePostprocessorParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.perception.camera.lane.LanePostprocessorParam}
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOmitBottomLineNum(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLanelineMapScoreThresh(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLanelinePointScoreThresh(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLanelinePointMinNumThresh(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCcValidPixelsRatio(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLanelineRejectDistThresh(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.perception.camera.lane.LanePostprocessorParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.perception.camera.lane.LanePostprocessorParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeFloat(
      6,
      f
    );
  }
};


/**
 * optional int32 omit_bottom_line_num = 1;
 * @return {number}
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.getOmitBottomLineNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 3));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.lane.LanePostprocessorParam} returns this
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.setOmitBottomLineNum = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.lane.LanePostprocessorParam} returns this
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.clearOmitBottomLineNum = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.hasOmitBottomLineNum = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float laneline_map_score_thresh = 2;
 * @return {number}
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.getLanelineMapScoreThresh = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.4));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.lane.LanePostprocessorParam} returns this
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.setLanelineMapScoreThresh = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.lane.LanePostprocessorParam} returns this
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.clearLanelineMapScoreThresh = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.hasLanelineMapScoreThresh = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float laneline_point_score_thresh = 3;
 * @return {number}
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.getLanelinePointScoreThresh = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.6));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.lane.LanePostprocessorParam} returns this
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.setLanelinePointScoreThresh = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.lane.LanePostprocessorParam} returns this
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.clearLanelinePointScoreThresh = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.hasLanelinePointScoreThresh = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 laneline_point_min_num_thresh = 4;
 * @return {number}
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.getLanelinePointMinNumThresh = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 2));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.lane.LanePostprocessorParam} returns this
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.setLanelinePointMinNumThresh = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.lane.LanePostprocessorParam} returns this
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.clearLanelinePointMinNumThresh = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.hasLanelinePointMinNumThresh = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional float cc_valid_pixels_ratio = 5;
 * @return {number}
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.getCcValidPixelsRatio = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 2.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.lane.LanePostprocessorParam} returns this
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.setCcValidPixelsRatio = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.lane.LanePostprocessorParam} returns this
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.clearCcValidPixelsRatio = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.hasCcValidPixelsRatio = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional float laneline_reject_dist_thresh = 6;
 * @return {number}
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.getLanelineRejectDistThresh = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 50.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.lane.LanePostprocessorParam} returns this
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.setLanelineRejectDistThresh = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.lane.LanePostprocessorParam} returns this
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.clearLanelineRejectDistThresh = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.lane.LanePostprocessorParam.prototype.hasLanelineRejectDistThresh = function() {
  return jspb.Message.getField(this, 6) != null;
};


goog.object.extend(exports, proto.apollo.perception.camera.lane);
