// source: modules/map/proto/map_road.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var modules_map_proto_map_geometry_pb = require('../../../modules/map/proto/map_geometry_pb.js');
goog.object.extend(proto, modules_map_proto_map_geometry_pb);
var modules_map_proto_map_id_pb = require('../../../modules/map/proto/map_id_pb.js');
goog.object.extend(proto, modules_map_proto_map_id_pb);
goog.exportSymbol('proto.apollo.hdmap.BoundaryEdge', null, global);
goog.exportSymbol('proto.apollo.hdmap.BoundaryEdge.Type', null, global);
goog.exportSymbol('proto.apollo.hdmap.BoundaryPolygon', null, global);
goog.exportSymbol('proto.apollo.hdmap.Road', null, global);
goog.exportSymbol('proto.apollo.hdmap.Road.Type', null, global);
goog.exportSymbol('proto.apollo.hdmap.RoadBoundary', null, global);
goog.exportSymbol('proto.apollo.hdmap.RoadROIBoundary', null, global);
goog.exportSymbol('proto.apollo.hdmap.RoadSection', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.hdmap.BoundaryEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.hdmap.BoundaryEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.hdmap.BoundaryEdge.displayName = 'proto.apollo.hdmap.BoundaryEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.hdmap.BoundaryPolygon = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.hdmap.BoundaryPolygon.repeatedFields_, null);
};
goog.inherits(proto.apollo.hdmap.BoundaryPolygon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.hdmap.BoundaryPolygon.displayName = 'proto.apollo.hdmap.BoundaryPolygon';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.hdmap.RoadBoundary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.hdmap.RoadBoundary.repeatedFields_, null);
};
goog.inherits(proto.apollo.hdmap.RoadBoundary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.hdmap.RoadBoundary.displayName = 'proto.apollo.hdmap.RoadBoundary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.hdmap.RoadROIBoundary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.hdmap.RoadROIBoundary.repeatedFields_, null);
};
goog.inherits(proto.apollo.hdmap.RoadROIBoundary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.hdmap.RoadROIBoundary.displayName = 'proto.apollo.hdmap.RoadROIBoundary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.hdmap.RoadSection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.hdmap.RoadSection.repeatedFields_, null);
};
goog.inherits(proto.apollo.hdmap.RoadSection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.hdmap.RoadSection.displayName = 'proto.apollo.hdmap.RoadSection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.hdmap.Road = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.hdmap.Road.repeatedFields_, null);
};
goog.inherits(proto.apollo.hdmap.Road, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.hdmap.Road.displayName = 'proto.apollo.hdmap.Road';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.hdmap.BoundaryEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.hdmap.BoundaryEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.hdmap.BoundaryEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.hdmap.BoundaryEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    curve: (f = msg.getCurve()) && modules_map_proto_map_geometry_pb.Curve.toObject(includeInstance, f),
    type: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of BoundaryEdge as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.hdmap.BoundaryEdge.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.curve;

  /** @type {?|undefined} */
  this.type;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.hdmap.BoundaryEdge.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.hdmap.BoundaryEdge}
 */
proto.apollo.hdmap.BoundaryEdge.fromObject = function(obj) {
  var msg = new proto.apollo.hdmap.BoundaryEdge();
  obj.curve && jspb.Message.setWrapperField(
      msg, 1, modules_map_proto_map_geometry_pb.Curve.fromObject(obj.curve));
  obj.type != null && jspb.Message.setField(msg, 2, obj.type);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.hdmap.BoundaryEdge}
 */
proto.apollo.hdmap.BoundaryEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.hdmap.BoundaryEdge;
  return proto.apollo.hdmap.BoundaryEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.hdmap.BoundaryEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.hdmap.BoundaryEdge}
 */
proto.apollo.hdmap.BoundaryEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modules_map_proto_map_geometry_pb.Curve;
      reader.readMessage(value,modules_map_proto_map_geometry_pb.Curve.deserializeBinaryFromReader);
      msg.setCurve(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.hdmap.BoundaryEdge.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.hdmap.BoundaryEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.hdmap.BoundaryEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.hdmap.BoundaryEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.hdmap.BoundaryEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurve();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modules_map_proto_map_geometry_pb.Curve.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.apollo.hdmap.BoundaryEdge.Type} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.hdmap.BoundaryEdge.Type = {
  UNKNOWN: 0,
  NORMAL: 1,
  LEFT_BOUNDARY: 2,
  RIGHT_BOUNDARY: 3
};

/**
 * optional Curve curve = 1;
 * @return {?proto.apollo.hdmap.Curve}
 */
proto.apollo.hdmap.BoundaryEdge.prototype.getCurve = function() {
  return /** @type{?proto.apollo.hdmap.Curve} */ (
    jspb.Message.getWrapperField(this, modules_map_proto_map_geometry_pb.Curve, 1));
};


/**
 * @param {?proto.apollo.hdmap.Curve|undefined} value
 * @return {!proto.apollo.hdmap.BoundaryEdge} returns this
*/
proto.apollo.hdmap.BoundaryEdge.prototype.setCurve = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.hdmap.BoundaryEdge} returns this
 */
proto.apollo.hdmap.BoundaryEdge.prototype.clearCurve = function() {
  return this.setCurve(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.hdmap.BoundaryEdge.prototype.hasCurve = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Type type = 2;
 * @return {!proto.apollo.hdmap.BoundaryEdge.Type}
 */
proto.apollo.hdmap.BoundaryEdge.prototype.getType = function() {
  return /** @type {!proto.apollo.hdmap.BoundaryEdge.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.apollo.hdmap.BoundaryEdge.Type} value
 * @return {!proto.apollo.hdmap.BoundaryEdge} returns this
 */
proto.apollo.hdmap.BoundaryEdge.prototype.setType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.hdmap.BoundaryEdge} returns this
 */
proto.apollo.hdmap.BoundaryEdge.prototype.clearType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.hdmap.BoundaryEdge.prototype.hasType = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.hdmap.BoundaryPolygon.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.hdmap.BoundaryPolygon.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.hdmap.BoundaryPolygon.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.hdmap.BoundaryPolygon} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.hdmap.BoundaryPolygon.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgeList: jspb.Message.toObjectList(msg.getEdgeList(),
    proto.apollo.hdmap.BoundaryEdge.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of BoundaryPolygon as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.hdmap.BoundaryPolygon.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.edgeList;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.hdmap.BoundaryPolygon.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.hdmap.BoundaryPolygon}
 */
proto.apollo.hdmap.BoundaryPolygon.fromObject = function(obj) {
  var msg = new proto.apollo.hdmap.BoundaryPolygon();
  obj.edgeList && jspb.Message.setRepeatedWrapperField(
      msg, 1, obj.edgeList.map(
          proto.apollo.hdmap.BoundaryEdge.fromObject));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.hdmap.BoundaryPolygon}
 */
proto.apollo.hdmap.BoundaryPolygon.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.hdmap.BoundaryPolygon;
  return proto.apollo.hdmap.BoundaryPolygon.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.hdmap.BoundaryPolygon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.hdmap.BoundaryPolygon}
 */
proto.apollo.hdmap.BoundaryPolygon.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.apollo.hdmap.BoundaryEdge;
      reader.readMessage(value,proto.apollo.hdmap.BoundaryEdge.deserializeBinaryFromReader);
      msg.addEdge(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.hdmap.BoundaryPolygon.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.hdmap.BoundaryPolygon.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.hdmap.BoundaryPolygon} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.hdmap.BoundaryPolygon.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.apollo.hdmap.BoundaryEdge.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BoundaryEdge edge = 1;
 * @return {!Array<!proto.apollo.hdmap.BoundaryEdge>}
 */
proto.apollo.hdmap.BoundaryPolygon.prototype.getEdgeList = function() {
  return /** @type{!Array<!proto.apollo.hdmap.BoundaryEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.hdmap.BoundaryEdge, 1));
};


/**
 * @param {!Array<!proto.apollo.hdmap.BoundaryEdge>} value
 * @return {!proto.apollo.hdmap.BoundaryPolygon} returns this
*/
proto.apollo.hdmap.BoundaryPolygon.prototype.setEdgeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.apollo.hdmap.BoundaryEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.hdmap.BoundaryEdge}
 */
proto.apollo.hdmap.BoundaryPolygon.prototype.addEdge = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.apollo.hdmap.BoundaryEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.hdmap.BoundaryPolygon} returns this
 */
proto.apollo.hdmap.BoundaryPolygon.prototype.clearEdgeList = function() {
  return this.setEdgeList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.hdmap.RoadBoundary.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.hdmap.RoadBoundary.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.hdmap.RoadBoundary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.hdmap.RoadBoundary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.hdmap.RoadBoundary.toObject = function(includeInstance, msg) {
  var f, obj = {
    outerPolygon: (f = msg.getOuterPolygon()) && proto.apollo.hdmap.BoundaryPolygon.toObject(includeInstance, f),
    holeList: jspb.Message.toObjectList(msg.getHoleList(),
    proto.apollo.hdmap.BoundaryPolygon.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of RoadBoundary as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.hdmap.RoadBoundary.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.outerPolygon;

  /** @type {?|undefined} */
  this.holeList;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.hdmap.RoadBoundary.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.hdmap.RoadBoundary}
 */
proto.apollo.hdmap.RoadBoundary.fromObject = function(obj) {
  var msg = new proto.apollo.hdmap.RoadBoundary();
  obj.outerPolygon && jspb.Message.setWrapperField(
      msg, 1, proto.apollo.hdmap.BoundaryPolygon.fromObject(obj.outerPolygon));
  obj.holeList && jspb.Message.setRepeatedWrapperField(
      msg, 2, obj.holeList.map(
          proto.apollo.hdmap.BoundaryPolygon.fromObject));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.hdmap.RoadBoundary}
 */
proto.apollo.hdmap.RoadBoundary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.hdmap.RoadBoundary;
  return proto.apollo.hdmap.RoadBoundary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.hdmap.RoadBoundary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.hdmap.RoadBoundary}
 */
proto.apollo.hdmap.RoadBoundary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.apollo.hdmap.BoundaryPolygon;
      reader.readMessage(value,proto.apollo.hdmap.BoundaryPolygon.deserializeBinaryFromReader);
      msg.setOuterPolygon(value);
      break;
    case 2:
      var value = new proto.apollo.hdmap.BoundaryPolygon;
      reader.readMessage(value,proto.apollo.hdmap.BoundaryPolygon.deserializeBinaryFromReader);
      msg.addHole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.hdmap.RoadBoundary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.hdmap.RoadBoundary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.hdmap.RoadBoundary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.hdmap.RoadBoundary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOuterPolygon();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.apollo.hdmap.BoundaryPolygon.serializeBinaryToWriter
    );
  }
  f = message.getHoleList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.apollo.hdmap.BoundaryPolygon.serializeBinaryToWriter
    );
  }
};


/**
 * optional BoundaryPolygon outer_polygon = 1;
 * @return {?proto.apollo.hdmap.BoundaryPolygon}
 */
proto.apollo.hdmap.RoadBoundary.prototype.getOuterPolygon = function() {
  return /** @type{?proto.apollo.hdmap.BoundaryPolygon} */ (
    jspb.Message.getWrapperField(this, proto.apollo.hdmap.BoundaryPolygon, 1));
};


/**
 * @param {?proto.apollo.hdmap.BoundaryPolygon|undefined} value
 * @return {!proto.apollo.hdmap.RoadBoundary} returns this
*/
proto.apollo.hdmap.RoadBoundary.prototype.setOuterPolygon = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.hdmap.RoadBoundary} returns this
 */
proto.apollo.hdmap.RoadBoundary.prototype.clearOuterPolygon = function() {
  return this.setOuterPolygon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.hdmap.RoadBoundary.prototype.hasOuterPolygon = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated BoundaryPolygon hole = 2;
 * @return {!Array<!proto.apollo.hdmap.BoundaryPolygon>}
 */
proto.apollo.hdmap.RoadBoundary.prototype.getHoleList = function() {
  return /** @type{!Array<!proto.apollo.hdmap.BoundaryPolygon>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.hdmap.BoundaryPolygon, 2));
};


/**
 * @param {!Array<!proto.apollo.hdmap.BoundaryPolygon>} value
 * @return {!proto.apollo.hdmap.RoadBoundary} returns this
*/
proto.apollo.hdmap.RoadBoundary.prototype.setHoleList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.apollo.hdmap.BoundaryPolygon=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.hdmap.BoundaryPolygon}
 */
proto.apollo.hdmap.RoadBoundary.prototype.addHole = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.apollo.hdmap.BoundaryPolygon, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.hdmap.RoadBoundary} returns this
 */
proto.apollo.hdmap.RoadBoundary.prototype.clearHoleList = function() {
  return this.setHoleList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.hdmap.RoadROIBoundary.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.hdmap.RoadROIBoundary.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.hdmap.RoadROIBoundary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.hdmap.RoadROIBoundary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.hdmap.RoadROIBoundary.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && modules_map_proto_map_id_pb.Id.toObject(includeInstance, f),
    roadBoundariesList: jspb.Message.toObjectList(msg.getRoadBoundariesList(),
    proto.apollo.hdmap.RoadBoundary.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of RoadROIBoundary as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.hdmap.RoadROIBoundary.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.id;

  /** @type {?|undefined} */
  this.roadBoundariesList;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.hdmap.RoadROIBoundary.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.hdmap.RoadROIBoundary}
 */
proto.apollo.hdmap.RoadROIBoundary.fromObject = function(obj) {
  var msg = new proto.apollo.hdmap.RoadROIBoundary();
  obj.id && jspb.Message.setWrapperField(
      msg, 1, modules_map_proto_map_id_pb.Id.fromObject(obj.id));
  obj.roadBoundariesList && jspb.Message.setRepeatedWrapperField(
      msg, 2, obj.roadBoundariesList.map(
          proto.apollo.hdmap.RoadBoundary.fromObject));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.hdmap.RoadROIBoundary}
 */
proto.apollo.hdmap.RoadROIBoundary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.hdmap.RoadROIBoundary;
  return proto.apollo.hdmap.RoadROIBoundary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.hdmap.RoadROIBoundary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.hdmap.RoadROIBoundary}
 */
proto.apollo.hdmap.RoadROIBoundary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modules_map_proto_map_id_pb.Id;
      reader.readMessage(value,modules_map_proto_map_id_pb.Id.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto.apollo.hdmap.RoadBoundary;
      reader.readMessage(value,proto.apollo.hdmap.RoadBoundary.deserializeBinaryFromReader);
      msg.addRoadBoundaries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.hdmap.RoadROIBoundary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.hdmap.RoadROIBoundary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.hdmap.RoadROIBoundary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.hdmap.RoadROIBoundary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modules_map_proto_map_id_pb.Id.serializeBinaryToWriter
    );
  }
  f = message.getRoadBoundariesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.apollo.hdmap.RoadBoundary.serializeBinaryToWriter
    );
  }
};


/**
 * optional Id id = 1;
 * @return {?proto.apollo.hdmap.Id}
 */
proto.apollo.hdmap.RoadROIBoundary.prototype.getId = function() {
  return /** @type{?proto.apollo.hdmap.Id} */ (
    jspb.Message.getWrapperField(this, modules_map_proto_map_id_pb.Id, 1));
};


/**
 * @param {?proto.apollo.hdmap.Id|undefined} value
 * @return {!proto.apollo.hdmap.RoadROIBoundary} returns this
*/
proto.apollo.hdmap.RoadROIBoundary.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.hdmap.RoadROIBoundary} returns this
 */
proto.apollo.hdmap.RoadROIBoundary.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.hdmap.RoadROIBoundary.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated RoadBoundary road_boundaries = 2;
 * @return {!Array<!proto.apollo.hdmap.RoadBoundary>}
 */
proto.apollo.hdmap.RoadROIBoundary.prototype.getRoadBoundariesList = function() {
  return /** @type{!Array<!proto.apollo.hdmap.RoadBoundary>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.hdmap.RoadBoundary, 2));
};


/**
 * @param {!Array<!proto.apollo.hdmap.RoadBoundary>} value
 * @return {!proto.apollo.hdmap.RoadROIBoundary} returns this
*/
proto.apollo.hdmap.RoadROIBoundary.prototype.setRoadBoundariesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.apollo.hdmap.RoadBoundary=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.hdmap.RoadBoundary}
 */
proto.apollo.hdmap.RoadROIBoundary.prototype.addRoadBoundaries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.apollo.hdmap.RoadBoundary, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.hdmap.RoadROIBoundary} returns this
 */
proto.apollo.hdmap.RoadROIBoundary.prototype.clearRoadBoundariesList = function() {
  return this.setRoadBoundariesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.hdmap.RoadSection.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.hdmap.RoadSection.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.hdmap.RoadSection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.hdmap.RoadSection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.hdmap.RoadSection.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && modules_map_proto_map_id_pb.Id.toObject(includeInstance, f),
    laneIdList: jspb.Message.toObjectList(msg.getLaneIdList(),
    modules_map_proto_map_id_pb.Id.toObject, includeInstance),
    boundary: (f = msg.getBoundary()) && proto.apollo.hdmap.RoadBoundary.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of RoadSection as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.hdmap.RoadSection.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.id;

  /** @type {?|undefined} */
  this.laneIdList;

  /** @type {?|undefined} */
  this.boundary;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.hdmap.RoadSection.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.hdmap.RoadSection}
 */
proto.apollo.hdmap.RoadSection.fromObject = function(obj) {
  var msg = new proto.apollo.hdmap.RoadSection();
  obj.id && jspb.Message.setWrapperField(
      msg, 1, modules_map_proto_map_id_pb.Id.fromObject(obj.id));
  obj.laneIdList && jspb.Message.setRepeatedWrapperField(
      msg, 2, obj.laneIdList.map(
          modules_map_proto_map_id_pb.Id.fromObject));
  obj.boundary && jspb.Message.setWrapperField(
      msg, 3, proto.apollo.hdmap.RoadBoundary.fromObject(obj.boundary));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.hdmap.RoadSection}
 */
proto.apollo.hdmap.RoadSection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.hdmap.RoadSection;
  return proto.apollo.hdmap.RoadSection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.hdmap.RoadSection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.hdmap.RoadSection}
 */
proto.apollo.hdmap.RoadSection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modules_map_proto_map_id_pb.Id;
      reader.readMessage(value,modules_map_proto_map_id_pb.Id.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new modules_map_proto_map_id_pb.Id;
      reader.readMessage(value,modules_map_proto_map_id_pb.Id.deserializeBinaryFromReader);
      msg.addLaneId(value);
      break;
    case 3:
      var value = new proto.apollo.hdmap.RoadBoundary;
      reader.readMessage(value,proto.apollo.hdmap.RoadBoundary.deserializeBinaryFromReader);
      msg.setBoundary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.hdmap.RoadSection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.hdmap.RoadSection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.hdmap.RoadSection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.hdmap.RoadSection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modules_map_proto_map_id_pb.Id.serializeBinaryToWriter
    );
  }
  f = message.getLaneIdList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      modules_map_proto_map_id_pb.Id.serializeBinaryToWriter
    );
  }
  f = message.getBoundary();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.apollo.hdmap.RoadBoundary.serializeBinaryToWriter
    );
  }
};


/**
 * optional Id id = 1;
 * @return {?proto.apollo.hdmap.Id}
 */
proto.apollo.hdmap.RoadSection.prototype.getId = function() {
  return /** @type{?proto.apollo.hdmap.Id} */ (
    jspb.Message.getWrapperField(this, modules_map_proto_map_id_pb.Id, 1));
};


/**
 * @param {?proto.apollo.hdmap.Id|undefined} value
 * @return {!proto.apollo.hdmap.RoadSection} returns this
*/
proto.apollo.hdmap.RoadSection.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.hdmap.RoadSection} returns this
 */
proto.apollo.hdmap.RoadSection.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.hdmap.RoadSection.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Id lane_id = 2;
 * @return {!Array<!proto.apollo.hdmap.Id>}
 */
proto.apollo.hdmap.RoadSection.prototype.getLaneIdList = function() {
  return /** @type{!Array<!proto.apollo.hdmap.Id>} */ (
    jspb.Message.getRepeatedWrapperField(this, modules_map_proto_map_id_pb.Id, 2));
};


/**
 * @param {!Array<!proto.apollo.hdmap.Id>} value
 * @return {!proto.apollo.hdmap.RoadSection} returns this
*/
proto.apollo.hdmap.RoadSection.prototype.setLaneIdList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.apollo.hdmap.Id=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.hdmap.Id}
 */
proto.apollo.hdmap.RoadSection.prototype.addLaneId = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.apollo.hdmap.Id, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.hdmap.RoadSection} returns this
 */
proto.apollo.hdmap.RoadSection.prototype.clearLaneIdList = function() {
  return this.setLaneIdList([]);
};


/**
 * optional RoadBoundary boundary = 3;
 * @return {?proto.apollo.hdmap.RoadBoundary}
 */
proto.apollo.hdmap.RoadSection.prototype.getBoundary = function() {
  return /** @type{?proto.apollo.hdmap.RoadBoundary} */ (
    jspb.Message.getWrapperField(this, proto.apollo.hdmap.RoadBoundary, 3));
};


/**
 * @param {?proto.apollo.hdmap.RoadBoundary|undefined} value
 * @return {!proto.apollo.hdmap.RoadSection} returns this
*/
proto.apollo.hdmap.RoadSection.prototype.setBoundary = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.hdmap.RoadSection} returns this
 */
proto.apollo.hdmap.RoadSection.prototype.clearBoundary = function() {
  return this.setBoundary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.hdmap.RoadSection.prototype.hasBoundary = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.hdmap.Road.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.hdmap.Road.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.hdmap.Road.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.hdmap.Road} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.hdmap.Road.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && modules_map_proto_map_id_pb.Id.toObject(includeInstance, f),
    sectionList: jspb.Message.toObjectList(msg.getSectionList(),
    proto.apollo.hdmap.RoadSection.toObject, includeInstance),
    junctionId: (f = msg.getJunctionId()) && modules_map_proto_map_id_pb.Id.toObject(includeInstance, f),
    type: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Road as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.hdmap.Road.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.id;

  /** @type {?|undefined} */
  this.sectionList;

  /** @type {?|undefined} */
  this.junctionId;

  /** @type {?|undefined} */
  this.type;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.hdmap.Road.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.hdmap.Road}
 */
proto.apollo.hdmap.Road.fromObject = function(obj) {
  var msg = new proto.apollo.hdmap.Road();
  obj.id && jspb.Message.setWrapperField(
      msg, 1, modules_map_proto_map_id_pb.Id.fromObject(obj.id));
  obj.sectionList && jspb.Message.setRepeatedWrapperField(
      msg, 2, obj.sectionList.map(
          proto.apollo.hdmap.RoadSection.fromObject));
  obj.junctionId && jspb.Message.setWrapperField(
      msg, 3, modules_map_proto_map_id_pb.Id.fromObject(obj.junctionId));
  obj.type != null && jspb.Message.setField(msg, 4, obj.type);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.hdmap.Road}
 */
proto.apollo.hdmap.Road.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.hdmap.Road;
  return proto.apollo.hdmap.Road.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.hdmap.Road} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.hdmap.Road}
 */
proto.apollo.hdmap.Road.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modules_map_proto_map_id_pb.Id;
      reader.readMessage(value,modules_map_proto_map_id_pb.Id.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto.apollo.hdmap.RoadSection;
      reader.readMessage(value,proto.apollo.hdmap.RoadSection.deserializeBinaryFromReader);
      msg.addSection(value);
      break;
    case 3:
      var value = new modules_map_proto_map_id_pb.Id;
      reader.readMessage(value,modules_map_proto_map_id_pb.Id.deserializeBinaryFromReader);
      msg.setJunctionId(value);
      break;
    case 4:
      var value = /** @type {!proto.apollo.hdmap.Road.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.hdmap.Road.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.hdmap.Road.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.hdmap.Road} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.hdmap.Road.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modules_map_proto_map_id_pb.Id.serializeBinaryToWriter
    );
  }
  f = message.getSectionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.apollo.hdmap.RoadSection.serializeBinaryToWriter
    );
  }
  f = message.getJunctionId();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      modules_map_proto_map_id_pb.Id.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.apollo.hdmap.Road.Type} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.hdmap.Road.Type = {
  UNKNOWN: 0,
  HIGHWAY: 1,
  CITY_ROAD: 2,
  PARK: 3
};

/**
 * optional Id id = 1;
 * @return {?proto.apollo.hdmap.Id}
 */
proto.apollo.hdmap.Road.prototype.getId = function() {
  return /** @type{?proto.apollo.hdmap.Id} */ (
    jspb.Message.getWrapperField(this, modules_map_proto_map_id_pb.Id, 1));
};


/**
 * @param {?proto.apollo.hdmap.Id|undefined} value
 * @return {!proto.apollo.hdmap.Road} returns this
*/
proto.apollo.hdmap.Road.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.hdmap.Road} returns this
 */
proto.apollo.hdmap.Road.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.hdmap.Road.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated RoadSection section = 2;
 * @return {!Array<!proto.apollo.hdmap.RoadSection>}
 */
proto.apollo.hdmap.Road.prototype.getSectionList = function() {
  return /** @type{!Array<!proto.apollo.hdmap.RoadSection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.hdmap.RoadSection, 2));
};


/**
 * @param {!Array<!proto.apollo.hdmap.RoadSection>} value
 * @return {!proto.apollo.hdmap.Road} returns this
*/
proto.apollo.hdmap.Road.prototype.setSectionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.apollo.hdmap.RoadSection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.hdmap.RoadSection}
 */
proto.apollo.hdmap.Road.prototype.addSection = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.apollo.hdmap.RoadSection, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.hdmap.Road} returns this
 */
proto.apollo.hdmap.Road.prototype.clearSectionList = function() {
  return this.setSectionList([]);
};


/**
 * optional Id junction_id = 3;
 * @return {?proto.apollo.hdmap.Id}
 */
proto.apollo.hdmap.Road.prototype.getJunctionId = function() {
  return /** @type{?proto.apollo.hdmap.Id} */ (
    jspb.Message.getWrapperField(this, modules_map_proto_map_id_pb.Id, 3));
};


/**
 * @param {?proto.apollo.hdmap.Id|undefined} value
 * @return {!proto.apollo.hdmap.Road} returns this
*/
proto.apollo.hdmap.Road.prototype.setJunctionId = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.hdmap.Road} returns this
 */
proto.apollo.hdmap.Road.prototype.clearJunctionId = function() {
  return this.setJunctionId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.hdmap.Road.prototype.hasJunctionId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Type type = 4;
 * @return {!proto.apollo.hdmap.Road.Type}
 */
proto.apollo.hdmap.Road.prototype.getType = function() {
  return /** @type {!proto.apollo.hdmap.Road.Type} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.apollo.hdmap.Road.Type} value
 * @return {!proto.apollo.hdmap.Road} returns this
 */
proto.apollo.hdmap.Road.prototype.setType = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.hdmap.Road} returns this
 */
proto.apollo.hdmap.Road.prototype.clearType = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.hdmap.Road.prototype.hasType = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.apollo.hdmap);
