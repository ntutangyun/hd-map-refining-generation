// source: modules/drivers/gnss/proto/heading.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var modules_common_proto_header_pb = require('../../../../modules/common/proto/header_pb.js');
goog.object.extend(proto, modules_common_proto_header_pb);
goog.exportSymbol('proto.apollo.drivers.gnss.Heading', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.gnss.Heading = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.gnss.Heading, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.gnss.Heading.displayName = 'proto.apollo.drivers.gnss.Heading';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.gnss.Heading.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.gnss.Heading.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.gnss.Heading} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.gnss.Heading.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && modules_common_proto_header_pb.Header.toObject(includeInstance, f),
    measurementTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    solutionStatus: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    positionType: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    baselineLength: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    heading: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    pitch: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    reserved: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    headingStdDev: (f = jspb.Message.getOptionalFloatingPointField(msg, 9)) == null ? undefined : f,
    pitchStdDev: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    stationId: msg.getStationId_asB64(),
    satelliteTrackedNumber: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    satelliteSoulutionNumber: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    satelliteNumberObs: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    satelliteNumberMulti: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
    solutionSource: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    extendedSolutionStatus: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    galileoBeidouSigMask: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
    gpsGlonassSigMask: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Heading as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.gnss.Heading.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.header;

  /** @type {?|undefined} */
  this.measurementTime;

  /** @type {?|undefined} */
  this.solutionStatus;

  /** @type {?|undefined} */
  this.positionType;

  /** @type {?|undefined} */
  this.baselineLength;

  /** @type {?|undefined} */
  this.heading;

  /** @type {?|undefined} */
  this.pitch;

  /** @type {?|undefined} */
  this.reserved;

  /** @type {?|undefined} */
  this.headingStdDev;

  /** @type {?|undefined} */
  this.pitchStdDev;

  /** @type {?|undefined} */
  this.stationId;

  /** @type {?|undefined} */
  this.satelliteTrackedNumber;

  /** @type {?|undefined} */
  this.satelliteSoulutionNumber;

  /** @type {?|undefined} */
  this.satelliteNumberObs;

  /** @type {?|undefined} */
  this.satelliteNumberMulti;

  /** @type {?|undefined} */
  this.solutionSource;

  /** @type {?|undefined} */
  this.extendedSolutionStatus;

  /** @type {?|undefined} */
  this.galileoBeidouSigMask;

  /** @type {?|undefined} */
  this.gpsGlonassSigMask;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.gnss.Heading.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.gnss.Heading}
 */
proto.apollo.drivers.gnss.Heading.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.gnss.Heading();
  obj.header && jspb.Message.setWrapperField(
      msg, 1, modules_common_proto_header_pb.Header.fromObject(obj.header));
  obj.measurementTime != null && jspb.Message.setField(msg, 2, obj.measurementTime);
  obj.solutionStatus != null && jspb.Message.setField(msg, 3, obj.solutionStatus);
  obj.positionType != null && jspb.Message.setField(msg, 4, obj.positionType);
  obj.baselineLength != null && jspb.Message.setField(msg, 5, obj.baselineLength);
  obj.heading != null && jspb.Message.setField(msg, 6, obj.heading);
  obj.pitch != null && jspb.Message.setField(msg, 7, obj.pitch);
  obj.reserved != null && jspb.Message.setField(msg, 8, obj.reserved);
  obj.headingStdDev != null && jspb.Message.setField(msg, 9, obj.headingStdDev);
  obj.pitchStdDev != null && jspb.Message.setField(msg, 10, obj.pitchStdDev);
  obj.stationId != null && jspb.Message.setField(msg, 11, obj.stationId);
  obj.satelliteTrackedNumber != null && jspb.Message.setField(msg, 12, obj.satelliteTrackedNumber);
  obj.satelliteSoulutionNumber != null && jspb.Message.setField(msg, 13, obj.satelliteSoulutionNumber);
  obj.satelliteNumberObs != null && jspb.Message.setField(msg, 14, obj.satelliteNumberObs);
  obj.satelliteNumberMulti != null && jspb.Message.setField(msg, 15, obj.satelliteNumberMulti);
  obj.solutionSource != null && jspb.Message.setField(msg, 16, obj.solutionSource);
  obj.extendedSolutionStatus != null && jspb.Message.setField(msg, 17, obj.extendedSolutionStatus);
  obj.galileoBeidouSigMask != null && jspb.Message.setField(msg, 18, obj.galileoBeidouSigMask);
  obj.gpsGlonassSigMask != null && jspb.Message.setField(msg, 19, obj.gpsGlonassSigMask);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.gnss.Heading}
 */
proto.apollo.drivers.gnss.Heading.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.gnss.Heading;
  return proto.apollo.drivers.gnss.Heading.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.gnss.Heading} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.gnss.Heading}
 */
proto.apollo.drivers.gnss.Heading.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modules_common_proto_header_pb.Header;
      reader.readMessage(value,modules_common_proto_header_pb.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMeasurementTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSolutionStatus(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPositionType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBaselineLength(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setHeading(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPitch(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setReserved(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setHeadingStdDev(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPitchStdDev(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setStationId(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSatelliteTrackedNumber(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSatelliteSoulutionNumber(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSatelliteNumberObs(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSatelliteNumberMulti(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSolutionSource(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setExtendedSolutionStatus(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGalileoBeidouSigMask(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGpsGlonassSigMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.gnss.Heading.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.gnss.Heading.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.gnss.Heading} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.gnss.Heading.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modules_common_proto_header_pb.Header.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBytes(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint32(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeUint32(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeUint32(
      19,
      f
    );
  }
};


/**
 * optional apollo.common.Header header = 1;
 * @return {?proto.apollo.common.Header}
 */
proto.apollo.drivers.gnss.Heading.prototype.getHeader = function() {
  return /** @type{?proto.apollo.common.Header} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_header_pb.Header, 1));
};


/**
 * @param {?proto.apollo.common.Header|undefined} value
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
*/
proto.apollo.drivers.gnss.Heading.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Heading.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double measurement_time = 2;
 * @return {number}
 */
proto.apollo.drivers.gnss.Heading.prototype.getMeasurementTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.setMeasurementTime = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.clearMeasurementTime = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Heading.prototype.hasMeasurementTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 solution_status = 3;
 * @return {number}
 */
proto.apollo.drivers.gnss.Heading.prototype.getSolutionStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.setSolutionStatus = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.clearSolutionStatus = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Heading.prototype.hasSolutionStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 position_type = 4;
 * @return {number}
 */
proto.apollo.drivers.gnss.Heading.prototype.getPositionType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.setPositionType = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.clearPositionType = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Heading.prototype.hasPositionType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional float baseline_length = 5;
 * @return {number}
 */
proto.apollo.drivers.gnss.Heading.prototype.getBaselineLength = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.setBaselineLength = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.clearBaselineLength = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Heading.prototype.hasBaselineLength = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional float heading = 6;
 * @return {number}
 */
proto.apollo.drivers.gnss.Heading.prototype.getHeading = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.setHeading = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.clearHeading = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Heading.prototype.hasHeading = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional float pitch = 7;
 * @return {number}
 */
proto.apollo.drivers.gnss.Heading.prototype.getPitch = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.setPitch = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.clearPitch = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Heading.prototype.hasPitch = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional float reserved = 8;
 * @return {number}
 */
proto.apollo.drivers.gnss.Heading.prototype.getReserved = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.setReserved = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.clearReserved = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Heading.prototype.hasReserved = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional float heading_std_dev = 9;
 * @return {number}
 */
proto.apollo.drivers.gnss.Heading.prototype.getHeadingStdDev = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.setHeadingStdDev = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.clearHeadingStdDev = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Heading.prototype.hasHeadingStdDev = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional float pitch_std_dev = 10;
 * @return {number}
 */
proto.apollo.drivers.gnss.Heading.prototype.getPitchStdDev = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.setPitchStdDev = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.clearPitchStdDev = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Heading.prototype.hasPitchStdDev = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bytes station_id = 11;
 * @return {!(string|Uint8Array)}
 */
proto.apollo.drivers.gnss.Heading.prototype.getStationId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes station_id = 11;
 * This is a type-conversion wrapper around `getStationId()`
 * @return {string}
 */
proto.apollo.drivers.gnss.Heading.prototype.getStationId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getStationId()));
};


/**
 * optional bytes station_id = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getStationId()`
 * @return {!Uint8Array}
 */
proto.apollo.drivers.gnss.Heading.prototype.getStationId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getStationId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.setStationId = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.clearStationId = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Heading.prototype.hasStationId = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 satellite_tracked_number = 12;
 * @return {number}
 */
proto.apollo.drivers.gnss.Heading.prototype.getSatelliteTrackedNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.setSatelliteTrackedNumber = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.clearSatelliteTrackedNumber = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Heading.prototype.hasSatelliteTrackedNumber = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint32 satellite_soulution_number = 13;
 * @return {number}
 */
proto.apollo.drivers.gnss.Heading.prototype.getSatelliteSoulutionNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.setSatelliteSoulutionNumber = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.clearSatelliteSoulutionNumber = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Heading.prototype.hasSatelliteSoulutionNumber = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint32 satellite_number_obs = 14;
 * @return {number}
 */
proto.apollo.drivers.gnss.Heading.prototype.getSatelliteNumberObs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.setSatelliteNumberObs = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.clearSatelliteNumberObs = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Heading.prototype.hasSatelliteNumberObs = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 satellite_number_multi = 15;
 * @return {number}
 */
proto.apollo.drivers.gnss.Heading.prototype.getSatelliteNumberMulti = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.setSatelliteNumberMulti = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.clearSatelliteNumberMulti = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Heading.prototype.hasSatelliteNumberMulti = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint32 solution_source = 16;
 * @return {number}
 */
proto.apollo.drivers.gnss.Heading.prototype.getSolutionSource = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.setSolutionSource = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.clearSolutionSource = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Heading.prototype.hasSolutionSource = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint32 extended_solution_status = 17;
 * @return {number}
 */
proto.apollo.drivers.gnss.Heading.prototype.getExtendedSolutionStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.setExtendedSolutionStatus = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.clearExtendedSolutionStatus = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Heading.prototype.hasExtendedSolutionStatus = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional uint32 galileo_beidou_sig_mask = 18;
 * @return {number}
 */
proto.apollo.drivers.gnss.Heading.prototype.getGalileoBeidouSigMask = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.setGalileoBeidouSigMask = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.clearGalileoBeidouSigMask = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Heading.prototype.hasGalileoBeidouSigMask = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional uint32 gps_glonass_sig_mask = 19;
 * @return {number}
 */
proto.apollo.drivers.gnss.Heading.prototype.getGpsGlonassSigMask = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.setGpsGlonassSigMask = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.Heading} returns this
 */
proto.apollo.drivers.gnss.Heading.prototype.clearGpsGlonassSigMask = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.Heading.prototype.hasGpsGlonassSigMask = function() {
  return jspb.Message.getField(this, 19) != null;
};


goog.object.extend(exports, proto.apollo.drivers.gnss);
