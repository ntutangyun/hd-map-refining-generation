// source: modules/prediction/proto/network_model.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var modules_prediction_proto_network_layers_pb = require('../../../modules/prediction/proto/network_layers_pb.js');
goog.object.extend(proto, modules_prediction_proto_network_layers_pb);
goog.exportSymbol('proto.apollo.prediction.NetParameter', null, global);
goog.exportSymbol('proto.apollo.prediction.Performance', null, global);
goog.exportSymbol('proto.apollo.prediction.VerificationSample', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.prediction.VerificationSample = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.prediction.VerificationSample.repeatedFields_, null);
};
goog.inherits(proto.apollo.prediction.VerificationSample, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.prediction.VerificationSample.displayName = 'proto.apollo.prediction.VerificationSample';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.prediction.Performance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.prediction.Performance.repeatedFields_, null);
};
goog.inherits(proto.apollo.prediction.Performance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.prediction.Performance.displayName = 'proto.apollo.prediction.Performance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.prediction.NetParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.prediction.NetParameter.repeatedFields_, null);
};
goog.inherits(proto.apollo.prediction.NetParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.prediction.NetParameter.displayName = 'proto.apollo.prediction.NetParameter';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.prediction.VerificationSample.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.prediction.VerificationSample.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.prediction.VerificationSample.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.prediction.VerificationSample} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.VerificationSample.toObject = function(includeInstance, msg) {
  var f, obj = {
    featuresList: jspb.Message.toObjectList(msg.getFeaturesList(),
    modules_prediction_proto_network_layers_pb.TensorParameter.toObject, includeInstance),
    probability: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    distance: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of VerificationSample as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.prediction.VerificationSample.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.featuresList;

  /** @type {?|undefined} */
  this.probability;

  /** @type {?|undefined} */
  this.distance;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.prediction.VerificationSample.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.prediction.VerificationSample}
 */
proto.apollo.prediction.VerificationSample.fromObject = function(obj) {
  var msg = new proto.apollo.prediction.VerificationSample();
  obj.featuresList && jspb.Message.setRepeatedWrapperField(
      msg, 1, obj.featuresList.map(
          modules_prediction_proto_network_layers_pb.TensorParameter.fromObject));
  obj.probability != null && jspb.Message.setField(msg, 2, obj.probability);
  obj.distance != null && jspb.Message.setField(msg, 3, obj.distance);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.prediction.VerificationSample}
 */
proto.apollo.prediction.VerificationSample.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.prediction.VerificationSample;
  return proto.apollo.prediction.VerificationSample.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.prediction.VerificationSample} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.prediction.VerificationSample}
 */
proto.apollo.prediction.VerificationSample.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modules_prediction_proto_network_layers_pb.TensorParameter;
      reader.readMessage(value,modules_prediction_proto_network_layers_pb.TensorParameter.deserializeBinaryFromReader);
      msg.addFeatures(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setProbability(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDistance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.prediction.VerificationSample.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.prediction.VerificationSample.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.prediction.VerificationSample} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.VerificationSample.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeaturesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      modules_prediction_proto_network_layers_pb.TensorParameter.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * repeated TensorParameter features = 1;
 * @return {!Array<!proto.apollo.prediction.TensorParameter>}
 */
proto.apollo.prediction.VerificationSample.prototype.getFeaturesList = function() {
  return /** @type{!Array<!proto.apollo.prediction.TensorParameter>} */ (
    jspb.Message.getRepeatedWrapperField(this, modules_prediction_proto_network_layers_pb.TensorParameter, 1));
};


/**
 * @param {!Array<!proto.apollo.prediction.TensorParameter>} value
 * @return {!proto.apollo.prediction.VerificationSample} returns this
*/
proto.apollo.prediction.VerificationSample.prototype.setFeaturesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.apollo.prediction.TensorParameter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.prediction.TensorParameter}
 */
proto.apollo.prediction.VerificationSample.prototype.addFeatures = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.apollo.prediction.TensorParameter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.prediction.VerificationSample} returns this
 */
proto.apollo.prediction.VerificationSample.prototype.clearFeaturesList = function() {
  return this.setFeaturesList([]);
};


/**
 * optional float probability = 2;
 * @return {number}
 */
proto.apollo.prediction.VerificationSample.prototype.getProbability = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.prediction.VerificationSample} returns this
 */
proto.apollo.prediction.VerificationSample.prototype.setProbability = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.VerificationSample} returns this
 */
proto.apollo.prediction.VerificationSample.prototype.clearProbability = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.VerificationSample.prototype.hasProbability = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float distance = 3;
 * @return {number}
 */
proto.apollo.prediction.VerificationSample.prototype.getDistance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.prediction.VerificationSample} returns this
 */
proto.apollo.prediction.VerificationSample.prototype.setDistance = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.VerificationSample} returns this
 */
proto.apollo.prediction.VerificationSample.prototype.clearDistance = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.VerificationSample.prototype.hasDistance = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.prediction.Performance.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.prediction.Performance.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.prediction.Performance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.prediction.Performance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.Performance.toObject = function(includeInstance, msg) {
  var f, obj = {
    accuracyList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f,
    recallList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f,
    precisionList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Performance as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.prediction.Performance.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.accuracyList;

  /** @type {?|undefined} */
  this.recallList;

  /** @type {?|undefined} */
  this.precisionList;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.prediction.Performance.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.prediction.Performance}
 */
proto.apollo.prediction.Performance.fromObject = function(obj) {
  var msg = new proto.apollo.prediction.Performance();
  obj.accuracyList != null && jspb.Message.setField(msg, 1, obj.accuracyList);
  obj.recallList != null && jspb.Message.setField(msg, 2, obj.recallList);
  obj.precisionList != null && jspb.Message.setField(msg, 3, obj.precisionList);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.prediction.Performance}
 */
proto.apollo.prediction.Performance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.prediction.Performance;
  return proto.apollo.prediction.Performance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.prediction.Performance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.prediction.Performance}
 */
proto.apollo.prediction.Performance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addAccuracy(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRecall(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPrecision(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.prediction.Performance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.prediction.Performance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.prediction.Performance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.Performance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccuracyList();
  if (f.length > 0) {
    writer.writeRepeatedFloat(
      1,
      f
    );
  }
  f = message.getRecallList();
  if (f.length > 0) {
    writer.writeRepeatedFloat(
      2,
      f
    );
  }
  f = message.getPrecisionList();
  if (f.length > 0) {
    writer.writeRepeatedFloat(
      3,
      f
    );
  }
};


/**
 * repeated float accuracy = 1;
 * @return {!Array<number>}
 */
proto.apollo.prediction.Performance.prototype.getAccuracyList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.apollo.prediction.Performance} returns this
 */
proto.apollo.prediction.Performance.prototype.setAccuracyList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.apollo.prediction.Performance} returns this
 */
proto.apollo.prediction.Performance.prototype.addAccuracy = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.prediction.Performance} returns this
 */
proto.apollo.prediction.Performance.prototype.clearAccuracyList = function() {
  return this.setAccuracyList([]);
};


/**
 * repeated float recall = 2;
 * @return {!Array<number>}
 */
proto.apollo.prediction.Performance.prototype.getRecallList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.apollo.prediction.Performance} returns this
 */
proto.apollo.prediction.Performance.prototype.setRecallList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.apollo.prediction.Performance} returns this
 */
proto.apollo.prediction.Performance.prototype.addRecall = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.prediction.Performance} returns this
 */
proto.apollo.prediction.Performance.prototype.clearRecallList = function() {
  return this.setRecallList([]);
};


/**
 * repeated float precision = 3;
 * @return {!Array<number>}
 */
proto.apollo.prediction.Performance.prototype.getPrecisionList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.apollo.prediction.Performance} returns this
 */
proto.apollo.prediction.Performance.prototype.setPrecisionList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.apollo.prediction.Performance} returns this
 */
proto.apollo.prediction.Performance.prototype.addPrecision = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.prediction.Performance} returns this
 */
proto.apollo.prediction.Performance.prototype.clearPrecisionList = function() {
  return this.setPrecisionList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.prediction.NetParameter.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.prediction.NetParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.prediction.NetParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.prediction.NetParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.NetParameter.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    layersList: jspb.Message.toObjectList(msg.getLayersList(),
    modules_prediction_proto_network_layers_pb.LayerParameter.toObject, includeInstance),
    verificationSamplesList: jspb.Message.toObjectList(msg.getVerificationSamplesList(),
    proto.apollo.prediction.VerificationSample.toObject, includeInstance),
    performance: (f = msg.getPerformance()) && proto.apollo.prediction.Performance.toObject(includeInstance, f),
    timeDumped: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of NetParameter as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.prediction.NetParameter.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.id;

  /** @type {?|undefined} */
  this.name;

  /** @type {?|undefined} */
  this.layersList;

  /** @type {?|undefined} */
  this.verificationSamplesList;

  /** @type {?|undefined} */
  this.performance;

  /** @type {?|undefined} */
  this.timeDumped;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.prediction.NetParameter.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.prediction.NetParameter}
 */
proto.apollo.prediction.NetParameter.fromObject = function(obj) {
  var msg = new proto.apollo.prediction.NetParameter();
  obj.id != null && jspb.Message.setField(msg, 1, obj.id);
  obj.name != null && jspb.Message.setField(msg, 2, obj.name);
  obj.layersList && jspb.Message.setRepeatedWrapperField(
      msg, 3, obj.layersList.map(
          modules_prediction_proto_network_layers_pb.LayerParameter.fromObject));
  obj.verificationSamplesList && jspb.Message.setRepeatedWrapperField(
      msg, 4, obj.verificationSamplesList.map(
          proto.apollo.prediction.VerificationSample.fromObject));
  obj.performance && jspb.Message.setWrapperField(
      msg, 5, proto.apollo.prediction.Performance.fromObject(obj.performance));
  obj.timeDumped != null && jspb.Message.setField(msg, 6, obj.timeDumped);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.prediction.NetParameter}
 */
proto.apollo.prediction.NetParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.prediction.NetParameter;
  return proto.apollo.prediction.NetParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.prediction.NetParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.prediction.NetParameter}
 */
proto.apollo.prediction.NetParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new modules_prediction_proto_network_layers_pb.LayerParameter;
      reader.readMessage(value,modules_prediction_proto_network_layers_pb.LayerParameter.deserializeBinaryFromReader);
      msg.addLayers(value);
      break;
    case 4:
      var value = new proto.apollo.prediction.VerificationSample;
      reader.readMessage(value,proto.apollo.prediction.VerificationSample.deserializeBinaryFromReader);
      msg.addVerificationSamples(value);
      break;
    case 5:
      var value = new proto.apollo.prediction.Performance;
      reader.readMessage(value,proto.apollo.prediction.Performance.deserializeBinaryFromReader);
      msg.setPerformance(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTimeDumped(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.prediction.NetParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.prediction.NetParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.prediction.NetParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.NetParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLayersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      modules_prediction_proto_network_layers_pb.LayerParameter.serializeBinaryToWriter
    );
  }
  f = message.getVerificationSamplesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.apollo.prediction.VerificationSample.serializeBinaryToWriter
    );
  }
  f = message.getPerformance();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.apollo.prediction.Performance.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeFloat(
      6,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.apollo.prediction.NetParameter.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.prediction.NetParameter} returns this
 */
proto.apollo.prediction.NetParameter.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.NetParameter} returns this
 */
proto.apollo.prediction.NetParameter.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.NetParameter.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.apollo.prediction.NetParameter.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.prediction.NetParameter} returns this
 */
proto.apollo.prediction.NetParameter.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.NetParameter} returns this
 */
proto.apollo.prediction.NetParameter.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.NetParameter.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated LayerParameter layers = 3;
 * @return {!Array<!proto.apollo.prediction.LayerParameter>}
 */
proto.apollo.prediction.NetParameter.prototype.getLayersList = function() {
  return /** @type{!Array<!proto.apollo.prediction.LayerParameter>} */ (
    jspb.Message.getRepeatedWrapperField(this, modules_prediction_proto_network_layers_pb.LayerParameter, 3));
};


/**
 * @param {!Array<!proto.apollo.prediction.LayerParameter>} value
 * @return {!proto.apollo.prediction.NetParameter} returns this
*/
proto.apollo.prediction.NetParameter.prototype.setLayersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.apollo.prediction.LayerParameter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.prediction.LayerParameter}
 */
proto.apollo.prediction.NetParameter.prototype.addLayers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.apollo.prediction.LayerParameter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.prediction.NetParameter} returns this
 */
proto.apollo.prediction.NetParameter.prototype.clearLayersList = function() {
  return this.setLayersList([]);
};


/**
 * repeated VerificationSample verification_samples = 4;
 * @return {!Array<!proto.apollo.prediction.VerificationSample>}
 */
proto.apollo.prediction.NetParameter.prototype.getVerificationSamplesList = function() {
  return /** @type{!Array<!proto.apollo.prediction.VerificationSample>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.prediction.VerificationSample, 4));
};


/**
 * @param {!Array<!proto.apollo.prediction.VerificationSample>} value
 * @return {!proto.apollo.prediction.NetParameter} returns this
*/
proto.apollo.prediction.NetParameter.prototype.setVerificationSamplesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.apollo.prediction.VerificationSample=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.prediction.VerificationSample}
 */
proto.apollo.prediction.NetParameter.prototype.addVerificationSamples = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.apollo.prediction.VerificationSample, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.prediction.NetParameter} returns this
 */
proto.apollo.prediction.NetParameter.prototype.clearVerificationSamplesList = function() {
  return this.setVerificationSamplesList([]);
};


/**
 * optional Performance performance = 5;
 * @return {?proto.apollo.prediction.Performance}
 */
proto.apollo.prediction.NetParameter.prototype.getPerformance = function() {
  return /** @type{?proto.apollo.prediction.Performance} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.Performance, 5));
};


/**
 * @param {?proto.apollo.prediction.Performance|undefined} value
 * @return {!proto.apollo.prediction.NetParameter} returns this
*/
proto.apollo.prediction.NetParameter.prototype.setPerformance = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.NetParameter} returns this
 */
proto.apollo.prediction.NetParameter.prototype.clearPerformance = function() {
  return this.setPerformance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.NetParameter.prototype.hasPerformance = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional float time_dumped = 6;
 * @return {number}
 */
proto.apollo.prediction.NetParameter.prototype.getTimeDumped = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.prediction.NetParameter} returns this
 */
proto.apollo.prediction.NetParameter.prototype.setTimeDumped = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.NetParameter} returns this
 */
proto.apollo.prediction.NetParameter.prototype.clearTimeDumped = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.NetParameter.prototype.hasTimeDumped = function() {
  return jspb.Message.getField(this, 6) != null;
};


goog.object.extend(exports, proto.apollo.prediction);
