// source: cyber/proto/dag_conf.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var cyber_proto_component_conf_pb = require('../../cyber/proto/component_conf_pb.js');
goog.object.extend(proto, cyber_proto_component_conf_pb);
goog.exportSymbol('proto.apollo.cyber.proto.ComponentInfo', null, global);
goog.exportSymbol('proto.apollo.cyber.proto.DagConfig', null, global);
goog.exportSymbol('proto.apollo.cyber.proto.ModuleConfig', null, global);
goog.exportSymbol('proto.apollo.cyber.proto.TimerComponentInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.cyber.proto.ComponentInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.cyber.proto.ComponentInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.cyber.proto.ComponentInfo.displayName = 'proto.apollo.cyber.proto.ComponentInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.cyber.proto.TimerComponentInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.cyber.proto.TimerComponentInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.cyber.proto.TimerComponentInfo.displayName = 'proto.apollo.cyber.proto.TimerComponentInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.cyber.proto.ModuleConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.cyber.proto.ModuleConfig.repeatedFields_, null);
};
goog.inherits(proto.apollo.cyber.proto.ModuleConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.cyber.proto.ModuleConfig.displayName = 'proto.apollo.cyber.proto.ModuleConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.cyber.proto.DagConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.cyber.proto.DagConfig.repeatedFields_, null);
};
goog.inherits(proto.apollo.cyber.proto.DagConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.cyber.proto.DagConfig.displayName = 'proto.apollo.cyber.proto.DagConfig';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.cyber.proto.ComponentInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.cyber.proto.ComponentInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.cyber.proto.ComponentInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.cyber.proto.ComponentInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    className: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    config: (f = msg.getConfig()) && cyber_proto_component_conf_pb.ComponentConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ComponentInfo as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.cyber.proto.ComponentInfo.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.className;

  /** @type {?|undefined} */
  this.config;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.cyber.proto.ComponentInfo.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.cyber.proto.ComponentInfo}
 */
proto.apollo.cyber.proto.ComponentInfo.fromObject = function(obj) {
  var msg = new proto.apollo.cyber.proto.ComponentInfo();
  obj.className != null && jspb.Message.setField(msg, 1, obj.className);
  obj.config && jspb.Message.setWrapperField(
      msg, 2, cyber_proto_component_conf_pb.ComponentConfig.fromObject(obj.config));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.cyber.proto.ComponentInfo}
 */
proto.apollo.cyber.proto.ComponentInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.cyber.proto.ComponentInfo;
  return proto.apollo.cyber.proto.ComponentInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.cyber.proto.ComponentInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.cyber.proto.ComponentInfo}
 */
proto.apollo.cyber.proto.ComponentInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassName(value);
      break;
    case 2:
      var value = new cyber_proto_component_conf_pb.ComponentConfig;
      reader.readMessage(value,cyber_proto_component_conf_pb.ComponentConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.cyber.proto.ComponentInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.cyber.proto.ComponentInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.cyber.proto.ComponentInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.cyber.proto.ComponentInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cyber_proto_component_conf_pb.ComponentConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional string class_name = 1;
 * @return {string}
 */
proto.apollo.cyber.proto.ComponentInfo.prototype.getClassName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.cyber.proto.ComponentInfo} returns this
 */
proto.apollo.cyber.proto.ComponentInfo.prototype.setClassName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.ComponentInfo} returns this
 */
proto.apollo.cyber.proto.ComponentInfo.prototype.clearClassName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.ComponentInfo.prototype.hasClassName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ComponentConfig config = 2;
 * @return {?proto.apollo.cyber.proto.ComponentConfig}
 */
proto.apollo.cyber.proto.ComponentInfo.prototype.getConfig = function() {
  return /** @type{?proto.apollo.cyber.proto.ComponentConfig} */ (
    jspb.Message.getWrapperField(this, cyber_proto_component_conf_pb.ComponentConfig, 2));
};


/**
 * @param {?proto.apollo.cyber.proto.ComponentConfig|undefined} value
 * @return {!proto.apollo.cyber.proto.ComponentInfo} returns this
*/
proto.apollo.cyber.proto.ComponentInfo.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.cyber.proto.ComponentInfo} returns this
 */
proto.apollo.cyber.proto.ComponentInfo.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.ComponentInfo.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.cyber.proto.TimerComponentInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.cyber.proto.TimerComponentInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.cyber.proto.TimerComponentInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.cyber.proto.TimerComponentInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    className: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    config: (f = msg.getConfig()) && cyber_proto_component_conf_pb.TimerComponentConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of TimerComponentInfo as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.cyber.proto.TimerComponentInfo.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.className;

  /** @type {?|undefined} */
  this.config;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.cyber.proto.TimerComponentInfo.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.cyber.proto.TimerComponentInfo}
 */
proto.apollo.cyber.proto.TimerComponentInfo.fromObject = function(obj) {
  var msg = new proto.apollo.cyber.proto.TimerComponentInfo();
  obj.className != null && jspb.Message.setField(msg, 1, obj.className);
  obj.config && jspb.Message.setWrapperField(
      msg, 2, cyber_proto_component_conf_pb.TimerComponentConfig.fromObject(obj.config));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.cyber.proto.TimerComponentInfo}
 */
proto.apollo.cyber.proto.TimerComponentInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.cyber.proto.TimerComponentInfo;
  return proto.apollo.cyber.proto.TimerComponentInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.cyber.proto.TimerComponentInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.cyber.proto.TimerComponentInfo}
 */
proto.apollo.cyber.proto.TimerComponentInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassName(value);
      break;
    case 2:
      var value = new cyber_proto_component_conf_pb.TimerComponentConfig;
      reader.readMessage(value,cyber_proto_component_conf_pb.TimerComponentConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.cyber.proto.TimerComponentInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.cyber.proto.TimerComponentInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.cyber.proto.TimerComponentInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.cyber.proto.TimerComponentInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cyber_proto_component_conf_pb.TimerComponentConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional string class_name = 1;
 * @return {string}
 */
proto.apollo.cyber.proto.TimerComponentInfo.prototype.getClassName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.cyber.proto.TimerComponentInfo} returns this
 */
proto.apollo.cyber.proto.TimerComponentInfo.prototype.setClassName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.TimerComponentInfo} returns this
 */
proto.apollo.cyber.proto.TimerComponentInfo.prototype.clearClassName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.TimerComponentInfo.prototype.hasClassName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TimerComponentConfig config = 2;
 * @return {?proto.apollo.cyber.proto.TimerComponentConfig}
 */
proto.apollo.cyber.proto.TimerComponentInfo.prototype.getConfig = function() {
  return /** @type{?proto.apollo.cyber.proto.TimerComponentConfig} */ (
    jspb.Message.getWrapperField(this, cyber_proto_component_conf_pb.TimerComponentConfig, 2));
};


/**
 * @param {?proto.apollo.cyber.proto.TimerComponentConfig|undefined} value
 * @return {!proto.apollo.cyber.proto.TimerComponentInfo} returns this
*/
proto.apollo.cyber.proto.TimerComponentInfo.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.cyber.proto.TimerComponentInfo} returns this
 */
proto.apollo.cyber.proto.TimerComponentInfo.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.TimerComponentInfo.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.cyber.proto.ModuleConfig.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.cyber.proto.ModuleConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.cyber.proto.ModuleConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.cyber.proto.ModuleConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.cyber.proto.ModuleConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    moduleLibrary: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    componentsList: jspb.Message.toObjectList(msg.getComponentsList(),
    proto.apollo.cyber.proto.ComponentInfo.toObject, includeInstance),
    timerComponentsList: jspb.Message.toObjectList(msg.getTimerComponentsList(),
    proto.apollo.cyber.proto.TimerComponentInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ModuleConfig as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.cyber.proto.ModuleConfig.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.moduleLibrary;

  /** @type {?|undefined} */
  this.componentsList;

  /** @type {?|undefined} */
  this.timerComponentsList;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.cyber.proto.ModuleConfig.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.cyber.proto.ModuleConfig}
 */
proto.apollo.cyber.proto.ModuleConfig.fromObject = function(obj) {
  var msg = new proto.apollo.cyber.proto.ModuleConfig();
  obj.moduleLibrary != null && jspb.Message.setField(msg, 1, obj.moduleLibrary);
  obj.componentsList && jspb.Message.setRepeatedWrapperField(
      msg, 2, obj.componentsList.map(
          proto.apollo.cyber.proto.ComponentInfo.fromObject));
  obj.timerComponentsList && jspb.Message.setRepeatedWrapperField(
      msg, 3, obj.timerComponentsList.map(
          proto.apollo.cyber.proto.TimerComponentInfo.fromObject));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.cyber.proto.ModuleConfig}
 */
proto.apollo.cyber.proto.ModuleConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.cyber.proto.ModuleConfig;
  return proto.apollo.cyber.proto.ModuleConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.cyber.proto.ModuleConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.cyber.proto.ModuleConfig}
 */
proto.apollo.cyber.proto.ModuleConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModuleLibrary(value);
      break;
    case 2:
      var value = new proto.apollo.cyber.proto.ComponentInfo;
      reader.readMessage(value,proto.apollo.cyber.proto.ComponentInfo.deserializeBinaryFromReader);
      msg.addComponents(value);
      break;
    case 3:
      var value = new proto.apollo.cyber.proto.TimerComponentInfo;
      reader.readMessage(value,proto.apollo.cyber.proto.TimerComponentInfo.deserializeBinaryFromReader);
      msg.addTimerComponents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.cyber.proto.ModuleConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.cyber.proto.ModuleConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.cyber.proto.ModuleConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.cyber.proto.ModuleConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getComponentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.apollo.cyber.proto.ComponentInfo.serializeBinaryToWriter
    );
  }
  f = message.getTimerComponentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.apollo.cyber.proto.TimerComponentInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string module_library = 1;
 * @return {string}
 */
proto.apollo.cyber.proto.ModuleConfig.prototype.getModuleLibrary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.cyber.proto.ModuleConfig} returns this
 */
proto.apollo.cyber.proto.ModuleConfig.prototype.setModuleLibrary = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.ModuleConfig} returns this
 */
proto.apollo.cyber.proto.ModuleConfig.prototype.clearModuleLibrary = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.ModuleConfig.prototype.hasModuleLibrary = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ComponentInfo components = 2;
 * @return {!Array<!proto.apollo.cyber.proto.ComponentInfo>}
 */
proto.apollo.cyber.proto.ModuleConfig.prototype.getComponentsList = function() {
  return /** @type{!Array<!proto.apollo.cyber.proto.ComponentInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.cyber.proto.ComponentInfo, 2));
};


/**
 * @param {!Array<!proto.apollo.cyber.proto.ComponentInfo>} value
 * @return {!proto.apollo.cyber.proto.ModuleConfig} returns this
*/
proto.apollo.cyber.proto.ModuleConfig.prototype.setComponentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.apollo.cyber.proto.ComponentInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.cyber.proto.ComponentInfo}
 */
proto.apollo.cyber.proto.ModuleConfig.prototype.addComponents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.apollo.cyber.proto.ComponentInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.cyber.proto.ModuleConfig} returns this
 */
proto.apollo.cyber.proto.ModuleConfig.prototype.clearComponentsList = function() {
  return this.setComponentsList([]);
};


/**
 * repeated TimerComponentInfo timer_components = 3;
 * @return {!Array<!proto.apollo.cyber.proto.TimerComponentInfo>}
 */
proto.apollo.cyber.proto.ModuleConfig.prototype.getTimerComponentsList = function() {
  return /** @type{!Array<!proto.apollo.cyber.proto.TimerComponentInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.cyber.proto.TimerComponentInfo, 3));
};


/**
 * @param {!Array<!proto.apollo.cyber.proto.TimerComponentInfo>} value
 * @return {!proto.apollo.cyber.proto.ModuleConfig} returns this
*/
proto.apollo.cyber.proto.ModuleConfig.prototype.setTimerComponentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.apollo.cyber.proto.TimerComponentInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.cyber.proto.TimerComponentInfo}
 */
proto.apollo.cyber.proto.ModuleConfig.prototype.addTimerComponents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.apollo.cyber.proto.TimerComponentInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.cyber.proto.ModuleConfig} returns this
 */
proto.apollo.cyber.proto.ModuleConfig.prototype.clearTimerComponentsList = function() {
  return this.setTimerComponentsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.cyber.proto.DagConfig.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.cyber.proto.DagConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.cyber.proto.DagConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.cyber.proto.DagConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.cyber.proto.DagConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    moduleConfigList: jspb.Message.toObjectList(msg.getModuleConfigList(),
    proto.apollo.cyber.proto.ModuleConfig.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of DagConfig as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.cyber.proto.DagConfig.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.moduleConfigList;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.cyber.proto.DagConfig.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.cyber.proto.DagConfig}
 */
proto.apollo.cyber.proto.DagConfig.fromObject = function(obj) {
  var msg = new proto.apollo.cyber.proto.DagConfig();
  obj.moduleConfigList && jspb.Message.setRepeatedWrapperField(
      msg, 1, obj.moduleConfigList.map(
          proto.apollo.cyber.proto.ModuleConfig.fromObject));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.cyber.proto.DagConfig}
 */
proto.apollo.cyber.proto.DagConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.cyber.proto.DagConfig;
  return proto.apollo.cyber.proto.DagConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.cyber.proto.DagConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.cyber.proto.DagConfig}
 */
proto.apollo.cyber.proto.DagConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.apollo.cyber.proto.ModuleConfig;
      reader.readMessage(value,proto.apollo.cyber.proto.ModuleConfig.deserializeBinaryFromReader);
      msg.addModuleConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.cyber.proto.DagConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.cyber.proto.DagConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.cyber.proto.DagConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.cyber.proto.DagConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModuleConfigList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.apollo.cyber.proto.ModuleConfig.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ModuleConfig module_config = 1;
 * @return {!Array<!proto.apollo.cyber.proto.ModuleConfig>}
 */
proto.apollo.cyber.proto.DagConfig.prototype.getModuleConfigList = function() {
  return /** @type{!Array<!proto.apollo.cyber.proto.ModuleConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.cyber.proto.ModuleConfig, 1));
};


/**
 * @param {!Array<!proto.apollo.cyber.proto.ModuleConfig>} value
 * @return {!proto.apollo.cyber.proto.DagConfig} returns this
*/
proto.apollo.cyber.proto.DagConfig.prototype.setModuleConfigList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.apollo.cyber.proto.ModuleConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.cyber.proto.ModuleConfig}
 */
proto.apollo.cyber.proto.DagConfig.prototype.addModuleConfig = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.apollo.cyber.proto.ModuleConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.cyber.proto.DagConfig} returns this
 */
proto.apollo.cyber.proto.DagConfig.prototype.clearModuleConfigList = function() {
  return this.setModuleConfigList([]);
};


goog.object.extend(exports, proto.apollo.cyber.proto);
