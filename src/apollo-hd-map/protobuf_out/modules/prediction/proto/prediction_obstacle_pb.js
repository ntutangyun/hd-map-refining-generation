// source: modules/prediction/proto/prediction_obstacle.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var modules_common_proto_error_code_pb = require('../../../modules/common/proto/error_code_pb.js');
goog.object.extend(proto, modules_common_proto_error_code_pb);
var modules_common_proto_header_pb = require('../../../modules/common/proto/header_pb.js');
goog.object.extend(proto, modules_common_proto_header_pb);
var modules_prediction_proto_scenario_pb = require('../../../modules/prediction/proto/scenario_pb.js');
goog.object.extend(proto, modules_prediction_proto_scenario_pb);
var modules_perception_proto_perception_obstacle_pb = require('../../../modules/perception/proto/perception_obstacle_pb.js');
goog.object.extend(proto, modules_perception_proto_perception_obstacle_pb);
var modules_prediction_proto_feature_pb = require('../../../modules/prediction/proto/feature_pb.js');
goog.object.extend(proto, modules_prediction_proto_feature_pb);
goog.exportSymbol('proto.apollo.prediction.Intent', null, global);
goog.exportSymbol('proto.apollo.prediction.Intent.Type', null, global);
goog.exportSymbol('proto.apollo.prediction.ObstacleIntent', null, global);
goog.exportSymbol('proto.apollo.prediction.ObstacleIntent.Type', null, global);
goog.exportSymbol('proto.apollo.prediction.PredictionObstacle', null, global);
goog.exportSymbol('proto.apollo.prediction.PredictionObstacles', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.prediction.ObstacleIntent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.prediction.ObstacleIntent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.prediction.ObstacleIntent.displayName = 'proto.apollo.prediction.ObstacleIntent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.prediction.Intent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.prediction.Intent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.prediction.Intent.displayName = 'proto.apollo.prediction.Intent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.prediction.PredictionObstacle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.prediction.PredictionObstacle.repeatedFields_, null);
};
goog.inherits(proto.apollo.prediction.PredictionObstacle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.prediction.PredictionObstacle.displayName = 'proto.apollo.prediction.PredictionObstacle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.prediction.PredictionObstacles = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.prediction.PredictionObstacles.repeatedFields_, null);
};
goog.inherits(proto.apollo.prediction.PredictionObstacles, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.prediction.PredictionObstacles.displayName = 'proto.apollo.prediction.PredictionObstacles';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.prediction.ObstacleIntent.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.prediction.ObstacleIntent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.prediction.ObstacleIntent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.ObstacleIntent.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ObstacleIntent as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.prediction.ObstacleIntent.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.type;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.prediction.ObstacleIntent.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.prediction.ObstacleIntent}
 */
proto.apollo.prediction.ObstacleIntent.fromObject = function(obj) {
  var msg = new proto.apollo.prediction.ObstacleIntent();
  obj.type != null && jspb.Message.setField(msg, 1, obj.type);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.prediction.ObstacleIntent}
 */
proto.apollo.prediction.ObstacleIntent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.prediction.ObstacleIntent;
  return proto.apollo.prediction.ObstacleIntent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.prediction.ObstacleIntent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.prediction.ObstacleIntent}
 */
proto.apollo.prediction.ObstacleIntent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.prediction.ObstacleIntent.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.prediction.ObstacleIntent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.prediction.ObstacleIntent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.prediction.ObstacleIntent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.ObstacleIntent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.prediction.ObstacleIntent.Type} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.prediction.ObstacleIntent.Type = {
  UNKNOWN: 0,
  STOP: 1,
  STATIONARY: 2,
  MOVING: 3,
  CHANGE_LANE: 4,
  LOW_ACCELERATION: 5,
  HIGH_ACCELERATION: 6,
  LOW_DECELERATION: 7,
  HIGH_DECELERATION: 8
};

/**
 * optional Type type = 1;
 * @return {!proto.apollo.prediction.ObstacleIntent.Type}
 */
proto.apollo.prediction.ObstacleIntent.prototype.getType = function() {
  return /** @type {!proto.apollo.prediction.ObstacleIntent.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.prediction.ObstacleIntent.Type} value
 * @return {!proto.apollo.prediction.ObstacleIntent} returns this
 */
proto.apollo.prediction.ObstacleIntent.prototype.setType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.ObstacleIntent} returns this
 */
proto.apollo.prediction.ObstacleIntent.prototype.clearType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.ObstacleIntent.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.prediction.Intent.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.prediction.Intent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.prediction.Intent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.Intent.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Intent as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.prediction.Intent.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.type;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.prediction.Intent.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.prediction.Intent}
 */
proto.apollo.prediction.Intent.fromObject = function(obj) {
  var msg = new proto.apollo.prediction.Intent();
  obj.type != null && jspb.Message.setField(msg, 1, obj.type);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.prediction.Intent}
 */
proto.apollo.prediction.Intent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.prediction.Intent;
  return proto.apollo.prediction.Intent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.prediction.Intent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.prediction.Intent}
 */
proto.apollo.prediction.Intent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.prediction.Intent.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.prediction.Intent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.prediction.Intent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.prediction.Intent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.Intent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.prediction.Intent.Type} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.prediction.Intent.Type = {
  UNKNOWN: 0,
  STOP: 1,
  CRUISE: 2,
  CHANGE_LANE: 3
};

/**
 * optional Type type = 1;
 * @return {!proto.apollo.prediction.Intent.Type}
 */
proto.apollo.prediction.Intent.prototype.getType = function() {
  return /** @type {!proto.apollo.prediction.Intent.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.prediction.Intent.Type} value
 * @return {!proto.apollo.prediction.Intent} returns this
 */
proto.apollo.prediction.Intent.prototype.setType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.Intent} returns this
 */
proto.apollo.prediction.Intent.prototype.clearType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.Intent.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.prediction.PredictionObstacle.repeatedFields_ = [4,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.prediction.PredictionObstacle.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.prediction.PredictionObstacle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.prediction.PredictionObstacle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.PredictionObstacle.toObject = function(includeInstance, msg) {
  var f, obj = {
    perceptionObstacle: (f = msg.getPerceptionObstacle()) && modules_perception_proto_perception_obstacle_pb.PerceptionObstacle.toObject(includeInstance, f),
    timestamp: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    predictedPeriod: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    trajectoryList: jspb.Message.toObjectList(msg.getTrajectoryList(),
    modules_prediction_proto_feature_pb.Trajectory.toObject, includeInstance),
    intent: (f = msg.getIntent()) && proto.apollo.prediction.ObstacleIntent.toObject(includeInstance, f),
    priority: (f = msg.getPriority()) && modules_prediction_proto_feature_pb.ObstaclePriority.toObject(includeInstance, f),
    interactiveTag: (f = msg.getInteractiveTag()) && modules_prediction_proto_feature_pb.ObstacleInteractiveTag.toObject(includeInstance, f),
    isStatic: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    featureList: jspb.Message.toObjectList(msg.getFeatureList(),
    modules_prediction_proto_feature_pb.Feature.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of PredictionObstacle as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.prediction.PredictionObstacle.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.perceptionObstacle;

  /** @type {?|undefined} */
  this.timestamp;

  /** @type {?|undefined} */
  this.predictedPeriod;

  /** @type {?|undefined} */
  this.trajectoryList;

  /** @type {?|undefined} */
  this.intent;

  /** @type {?|undefined} */
  this.priority;

  /** @type {?|undefined} */
  this.interactiveTag;

  /** @type {?|undefined} */
  this.isStatic;

  /** @type {?|undefined} */
  this.featureList;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.prediction.PredictionObstacle.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.prediction.PredictionObstacle}
 */
proto.apollo.prediction.PredictionObstacle.fromObject = function(obj) {
  var msg = new proto.apollo.prediction.PredictionObstacle();
  obj.perceptionObstacle && jspb.Message.setWrapperField(
      msg, 1, modules_perception_proto_perception_obstacle_pb.PerceptionObstacle.fromObject(obj.perceptionObstacle));
  obj.timestamp != null && jspb.Message.setField(msg, 2, obj.timestamp);
  obj.predictedPeriod != null && jspb.Message.setField(msg, 3, obj.predictedPeriod);
  obj.trajectoryList && jspb.Message.setRepeatedWrapperField(
      msg, 4, obj.trajectoryList.map(
          modules_prediction_proto_feature_pb.Trajectory.fromObject));
  obj.intent && jspb.Message.setWrapperField(
      msg, 5, proto.apollo.prediction.ObstacleIntent.fromObject(obj.intent));
  obj.priority && jspb.Message.setWrapperField(
      msg, 6, modules_prediction_proto_feature_pb.ObstaclePriority.fromObject(obj.priority));
  obj.interactiveTag && jspb.Message.setWrapperField(
      msg, 9, modules_prediction_proto_feature_pb.ObstacleInteractiveTag.fromObject(obj.interactiveTag));
  obj.isStatic != null && jspb.Message.setField(msg, 7, obj.isStatic);
  obj.featureList && jspb.Message.setRepeatedWrapperField(
      msg, 8, obj.featureList.map(
          modules_prediction_proto_feature_pb.Feature.fromObject));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.prediction.PredictionObstacle}
 */
proto.apollo.prediction.PredictionObstacle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.prediction.PredictionObstacle;
  return proto.apollo.prediction.PredictionObstacle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.prediction.PredictionObstacle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.prediction.PredictionObstacle}
 */
proto.apollo.prediction.PredictionObstacle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modules_perception_proto_perception_obstacle_pb.PerceptionObstacle;
      reader.readMessage(value,modules_perception_proto_perception_obstacle_pb.PerceptionObstacle.deserializeBinaryFromReader);
      msg.setPerceptionObstacle(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPredictedPeriod(value);
      break;
    case 4:
      var value = new modules_prediction_proto_feature_pb.Trajectory;
      reader.readMessage(value,modules_prediction_proto_feature_pb.Trajectory.deserializeBinaryFromReader);
      msg.addTrajectory(value);
      break;
    case 5:
      var value = new proto.apollo.prediction.ObstacleIntent;
      reader.readMessage(value,proto.apollo.prediction.ObstacleIntent.deserializeBinaryFromReader);
      msg.setIntent(value);
      break;
    case 6:
      var value = new modules_prediction_proto_feature_pb.ObstaclePriority;
      reader.readMessage(value,modules_prediction_proto_feature_pb.ObstaclePriority.deserializeBinaryFromReader);
      msg.setPriority(value);
      break;
    case 9:
      var value = new modules_prediction_proto_feature_pb.ObstacleInteractiveTag;
      reader.readMessage(value,modules_prediction_proto_feature_pb.ObstacleInteractiveTag.deserializeBinaryFromReader);
      msg.setInteractiveTag(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsStatic(value);
      break;
    case 8:
      var value = new modules_prediction_proto_feature_pb.Feature;
      reader.readMessage(value,modules_prediction_proto_feature_pb.Feature.deserializeBinaryFromReader);
      msg.addFeature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.prediction.PredictionObstacle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.prediction.PredictionObstacle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.prediction.PredictionObstacle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.PredictionObstacle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPerceptionObstacle();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modules_perception_proto_perception_obstacle_pb.PerceptionObstacle.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getTrajectoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      modules_prediction_proto_feature_pb.Trajectory.serializeBinaryToWriter
    );
  }
  f = message.getIntent();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.apollo.prediction.ObstacleIntent.serializeBinaryToWriter
    );
  }
  f = message.getPriority();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      modules_prediction_proto_feature_pb.ObstaclePriority.serializeBinaryToWriter
    );
  }
  f = message.getInteractiveTag();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      modules_prediction_proto_feature_pb.ObstacleInteractiveTag.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getFeatureList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      modules_prediction_proto_feature_pb.Feature.serializeBinaryToWriter
    );
  }
};


/**
 * optional apollo.perception.PerceptionObstacle perception_obstacle = 1;
 * @return {?proto.apollo.perception.PerceptionObstacle}
 */
proto.apollo.prediction.PredictionObstacle.prototype.getPerceptionObstacle = function() {
  return /** @type{?proto.apollo.perception.PerceptionObstacle} */ (
    jspb.Message.getWrapperField(this, modules_perception_proto_perception_obstacle_pb.PerceptionObstacle, 1));
};


/**
 * @param {?proto.apollo.perception.PerceptionObstacle|undefined} value
 * @return {!proto.apollo.prediction.PredictionObstacle} returns this
*/
proto.apollo.prediction.PredictionObstacle.prototype.setPerceptionObstacle = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.PredictionObstacle} returns this
 */
proto.apollo.prediction.PredictionObstacle.prototype.clearPerceptionObstacle = function() {
  return this.setPerceptionObstacle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.PredictionObstacle.prototype.hasPerceptionObstacle = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double timestamp = 2;
 * @return {number}
 */
proto.apollo.prediction.PredictionObstacle.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.prediction.PredictionObstacle} returns this
 */
proto.apollo.prediction.PredictionObstacle.prototype.setTimestamp = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.PredictionObstacle} returns this
 */
proto.apollo.prediction.PredictionObstacle.prototype.clearTimestamp = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.PredictionObstacle.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double predicted_period = 3;
 * @return {number}
 */
proto.apollo.prediction.PredictionObstacle.prototype.getPredictedPeriod = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.prediction.PredictionObstacle} returns this
 */
proto.apollo.prediction.PredictionObstacle.prototype.setPredictedPeriod = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.PredictionObstacle} returns this
 */
proto.apollo.prediction.PredictionObstacle.prototype.clearPredictedPeriod = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.PredictionObstacle.prototype.hasPredictedPeriod = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Trajectory trajectory = 4;
 * @return {!Array<!proto.apollo.prediction.Trajectory>}
 */
proto.apollo.prediction.PredictionObstacle.prototype.getTrajectoryList = function() {
  return /** @type{!Array<!proto.apollo.prediction.Trajectory>} */ (
    jspb.Message.getRepeatedWrapperField(this, modules_prediction_proto_feature_pb.Trajectory, 4));
};


/**
 * @param {!Array<!proto.apollo.prediction.Trajectory>} value
 * @return {!proto.apollo.prediction.PredictionObstacle} returns this
*/
proto.apollo.prediction.PredictionObstacle.prototype.setTrajectoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.apollo.prediction.Trajectory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.prediction.Trajectory}
 */
proto.apollo.prediction.PredictionObstacle.prototype.addTrajectory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.apollo.prediction.Trajectory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.prediction.PredictionObstacle} returns this
 */
proto.apollo.prediction.PredictionObstacle.prototype.clearTrajectoryList = function() {
  return this.setTrajectoryList([]);
};


/**
 * optional ObstacleIntent intent = 5;
 * @return {?proto.apollo.prediction.ObstacleIntent}
 */
proto.apollo.prediction.PredictionObstacle.prototype.getIntent = function() {
  return /** @type{?proto.apollo.prediction.ObstacleIntent} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.ObstacleIntent, 5));
};


/**
 * @param {?proto.apollo.prediction.ObstacleIntent|undefined} value
 * @return {!proto.apollo.prediction.PredictionObstacle} returns this
*/
proto.apollo.prediction.PredictionObstacle.prototype.setIntent = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.PredictionObstacle} returns this
 */
proto.apollo.prediction.PredictionObstacle.prototype.clearIntent = function() {
  return this.setIntent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.PredictionObstacle.prototype.hasIntent = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ObstaclePriority priority = 6;
 * @return {?proto.apollo.prediction.ObstaclePriority}
 */
proto.apollo.prediction.PredictionObstacle.prototype.getPriority = function() {
  return /** @type{?proto.apollo.prediction.ObstaclePriority} */ (
    jspb.Message.getWrapperField(this, modules_prediction_proto_feature_pb.ObstaclePriority, 6));
};


/**
 * @param {?proto.apollo.prediction.ObstaclePriority|undefined} value
 * @return {!proto.apollo.prediction.PredictionObstacle} returns this
*/
proto.apollo.prediction.PredictionObstacle.prototype.setPriority = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.PredictionObstacle} returns this
 */
proto.apollo.prediction.PredictionObstacle.prototype.clearPriority = function() {
  return this.setPriority(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.PredictionObstacle.prototype.hasPriority = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ObstacleInteractiveTag interactive_tag = 9;
 * @return {?proto.apollo.prediction.ObstacleInteractiveTag}
 */
proto.apollo.prediction.PredictionObstacle.prototype.getInteractiveTag = function() {
  return /** @type{?proto.apollo.prediction.ObstacleInteractiveTag} */ (
    jspb.Message.getWrapperField(this, modules_prediction_proto_feature_pb.ObstacleInteractiveTag, 9));
};


/**
 * @param {?proto.apollo.prediction.ObstacleInteractiveTag|undefined} value
 * @return {!proto.apollo.prediction.PredictionObstacle} returns this
*/
proto.apollo.prediction.PredictionObstacle.prototype.setInteractiveTag = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.PredictionObstacle} returns this
 */
proto.apollo.prediction.PredictionObstacle.prototype.clearInteractiveTag = function() {
  return this.setInteractiveTag(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.PredictionObstacle.prototype.hasInteractiveTag = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool is_static = 7;
 * @return {boolean}
 */
proto.apollo.prediction.PredictionObstacle.prototype.getIsStatic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.prediction.PredictionObstacle} returns this
 */
proto.apollo.prediction.PredictionObstacle.prototype.setIsStatic = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.PredictionObstacle} returns this
 */
proto.apollo.prediction.PredictionObstacle.prototype.clearIsStatic = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.PredictionObstacle.prototype.hasIsStatic = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated Feature feature = 8;
 * @return {!Array<!proto.apollo.prediction.Feature>}
 */
proto.apollo.prediction.PredictionObstacle.prototype.getFeatureList = function() {
  return /** @type{!Array<!proto.apollo.prediction.Feature>} */ (
    jspb.Message.getRepeatedWrapperField(this, modules_prediction_proto_feature_pb.Feature, 8));
};


/**
 * @param {!Array<!proto.apollo.prediction.Feature>} value
 * @return {!proto.apollo.prediction.PredictionObstacle} returns this
*/
proto.apollo.prediction.PredictionObstacle.prototype.setFeatureList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.apollo.prediction.Feature=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.prediction.Feature}
 */
proto.apollo.prediction.PredictionObstacle.prototype.addFeature = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.apollo.prediction.Feature, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.prediction.PredictionObstacle} returns this
 */
proto.apollo.prediction.PredictionObstacle.prototype.clearFeatureList = function() {
  return this.setFeatureList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.prediction.PredictionObstacles.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.prediction.PredictionObstacles.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.prediction.PredictionObstacles.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.prediction.PredictionObstacles} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.PredictionObstacles.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && modules_common_proto_header_pb.Header.toObject(includeInstance, f),
    predictionObstacleList: jspb.Message.toObjectList(msg.getPredictionObstacleList(),
    proto.apollo.prediction.PredictionObstacle.toObject, includeInstance),
    perceptionErrorCode: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    startTimestamp: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    endTimestamp: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    intent: (f = msg.getIntent()) && proto.apollo.prediction.Intent.toObject(includeInstance, f),
    scenario: (f = msg.getScenario()) && modules_prediction_proto_scenario_pb.Scenario.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of PredictionObstacles as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.prediction.PredictionObstacles.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.header;

  /** @type {?|undefined} */
  this.predictionObstacleList;

  /** @type {?|undefined} */
  this.perceptionErrorCode;

  /** @type {?|undefined} */
  this.startTimestamp;

  /** @type {?|undefined} */
  this.endTimestamp;

  /** @type {?|undefined} */
  this.intent;

  /** @type {?|undefined} */
  this.scenario;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.prediction.PredictionObstacles.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.prediction.PredictionObstacles}
 */
proto.apollo.prediction.PredictionObstacles.fromObject = function(obj) {
  var msg = new proto.apollo.prediction.PredictionObstacles();
  obj.header && jspb.Message.setWrapperField(
      msg, 1, modules_common_proto_header_pb.Header.fromObject(obj.header));
  obj.predictionObstacleList && jspb.Message.setRepeatedWrapperField(
      msg, 2, obj.predictionObstacleList.map(
          proto.apollo.prediction.PredictionObstacle.fromObject));
  obj.perceptionErrorCode != null && jspb.Message.setField(msg, 3, obj.perceptionErrorCode);
  obj.startTimestamp != null && jspb.Message.setField(msg, 4, obj.startTimestamp);
  obj.endTimestamp != null && jspb.Message.setField(msg, 5, obj.endTimestamp);
  obj.intent && jspb.Message.setWrapperField(
      msg, 6, proto.apollo.prediction.Intent.fromObject(obj.intent));
  obj.scenario && jspb.Message.setWrapperField(
      msg, 7, modules_prediction_proto_scenario_pb.Scenario.fromObject(obj.scenario));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.prediction.PredictionObstacles}
 */
proto.apollo.prediction.PredictionObstacles.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.prediction.PredictionObstacles;
  return proto.apollo.prediction.PredictionObstacles.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.prediction.PredictionObstacles} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.prediction.PredictionObstacles}
 */
proto.apollo.prediction.PredictionObstacles.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modules_common_proto_header_pb.Header;
      reader.readMessage(value,modules_common_proto_header_pb.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.apollo.prediction.PredictionObstacle;
      reader.readMessage(value,proto.apollo.prediction.PredictionObstacle.deserializeBinaryFromReader);
      msg.addPredictionObstacle(value);
      break;
    case 3:
      var value = /** @type {!proto.apollo.common.ErrorCode} */ (reader.readEnum());
      msg.setPerceptionErrorCode(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStartTimestamp(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEndTimestamp(value);
      break;
    case 6:
      var value = new proto.apollo.prediction.Intent;
      reader.readMessage(value,proto.apollo.prediction.Intent.deserializeBinaryFromReader);
      msg.setIntent(value);
      break;
    case 7:
      var value = new modules_prediction_proto_scenario_pb.Scenario;
      reader.readMessage(value,modules_prediction_proto_scenario_pb.Scenario.deserializeBinaryFromReader);
      msg.setScenario(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.prediction.PredictionObstacles.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.prediction.PredictionObstacles.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.prediction.PredictionObstacles} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.prediction.PredictionObstacles.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modules_common_proto_header_pb.Header.serializeBinaryToWriter
    );
  }
  f = message.getPredictionObstacleList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.apollo.prediction.PredictionObstacle.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.apollo.common.ErrorCode} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getIntent();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.apollo.prediction.Intent.serializeBinaryToWriter
    );
  }
  f = message.getScenario();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      modules_prediction_proto_scenario_pb.Scenario.serializeBinaryToWriter
    );
  }
};


/**
 * optional apollo.common.Header header = 1;
 * @return {?proto.apollo.common.Header}
 */
proto.apollo.prediction.PredictionObstacles.prototype.getHeader = function() {
  return /** @type{?proto.apollo.common.Header} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_header_pb.Header, 1));
};


/**
 * @param {?proto.apollo.common.Header|undefined} value
 * @return {!proto.apollo.prediction.PredictionObstacles} returns this
*/
proto.apollo.prediction.PredictionObstacles.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.PredictionObstacles} returns this
 */
proto.apollo.prediction.PredictionObstacles.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.PredictionObstacles.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated PredictionObstacle prediction_obstacle = 2;
 * @return {!Array<!proto.apollo.prediction.PredictionObstacle>}
 */
proto.apollo.prediction.PredictionObstacles.prototype.getPredictionObstacleList = function() {
  return /** @type{!Array<!proto.apollo.prediction.PredictionObstacle>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.prediction.PredictionObstacle, 2));
};


/**
 * @param {!Array<!proto.apollo.prediction.PredictionObstacle>} value
 * @return {!proto.apollo.prediction.PredictionObstacles} returns this
*/
proto.apollo.prediction.PredictionObstacles.prototype.setPredictionObstacleList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.apollo.prediction.PredictionObstacle=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.prediction.PredictionObstacle}
 */
proto.apollo.prediction.PredictionObstacles.prototype.addPredictionObstacle = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.apollo.prediction.PredictionObstacle, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.prediction.PredictionObstacles} returns this
 */
proto.apollo.prediction.PredictionObstacles.prototype.clearPredictionObstacleList = function() {
  return this.setPredictionObstacleList([]);
};


/**
 * optional apollo.common.ErrorCode perception_error_code = 3;
 * @return {!proto.apollo.common.ErrorCode}
 */
proto.apollo.prediction.PredictionObstacles.prototype.getPerceptionErrorCode = function() {
  return /** @type {!proto.apollo.common.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.apollo.common.ErrorCode} value
 * @return {!proto.apollo.prediction.PredictionObstacles} returns this
 */
proto.apollo.prediction.PredictionObstacles.prototype.setPerceptionErrorCode = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.PredictionObstacles} returns this
 */
proto.apollo.prediction.PredictionObstacles.prototype.clearPerceptionErrorCode = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.PredictionObstacles.prototype.hasPerceptionErrorCode = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double start_timestamp = 4;
 * @return {number}
 */
proto.apollo.prediction.PredictionObstacles.prototype.getStartTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.prediction.PredictionObstacles} returns this
 */
proto.apollo.prediction.PredictionObstacles.prototype.setStartTimestamp = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.PredictionObstacles} returns this
 */
proto.apollo.prediction.PredictionObstacles.prototype.clearStartTimestamp = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.PredictionObstacles.prototype.hasStartTimestamp = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double end_timestamp = 5;
 * @return {number}
 */
proto.apollo.prediction.PredictionObstacles.prototype.getEndTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.prediction.PredictionObstacles} returns this
 */
proto.apollo.prediction.PredictionObstacles.prototype.setEndTimestamp = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.prediction.PredictionObstacles} returns this
 */
proto.apollo.prediction.PredictionObstacles.prototype.clearEndTimestamp = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.PredictionObstacles.prototype.hasEndTimestamp = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Intent intent = 6;
 * @return {?proto.apollo.prediction.Intent}
 */
proto.apollo.prediction.PredictionObstacles.prototype.getIntent = function() {
  return /** @type{?proto.apollo.prediction.Intent} */ (
    jspb.Message.getWrapperField(this, proto.apollo.prediction.Intent, 6));
};


/**
 * @param {?proto.apollo.prediction.Intent|undefined} value
 * @return {!proto.apollo.prediction.PredictionObstacles} returns this
*/
proto.apollo.prediction.PredictionObstacles.prototype.setIntent = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.PredictionObstacles} returns this
 */
proto.apollo.prediction.PredictionObstacles.prototype.clearIntent = function() {
  return this.setIntent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.PredictionObstacles.prototype.hasIntent = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Scenario scenario = 7;
 * @return {?proto.apollo.prediction.Scenario}
 */
proto.apollo.prediction.PredictionObstacles.prototype.getScenario = function() {
  return /** @type{?proto.apollo.prediction.Scenario} */ (
    jspb.Message.getWrapperField(this, modules_prediction_proto_scenario_pb.Scenario, 7));
};


/**
 * @param {?proto.apollo.prediction.Scenario|undefined} value
 * @return {!proto.apollo.prediction.PredictionObstacles} returns this
*/
proto.apollo.prediction.PredictionObstacles.prototype.setScenario = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.prediction.PredictionObstacles} returns this
 */
proto.apollo.prediction.PredictionObstacles.prototype.clearScenario = function() {
  return this.setScenario(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.prediction.PredictionObstacles.prototype.hasScenario = function() {
  return jspb.Message.getField(this, 7) != null;
};


goog.object.extend(exports, proto.apollo.prediction);
