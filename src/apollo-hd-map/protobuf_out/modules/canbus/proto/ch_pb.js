// source: modules/canbus/proto/ch.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.apollo.canbus.Brake_command_111', null, global);
goog.exportSymbol('proto.apollo.canbus.Brake_command_111.Brake_pedal_en_ctrlType', null, global);
goog.exportSymbol('proto.apollo.canbus.Brake_status__511', null, global);
goog.exportSymbol('proto.apollo.canbus.Brake_status__511.Back_bump_envType', null, global);
goog.exportSymbol('proto.apollo.canbus.Brake_status__511.Brake_errType', null, global);
goog.exportSymbol('proto.apollo.canbus.Brake_status__511.Brake_pedal_en_stsType', null, global);
goog.exportSymbol('proto.apollo.canbus.Brake_status__511.Emergency_btn_envType', null, global);
goog.exportSymbol('proto.apollo.canbus.Brake_status__511.Front_bump_envType', null, global);
goog.exportSymbol('proto.apollo.canbus.Brake_status__511.Overspd_envType', null, global);
goog.exportSymbol('proto.apollo.canbus.Ch', null, global);
goog.exportSymbol('proto.apollo.canbus.Control_command_115', null, global);
goog.exportSymbol('proto.apollo.canbus.Control_command_115.Ctrl_cmdType', null, global);
goog.exportSymbol('proto.apollo.canbus.Ecu_status_1_515', null, global);
goog.exportSymbol('proto.apollo.canbus.Ecu_status_1_515.Ctrl_stsType', null, global);
goog.exportSymbol('proto.apollo.canbus.Ecu_status_2_516', null, global);
goog.exportSymbol('proto.apollo.canbus.Ecu_status_3_517', null, global);
goog.exportSymbol('proto.apollo.canbus.Gear_command_114', null, global);
goog.exportSymbol('proto.apollo.canbus.Gear_command_114.Gear_cmdType', null, global);
goog.exportSymbol('proto.apollo.canbus.Gear_status_514', null, global);
goog.exportSymbol('proto.apollo.canbus.Gear_status_514.Gear_stsType', null, global);
goog.exportSymbol('proto.apollo.canbus.Steer_command_112', null, global);
goog.exportSymbol('proto.apollo.canbus.Steer_command_112.Steer_angle_en_ctrlType', null, global);
goog.exportSymbol('proto.apollo.canbus.Steer_status__512', null, global);
goog.exportSymbol('proto.apollo.canbus.Steer_status__512.Sensor_errType', null, global);
goog.exportSymbol('proto.apollo.canbus.Steer_status__512.Steer_angle_en_stsType', null, global);
goog.exportSymbol('proto.apollo.canbus.Steer_status__512.Steer_errType', null, global);
goog.exportSymbol('proto.apollo.canbus.Throttle_command_110', null, global);
goog.exportSymbol('proto.apollo.canbus.Throttle_command_110.Throttle_pedal_en_ctrlType', null, global);
goog.exportSymbol('proto.apollo.canbus.Throttle_status__510', null, global);
goog.exportSymbol('proto.apollo.canbus.Throttle_status__510.Battery_bms_errType', null, global);
goog.exportSymbol('proto.apollo.canbus.Throttle_status__510.Drive_motor_errType', null, global);
goog.exportSymbol('proto.apollo.canbus.Throttle_status__510.Throttle_pedal_en_stsType', null, global);
goog.exportSymbol('proto.apollo.canbus.Turnsignal_command_113', null, global);
goog.exportSymbol('proto.apollo.canbus.Turnsignal_command_113.Turn_signal_cmdType', null, global);
goog.exportSymbol('proto.apollo.canbus.Turnsignal_status__513', null, global);
goog.exportSymbol('proto.apollo.canbus.Turnsignal_status__513.Turn_signal_stsType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Throttle_command_110 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Throttle_command_110, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Throttle_command_110.displayName = 'proto.apollo.canbus.Throttle_command_110';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Brake_command_111 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Brake_command_111, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Brake_command_111.displayName = 'proto.apollo.canbus.Brake_command_111';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Steer_command_112 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Steer_command_112, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Steer_command_112.displayName = 'proto.apollo.canbus.Steer_command_112';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Turnsignal_command_113 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Turnsignal_command_113, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Turnsignal_command_113.displayName = 'proto.apollo.canbus.Turnsignal_command_113';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Gear_command_114 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Gear_command_114, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Gear_command_114.displayName = 'proto.apollo.canbus.Gear_command_114';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Control_command_115 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Control_command_115, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Control_command_115.displayName = 'proto.apollo.canbus.Control_command_115';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Throttle_status__510 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Throttle_status__510, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Throttle_status__510.displayName = 'proto.apollo.canbus.Throttle_status__510';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Brake_status__511 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Brake_status__511, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Brake_status__511.displayName = 'proto.apollo.canbus.Brake_status__511';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Steer_status__512 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Steer_status__512, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Steer_status__512.displayName = 'proto.apollo.canbus.Steer_status__512';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Turnsignal_status__513 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Turnsignal_status__513, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Turnsignal_status__513.displayName = 'proto.apollo.canbus.Turnsignal_status__513';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Gear_status_514 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Gear_status_514, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Gear_status_514.displayName = 'proto.apollo.canbus.Gear_status_514';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Ecu_status_1_515 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Ecu_status_1_515, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Ecu_status_1_515.displayName = 'proto.apollo.canbus.Ecu_status_1_515';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Ecu_status_2_516 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Ecu_status_2_516, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Ecu_status_2_516.displayName = 'proto.apollo.canbus.Ecu_status_2_516';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Ecu_status_3_517 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Ecu_status_3_517, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Ecu_status_3_517.displayName = 'proto.apollo.canbus.Ecu_status_3_517';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Ch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Ch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Ch.displayName = 'proto.apollo.canbus.Ch';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Throttle_command_110.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Throttle_command_110.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Throttle_command_110} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Throttle_command_110.toObject = function(includeInstance, msg) {
  var f, obj = {
    throttlePedalEnCtrl: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    throttlePedalCmd: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Throttle_command_110 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Throttle_command_110.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.throttlePedalEnCtrl;

  /** @type {?|undefined} */
  this.throttlePedalCmd;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Throttle_command_110.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Throttle_command_110}
 */
proto.apollo.canbus.Throttle_command_110.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Throttle_command_110();
  obj.throttlePedalEnCtrl != null && jspb.Message.setField(msg, 1, obj.throttlePedalEnCtrl);
  obj.throttlePedalCmd != null && jspb.Message.setField(msg, 2, obj.throttlePedalCmd);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Throttle_command_110}
 */
proto.apollo.canbus.Throttle_command_110.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Throttle_command_110;
  return proto.apollo.canbus.Throttle_command_110.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Throttle_command_110} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Throttle_command_110}
 */
proto.apollo.canbus.Throttle_command_110.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.canbus.Throttle_command_110.Throttle_pedal_en_ctrlType} */ (reader.readEnum());
      msg.setThrottlePedalEnCtrl(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setThrottlePedalCmd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Throttle_command_110.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Throttle_command_110.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Throttle_command_110} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Throttle_command_110.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.canbus.Throttle_command_110.Throttle_pedal_en_ctrlType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Throttle_command_110.Throttle_pedal_en_ctrlType = {
  THROTTLE_PEDAL_EN_CTRL_DISABLE: 0,
  THROTTLE_PEDAL_EN_CTRL_ENABLE: 1
};

/**
 * optional Throttle_pedal_en_ctrlType throttle_pedal_en_ctrl = 1;
 * @return {!proto.apollo.canbus.Throttle_command_110.Throttle_pedal_en_ctrlType}
 */
proto.apollo.canbus.Throttle_command_110.prototype.getThrottlePedalEnCtrl = function() {
  return /** @type {!proto.apollo.canbus.Throttle_command_110.Throttle_pedal_en_ctrlType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.canbus.Throttle_command_110.Throttle_pedal_en_ctrlType} value
 * @return {!proto.apollo.canbus.Throttle_command_110} returns this
 */
proto.apollo.canbus.Throttle_command_110.prototype.setThrottlePedalEnCtrl = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Throttle_command_110} returns this
 */
proto.apollo.canbus.Throttle_command_110.prototype.clearThrottlePedalEnCtrl = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Throttle_command_110.prototype.hasThrottlePedalEnCtrl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 throttle_pedal_cmd = 2;
 * @return {number}
 */
proto.apollo.canbus.Throttle_command_110.prototype.getThrottlePedalCmd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Throttle_command_110} returns this
 */
proto.apollo.canbus.Throttle_command_110.prototype.setThrottlePedalCmd = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Throttle_command_110} returns this
 */
proto.apollo.canbus.Throttle_command_110.prototype.clearThrottlePedalCmd = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Throttle_command_110.prototype.hasThrottlePedalCmd = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Brake_command_111.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Brake_command_111.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Brake_command_111} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Brake_command_111.toObject = function(includeInstance, msg) {
  var f, obj = {
    brakePedalEnCtrl: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    brakePedalCmd: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Brake_command_111 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Brake_command_111.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.brakePedalEnCtrl;

  /** @type {?|undefined} */
  this.brakePedalCmd;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Brake_command_111.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Brake_command_111}
 */
proto.apollo.canbus.Brake_command_111.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Brake_command_111();
  obj.brakePedalEnCtrl != null && jspb.Message.setField(msg, 1, obj.brakePedalEnCtrl);
  obj.brakePedalCmd != null && jspb.Message.setField(msg, 2, obj.brakePedalCmd);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Brake_command_111}
 */
proto.apollo.canbus.Brake_command_111.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Brake_command_111;
  return proto.apollo.canbus.Brake_command_111.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Brake_command_111} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Brake_command_111}
 */
proto.apollo.canbus.Brake_command_111.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.canbus.Brake_command_111.Brake_pedal_en_ctrlType} */ (reader.readEnum());
      msg.setBrakePedalEnCtrl(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBrakePedalCmd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Brake_command_111.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Brake_command_111.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Brake_command_111} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Brake_command_111.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.canbus.Brake_command_111.Brake_pedal_en_ctrlType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Brake_command_111.Brake_pedal_en_ctrlType = {
  BRAKE_PEDAL_EN_CTRL_DISABLE: 0,
  BRAKE_PEDAL_EN_CTRL_ENABLE: 1
};

/**
 * optional Brake_pedal_en_ctrlType brake_pedal_en_ctrl = 1;
 * @return {!proto.apollo.canbus.Brake_command_111.Brake_pedal_en_ctrlType}
 */
proto.apollo.canbus.Brake_command_111.prototype.getBrakePedalEnCtrl = function() {
  return /** @type {!proto.apollo.canbus.Brake_command_111.Brake_pedal_en_ctrlType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.canbus.Brake_command_111.Brake_pedal_en_ctrlType} value
 * @return {!proto.apollo.canbus.Brake_command_111} returns this
 */
proto.apollo.canbus.Brake_command_111.prototype.setBrakePedalEnCtrl = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Brake_command_111} returns this
 */
proto.apollo.canbus.Brake_command_111.prototype.clearBrakePedalEnCtrl = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Brake_command_111.prototype.hasBrakePedalEnCtrl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 brake_pedal_cmd = 2;
 * @return {number}
 */
proto.apollo.canbus.Brake_command_111.prototype.getBrakePedalCmd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Brake_command_111} returns this
 */
proto.apollo.canbus.Brake_command_111.prototype.setBrakePedalCmd = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Brake_command_111} returns this
 */
proto.apollo.canbus.Brake_command_111.prototype.clearBrakePedalCmd = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Brake_command_111.prototype.hasBrakePedalCmd = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Steer_command_112.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Steer_command_112.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Steer_command_112} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Steer_command_112.toObject = function(includeInstance, msg) {
  var f, obj = {
    steerAngleEnCtrl: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    steerAngleCmd: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Steer_command_112 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Steer_command_112.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.steerAngleEnCtrl;

  /** @type {?|undefined} */
  this.steerAngleCmd;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Steer_command_112.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Steer_command_112}
 */
proto.apollo.canbus.Steer_command_112.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Steer_command_112();
  obj.steerAngleEnCtrl != null && jspb.Message.setField(msg, 1, obj.steerAngleEnCtrl);
  obj.steerAngleCmd != null && jspb.Message.setField(msg, 2, obj.steerAngleCmd);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Steer_command_112}
 */
proto.apollo.canbus.Steer_command_112.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Steer_command_112;
  return proto.apollo.canbus.Steer_command_112.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Steer_command_112} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Steer_command_112}
 */
proto.apollo.canbus.Steer_command_112.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.canbus.Steer_command_112.Steer_angle_en_ctrlType} */ (reader.readEnum());
      msg.setSteerAngleEnCtrl(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSteerAngleCmd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Steer_command_112.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Steer_command_112.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Steer_command_112} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Steer_command_112.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.canbus.Steer_command_112.Steer_angle_en_ctrlType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Steer_command_112.Steer_angle_en_ctrlType = {
  STEER_ANGLE_EN_CTRL_DISABLE: 0,
  STEER_ANGLE_EN_CTRL_ENABLE: 1
};

/**
 * optional Steer_angle_en_ctrlType steer_angle_en_ctrl = 1;
 * @return {!proto.apollo.canbus.Steer_command_112.Steer_angle_en_ctrlType}
 */
proto.apollo.canbus.Steer_command_112.prototype.getSteerAngleEnCtrl = function() {
  return /** @type {!proto.apollo.canbus.Steer_command_112.Steer_angle_en_ctrlType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.canbus.Steer_command_112.Steer_angle_en_ctrlType} value
 * @return {!proto.apollo.canbus.Steer_command_112} returns this
 */
proto.apollo.canbus.Steer_command_112.prototype.setSteerAngleEnCtrl = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Steer_command_112} returns this
 */
proto.apollo.canbus.Steer_command_112.prototype.clearSteerAngleEnCtrl = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Steer_command_112.prototype.hasSteerAngleEnCtrl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double steer_angle_cmd = 2;
 * @return {number}
 */
proto.apollo.canbus.Steer_command_112.prototype.getSteerAngleCmd = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Steer_command_112} returns this
 */
proto.apollo.canbus.Steer_command_112.prototype.setSteerAngleCmd = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Steer_command_112} returns this
 */
proto.apollo.canbus.Steer_command_112.prototype.clearSteerAngleCmd = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Steer_command_112.prototype.hasSteerAngleCmd = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Turnsignal_command_113.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Turnsignal_command_113.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Turnsignal_command_113} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Turnsignal_command_113.toObject = function(includeInstance, msg) {
  var f, obj = {
    turnSignalCmd: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Turnsignal_command_113 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Turnsignal_command_113.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.turnSignalCmd;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Turnsignal_command_113.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Turnsignal_command_113}
 */
proto.apollo.canbus.Turnsignal_command_113.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Turnsignal_command_113();
  obj.turnSignalCmd != null && jspb.Message.setField(msg, 1, obj.turnSignalCmd);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Turnsignal_command_113}
 */
proto.apollo.canbus.Turnsignal_command_113.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Turnsignal_command_113;
  return proto.apollo.canbus.Turnsignal_command_113.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Turnsignal_command_113} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Turnsignal_command_113}
 */
proto.apollo.canbus.Turnsignal_command_113.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.canbus.Turnsignal_command_113.Turn_signal_cmdType} */ (reader.readEnum());
      msg.setTurnSignalCmd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Turnsignal_command_113.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Turnsignal_command_113.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Turnsignal_command_113} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Turnsignal_command_113.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.canbus.Turnsignal_command_113.Turn_signal_cmdType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Turnsignal_command_113.Turn_signal_cmdType = {
  TURN_SIGNAL_CMD_NONE: 0,
  TURN_SIGNAL_CMD_LEFT: 1,
  TURN_SIGNAL_CMD_RIGHT: 2
};

/**
 * optional Turn_signal_cmdType turn_signal_cmd = 1;
 * @return {!proto.apollo.canbus.Turnsignal_command_113.Turn_signal_cmdType}
 */
proto.apollo.canbus.Turnsignal_command_113.prototype.getTurnSignalCmd = function() {
  return /** @type {!proto.apollo.canbus.Turnsignal_command_113.Turn_signal_cmdType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.canbus.Turnsignal_command_113.Turn_signal_cmdType} value
 * @return {!proto.apollo.canbus.Turnsignal_command_113} returns this
 */
proto.apollo.canbus.Turnsignal_command_113.prototype.setTurnSignalCmd = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Turnsignal_command_113} returns this
 */
proto.apollo.canbus.Turnsignal_command_113.prototype.clearTurnSignalCmd = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Turnsignal_command_113.prototype.hasTurnSignalCmd = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Gear_command_114.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Gear_command_114.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Gear_command_114} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Gear_command_114.toObject = function(includeInstance, msg) {
  var f, obj = {
    gearCmd: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Gear_command_114 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Gear_command_114.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.gearCmd;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Gear_command_114.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Gear_command_114}
 */
proto.apollo.canbus.Gear_command_114.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Gear_command_114();
  obj.gearCmd != null && jspb.Message.setField(msg, 1, obj.gearCmd);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Gear_command_114}
 */
proto.apollo.canbus.Gear_command_114.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Gear_command_114;
  return proto.apollo.canbus.Gear_command_114.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Gear_command_114} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Gear_command_114}
 */
proto.apollo.canbus.Gear_command_114.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.canbus.Gear_command_114.Gear_cmdType} */ (reader.readEnum());
      msg.setGearCmd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Gear_command_114.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Gear_command_114.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Gear_command_114} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Gear_command_114.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.canbus.Gear_command_114.Gear_cmdType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Gear_command_114.Gear_cmdType = {
  GEAR_CMD_PARK: 1,
  GEAR_CMD_REVERSE: 2,
  GEAR_CMD_NEUTRAL: 3,
  GEAR_CMD_DRIVE: 4
};

/**
 * optional Gear_cmdType gear_cmd = 1;
 * @return {!proto.apollo.canbus.Gear_command_114.Gear_cmdType}
 */
proto.apollo.canbus.Gear_command_114.prototype.getGearCmd = function() {
  return /** @type {!proto.apollo.canbus.Gear_command_114.Gear_cmdType} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.apollo.canbus.Gear_command_114.Gear_cmdType} value
 * @return {!proto.apollo.canbus.Gear_command_114} returns this
 */
proto.apollo.canbus.Gear_command_114.prototype.setGearCmd = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Gear_command_114} returns this
 */
proto.apollo.canbus.Gear_command_114.prototype.clearGearCmd = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Gear_command_114.prototype.hasGearCmd = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Control_command_115.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Control_command_115.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Control_command_115} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Control_command_115.toObject = function(includeInstance, msg) {
  var f, obj = {
    ctrlCmd: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Control_command_115 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Control_command_115.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.ctrlCmd;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Control_command_115.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Control_command_115}
 */
proto.apollo.canbus.Control_command_115.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Control_command_115();
  obj.ctrlCmd != null && jspb.Message.setField(msg, 1, obj.ctrlCmd);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Control_command_115}
 */
proto.apollo.canbus.Control_command_115.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Control_command_115;
  return proto.apollo.canbus.Control_command_115.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Control_command_115} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Control_command_115}
 */
proto.apollo.canbus.Control_command_115.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.canbus.Control_command_115.Ctrl_cmdType} */ (reader.readEnum());
      msg.setCtrlCmd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Control_command_115.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Control_command_115.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Control_command_115} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Control_command_115.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.canbus.Control_command_115.Ctrl_cmdType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Control_command_115.Ctrl_cmdType = {
  CTRL_CMD_OUT_OF_CONTROL: 0,
  CTRL_CMD_UNDER_CONTROL: 1
};

/**
 * optional Ctrl_cmdType ctrl_cmd = 1;
 * @return {!proto.apollo.canbus.Control_command_115.Ctrl_cmdType}
 */
proto.apollo.canbus.Control_command_115.prototype.getCtrlCmd = function() {
  return /** @type {!proto.apollo.canbus.Control_command_115.Ctrl_cmdType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.canbus.Control_command_115.Ctrl_cmdType} value
 * @return {!proto.apollo.canbus.Control_command_115} returns this
 */
proto.apollo.canbus.Control_command_115.prototype.setCtrlCmd = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Control_command_115} returns this
 */
proto.apollo.canbus.Control_command_115.prototype.clearCtrlCmd = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Control_command_115.prototype.hasCtrlCmd = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Throttle_status__510.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Throttle_status__510.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Throttle_status__510} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Throttle_status__510.toObject = function(includeInstance, msg) {
  var f, obj = {
    throttlePedalEnSts: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    throttlePedalSts: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    driveMotorErr: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    batteryBmsErr: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Throttle_status__510 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Throttle_status__510.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.throttlePedalEnSts;

  /** @type {?|undefined} */
  this.throttlePedalSts;

  /** @type {?|undefined} */
  this.driveMotorErr;

  /** @type {?|undefined} */
  this.batteryBmsErr;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Throttle_status__510.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Throttle_status__510}
 */
proto.apollo.canbus.Throttle_status__510.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Throttle_status__510();
  obj.throttlePedalEnSts != null && jspb.Message.setField(msg, 1, obj.throttlePedalEnSts);
  obj.throttlePedalSts != null && jspb.Message.setField(msg, 2, obj.throttlePedalSts);
  obj.driveMotorErr != null && jspb.Message.setField(msg, 3, obj.driveMotorErr);
  obj.batteryBmsErr != null && jspb.Message.setField(msg, 4, obj.batteryBmsErr);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Throttle_status__510}
 */
proto.apollo.canbus.Throttle_status__510.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Throttle_status__510;
  return proto.apollo.canbus.Throttle_status__510.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Throttle_status__510} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Throttle_status__510}
 */
proto.apollo.canbus.Throttle_status__510.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.canbus.Throttle_status__510.Throttle_pedal_en_stsType} */ (reader.readEnum());
      msg.setThrottlePedalEnSts(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setThrottlePedalSts(value);
      break;
    case 3:
      var value = /** @type {!proto.apollo.canbus.Throttle_status__510.Drive_motor_errType} */ (reader.readEnum());
      msg.setDriveMotorErr(value);
      break;
    case 4:
      var value = /** @type {!proto.apollo.canbus.Throttle_status__510.Battery_bms_errType} */ (reader.readEnum());
      msg.setBatteryBmsErr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Throttle_status__510.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Throttle_status__510.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Throttle_status__510} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Throttle_status__510.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.canbus.Throttle_status__510.Throttle_pedal_en_stsType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Throttle_status__510.Drive_motor_errType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Throttle_status__510.Battery_bms_errType} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Throttle_status__510.Throttle_pedal_en_stsType = {
  THROTTLE_PEDAL_EN_STS_DISABLE: 0,
  THROTTLE_PEDAL_EN_STS_ENABLE: 1,
  THROTTLE_PEDAL_EN_STS_TAKEOVER: 2
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Throttle_status__510.Drive_motor_errType = {
  DRIVE_MOTOR_ERR_NOERR: 0,
  DRIVE_MOTOR_ERR_DRV_MOTOR_ERR: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Throttle_status__510.Battery_bms_errType = {
  BATTERY_BMS_ERR_NOERR: 0,
  BATTERY_BMS_ERR_BATTERY_ERR: 1
};

/**
 * optional Throttle_pedal_en_stsType throttle_pedal_en_sts = 1;
 * @return {!proto.apollo.canbus.Throttle_status__510.Throttle_pedal_en_stsType}
 */
proto.apollo.canbus.Throttle_status__510.prototype.getThrottlePedalEnSts = function() {
  return /** @type {!proto.apollo.canbus.Throttle_status__510.Throttle_pedal_en_stsType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.canbus.Throttle_status__510.Throttle_pedal_en_stsType} value
 * @return {!proto.apollo.canbus.Throttle_status__510} returns this
 */
proto.apollo.canbus.Throttle_status__510.prototype.setThrottlePedalEnSts = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Throttle_status__510} returns this
 */
proto.apollo.canbus.Throttle_status__510.prototype.clearThrottlePedalEnSts = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Throttle_status__510.prototype.hasThrottlePedalEnSts = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 throttle_pedal_sts = 2;
 * @return {number}
 */
proto.apollo.canbus.Throttle_status__510.prototype.getThrottlePedalSts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Throttle_status__510} returns this
 */
proto.apollo.canbus.Throttle_status__510.prototype.setThrottlePedalSts = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Throttle_status__510} returns this
 */
proto.apollo.canbus.Throttle_status__510.prototype.clearThrottlePedalSts = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Throttle_status__510.prototype.hasThrottlePedalSts = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Drive_motor_errType drive_motor_err = 3;
 * @return {!proto.apollo.canbus.Throttle_status__510.Drive_motor_errType}
 */
proto.apollo.canbus.Throttle_status__510.prototype.getDriveMotorErr = function() {
  return /** @type {!proto.apollo.canbus.Throttle_status__510.Drive_motor_errType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.apollo.canbus.Throttle_status__510.Drive_motor_errType} value
 * @return {!proto.apollo.canbus.Throttle_status__510} returns this
 */
proto.apollo.canbus.Throttle_status__510.prototype.setDriveMotorErr = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Throttle_status__510} returns this
 */
proto.apollo.canbus.Throttle_status__510.prototype.clearDriveMotorErr = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Throttle_status__510.prototype.hasDriveMotorErr = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Battery_bms_errType battery_bms_err = 4;
 * @return {!proto.apollo.canbus.Throttle_status__510.Battery_bms_errType}
 */
proto.apollo.canbus.Throttle_status__510.prototype.getBatteryBmsErr = function() {
  return /** @type {!proto.apollo.canbus.Throttle_status__510.Battery_bms_errType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.apollo.canbus.Throttle_status__510.Battery_bms_errType} value
 * @return {!proto.apollo.canbus.Throttle_status__510} returns this
 */
proto.apollo.canbus.Throttle_status__510.prototype.setBatteryBmsErr = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Throttle_status__510} returns this
 */
proto.apollo.canbus.Throttle_status__510.prototype.clearBatteryBmsErr = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Throttle_status__510.prototype.hasBatteryBmsErr = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Brake_status__511.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Brake_status__511.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Brake_status__511} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Brake_status__511.toObject = function(includeInstance, msg) {
  var f, obj = {
    brakePedalEnSts: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    brakePedalSts: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    brakeErr: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    emergencyBtnEnv: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    frontBumpEnv: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    backBumpEnv: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    overspdEnv: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Brake_status__511 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Brake_status__511.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.brakePedalEnSts;

  /** @type {?|undefined} */
  this.brakePedalSts;

  /** @type {?|undefined} */
  this.brakeErr;

  /** @type {?|undefined} */
  this.emergencyBtnEnv;

  /** @type {?|undefined} */
  this.frontBumpEnv;

  /** @type {?|undefined} */
  this.backBumpEnv;

  /** @type {?|undefined} */
  this.overspdEnv;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Brake_status__511.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Brake_status__511}
 */
proto.apollo.canbus.Brake_status__511.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Brake_status__511();
  obj.brakePedalEnSts != null && jspb.Message.setField(msg, 1, obj.brakePedalEnSts);
  obj.brakePedalSts != null && jspb.Message.setField(msg, 2, obj.brakePedalSts);
  obj.brakeErr != null && jspb.Message.setField(msg, 3, obj.brakeErr);
  obj.emergencyBtnEnv != null && jspb.Message.setField(msg, 4, obj.emergencyBtnEnv);
  obj.frontBumpEnv != null && jspb.Message.setField(msg, 5, obj.frontBumpEnv);
  obj.backBumpEnv != null && jspb.Message.setField(msg, 6, obj.backBumpEnv);
  obj.overspdEnv != null && jspb.Message.setField(msg, 7, obj.overspdEnv);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Brake_status__511}
 */
proto.apollo.canbus.Brake_status__511.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Brake_status__511;
  return proto.apollo.canbus.Brake_status__511.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Brake_status__511} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Brake_status__511}
 */
proto.apollo.canbus.Brake_status__511.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.canbus.Brake_status__511.Brake_pedal_en_stsType} */ (reader.readEnum());
      msg.setBrakePedalEnSts(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBrakePedalSts(value);
      break;
    case 3:
      var value = /** @type {!proto.apollo.canbus.Brake_status__511.Brake_errType} */ (reader.readEnum());
      msg.setBrakeErr(value);
      break;
    case 4:
      var value = /** @type {!proto.apollo.canbus.Brake_status__511.Emergency_btn_envType} */ (reader.readEnum());
      msg.setEmergencyBtnEnv(value);
      break;
    case 5:
      var value = /** @type {!proto.apollo.canbus.Brake_status__511.Front_bump_envType} */ (reader.readEnum());
      msg.setFrontBumpEnv(value);
      break;
    case 6:
      var value = /** @type {!proto.apollo.canbus.Brake_status__511.Back_bump_envType} */ (reader.readEnum());
      msg.setBackBumpEnv(value);
      break;
    case 7:
      var value = /** @type {!proto.apollo.canbus.Brake_status__511.Overspd_envType} */ (reader.readEnum());
      msg.setOverspdEnv(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Brake_status__511.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Brake_status__511.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Brake_status__511} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Brake_status__511.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.canbus.Brake_status__511.Brake_pedal_en_stsType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Brake_status__511.Brake_errType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Brake_status__511.Emergency_btn_envType} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Brake_status__511.Front_bump_envType} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Brake_status__511.Back_bump_envType} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Brake_status__511.Overspd_envType} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeEnum(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Brake_status__511.Brake_pedal_en_stsType = {
  BRAKE_PEDAL_EN_STS_DISABLE: 0,
  BRAKE_PEDAL_EN_STS_ENABLE: 1,
  BRAKE_PEDAL_EN_STS_TAKEOVER: 2
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Brake_status__511.Brake_errType = {
  BRAKE_ERR_NOERR: 0,
  BRAKE_ERR_BRAKE_SYSTEM_ERR: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Brake_status__511.Emergency_btn_envType = {
  EMERGENCY_BTN_ENV_NOENV: 0,
  EMERGENCY_BTN_ENV_EMERGENCY_BUTTON_ENV: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Brake_status__511.Front_bump_envType = {
  FRONT_BUMP_ENV_NOENV: 0,
  FRONT_BUMP_ENV_FRONT_BUMPER_ENV: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Brake_status__511.Back_bump_envType = {
  BACK_BUMP_ENV_NOENV: 0,
  BACK_BUMP_ENV_BACK_BUMPER_ENV: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Brake_status__511.Overspd_envType = {
  OVERSPD_ENV_NOENV: 0,
  OVERSPD_ENV_OVERSPEED_ENV: 1
};

/**
 * optional Brake_pedal_en_stsType brake_pedal_en_sts = 1;
 * @return {!proto.apollo.canbus.Brake_status__511.Brake_pedal_en_stsType}
 */
proto.apollo.canbus.Brake_status__511.prototype.getBrakePedalEnSts = function() {
  return /** @type {!proto.apollo.canbus.Brake_status__511.Brake_pedal_en_stsType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.canbus.Brake_status__511.Brake_pedal_en_stsType} value
 * @return {!proto.apollo.canbus.Brake_status__511} returns this
 */
proto.apollo.canbus.Brake_status__511.prototype.setBrakePedalEnSts = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Brake_status__511} returns this
 */
proto.apollo.canbus.Brake_status__511.prototype.clearBrakePedalEnSts = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Brake_status__511.prototype.hasBrakePedalEnSts = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 brake_pedal_sts = 2;
 * @return {number}
 */
proto.apollo.canbus.Brake_status__511.prototype.getBrakePedalSts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Brake_status__511} returns this
 */
proto.apollo.canbus.Brake_status__511.prototype.setBrakePedalSts = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Brake_status__511} returns this
 */
proto.apollo.canbus.Brake_status__511.prototype.clearBrakePedalSts = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Brake_status__511.prototype.hasBrakePedalSts = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Brake_errType brake_err = 3;
 * @return {!proto.apollo.canbus.Brake_status__511.Brake_errType}
 */
proto.apollo.canbus.Brake_status__511.prototype.getBrakeErr = function() {
  return /** @type {!proto.apollo.canbus.Brake_status__511.Brake_errType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.apollo.canbus.Brake_status__511.Brake_errType} value
 * @return {!proto.apollo.canbus.Brake_status__511} returns this
 */
proto.apollo.canbus.Brake_status__511.prototype.setBrakeErr = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Brake_status__511} returns this
 */
proto.apollo.canbus.Brake_status__511.prototype.clearBrakeErr = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Brake_status__511.prototype.hasBrakeErr = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Emergency_btn_envType emergency_btn_env = 4;
 * @return {!proto.apollo.canbus.Brake_status__511.Emergency_btn_envType}
 */
proto.apollo.canbus.Brake_status__511.prototype.getEmergencyBtnEnv = function() {
  return /** @type {!proto.apollo.canbus.Brake_status__511.Emergency_btn_envType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.apollo.canbus.Brake_status__511.Emergency_btn_envType} value
 * @return {!proto.apollo.canbus.Brake_status__511} returns this
 */
proto.apollo.canbus.Brake_status__511.prototype.setEmergencyBtnEnv = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Brake_status__511} returns this
 */
proto.apollo.canbus.Brake_status__511.prototype.clearEmergencyBtnEnv = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Brake_status__511.prototype.hasEmergencyBtnEnv = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Front_bump_envType front_bump_env = 5;
 * @return {!proto.apollo.canbus.Brake_status__511.Front_bump_envType}
 */
proto.apollo.canbus.Brake_status__511.prototype.getFrontBumpEnv = function() {
  return /** @type {!proto.apollo.canbus.Brake_status__511.Front_bump_envType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.apollo.canbus.Brake_status__511.Front_bump_envType} value
 * @return {!proto.apollo.canbus.Brake_status__511} returns this
 */
proto.apollo.canbus.Brake_status__511.prototype.setFrontBumpEnv = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Brake_status__511} returns this
 */
proto.apollo.canbus.Brake_status__511.prototype.clearFrontBumpEnv = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Brake_status__511.prototype.hasFrontBumpEnv = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Back_bump_envType back_bump_env = 6;
 * @return {!proto.apollo.canbus.Brake_status__511.Back_bump_envType}
 */
proto.apollo.canbus.Brake_status__511.prototype.getBackBumpEnv = function() {
  return /** @type {!proto.apollo.canbus.Brake_status__511.Back_bump_envType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.apollo.canbus.Brake_status__511.Back_bump_envType} value
 * @return {!proto.apollo.canbus.Brake_status__511} returns this
 */
proto.apollo.canbus.Brake_status__511.prototype.setBackBumpEnv = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Brake_status__511} returns this
 */
proto.apollo.canbus.Brake_status__511.prototype.clearBackBumpEnv = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Brake_status__511.prototype.hasBackBumpEnv = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Overspd_envType overspd_env = 7;
 * @return {!proto.apollo.canbus.Brake_status__511.Overspd_envType}
 */
proto.apollo.canbus.Brake_status__511.prototype.getOverspdEnv = function() {
  return /** @type {!proto.apollo.canbus.Brake_status__511.Overspd_envType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.apollo.canbus.Brake_status__511.Overspd_envType} value
 * @return {!proto.apollo.canbus.Brake_status__511} returns this
 */
proto.apollo.canbus.Brake_status__511.prototype.setOverspdEnv = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Brake_status__511} returns this
 */
proto.apollo.canbus.Brake_status__511.prototype.clearOverspdEnv = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Brake_status__511.prototype.hasOverspdEnv = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Steer_status__512.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Steer_status__512.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Steer_status__512} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Steer_status__512.toObject = function(includeInstance, msg) {
  var f, obj = {
    steerAngleEnSts: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    steerAngleSts: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    steerErr: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    sensorErr: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Steer_status__512 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Steer_status__512.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.steerAngleEnSts;

  /** @type {?|undefined} */
  this.steerAngleSts;

  /** @type {?|undefined} */
  this.steerErr;

  /** @type {?|undefined} */
  this.sensorErr;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Steer_status__512.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Steer_status__512}
 */
proto.apollo.canbus.Steer_status__512.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Steer_status__512();
  obj.steerAngleEnSts != null && jspb.Message.setField(msg, 1, obj.steerAngleEnSts);
  obj.steerAngleSts != null && jspb.Message.setField(msg, 2, obj.steerAngleSts);
  obj.steerErr != null && jspb.Message.setField(msg, 3, obj.steerErr);
  obj.sensorErr != null && jspb.Message.setField(msg, 4, obj.sensorErr);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Steer_status__512}
 */
proto.apollo.canbus.Steer_status__512.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Steer_status__512;
  return proto.apollo.canbus.Steer_status__512.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Steer_status__512} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Steer_status__512}
 */
proto.apollo.canbus.Steer_status__512.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.canbus.Steer_status__512.Steer_angle_en_stsType} */ (reader.readEnum());
      msg.setSteerAngleEnSts(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSteerAngleSts(value);
      break;
    case 3:
      var value = /** @type {!proto.apollo.canbus.Steer_status__512.Steer_errType} */ (reader.readEnum());
      msg.setSteerErr(value);
      break;
    case 4:
      var value = /** @type {!proto.apollo.canbus.Steer_status__512.Sensor_errType} */ (reader.readEnum());
      msg.setSensorErr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Steer_status__512.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Steer_status__512.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Steer_status__512} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Steer_status__512.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.canbus.Steer_status__512.Steer_angle_en_stsType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Steer_status__512.Steer_errType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Steer_status__512.Sensor_errType} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Steer_status__512.Steer_angle_en_stsType = {
  STEER_ANGLE_EN_STS_DISABLE: 0,
  STEER_ANGLE_EN_STS_ENABLE: 1,
  STEER_ANGLE_EN_STS_TAKEOVER: 2
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Steer_status__512.Steer_errType = {
  STEER_ERR_NOERR: 0,
  STEER_ERR_STEER_MOTOR_ERR: 1
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Steer_status__512.Sensor_errType = {
  SENSOR_ERR_NOERR: 0,
  SENSOR_ERR_STEER_SENSOR_ERR: 1
};

/**
 * optional Steer_angle_en_stsType steer_angle_en_sts = 1;
 * @return {!proto.apollo.canbus.Steer_status__512.Steer_angle_en_stsType}
 */
proto.apollo.canbus.Steer_status__512.prototype.getSteerAngleEnSts = function() {
  return /** @type {!proto.apollo.canbus.Steer_status__512.Steer_angle_en_stsType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.canbus.Steer_status__512.Steer_angle_en_stsType} value
 * @return {!proto.apollo.canbus.Steer_status__512} returns this
 */
proto.apollo.canbus.Steer_status__512.prototype.setSteerAngleEnSts = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Steer_status__512} returns this
 */
proto.apollo.canbus.Steer_status__512.prototype.clearSteerAngleEnSts = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Steer_status__512.prototype.hasSteerAngleEnSts = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double steer_angle_sts = 2;
 * @return {number}
 */
proto.apollo.canbus.Steer_status__512.prototype.getSteerAngleSts = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Steer_status__512} returns this
 */
proto.apollo.canbus.Steer_status__512.prototype.setSteerAngleSts = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Steer_status__512} returns this
 */
proto.apollo.canbus.Steer_status__512.prototype.clearSteerAngleSts = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Steer_status__512.prototype.hasSteerAngleSts = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Steer_errType steer_err = 3;
 * @return {!proto.apollo.canbus.Steer_status__512.Steer_errType}
 */
proto.apollo.canbus.Steer_status__512.prototype.getSteerErr = function() {
  return /** @type {!proto.apollo.canbus.Steer_status__512.Steer_errType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.apollo.canbus.Steer_status__512.Steer_errType} value
 * @return {!proto.apollo.canbus.Steer_status__512} returns this
 */
proto.apollo.canbus.Steer_status__512.prototype.setSteerErr = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Steer_status__512} returns this
 */
proto.apollo.canbus.Steer_status__512.prototype.clearSteerErr = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Steer_status__512.prototype.hasSteerErr = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Sensor_errType sensor_err = 4;
 * @return {!proto.apollo.canbus.Steer_status__512.Sensor_errType}
 */
proto.apollo.canbus.Steer_status__512.prototype.getSensorErr = function() {
  return /** @type {!proto.apollo.canbus.Steer_status__512.Sensor_errType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.apollo.canbus.Steer_status__512.Sensor_errType} value
 * @return {!proto.apollo.canbus.Steer_status__512} returns this
 */
proto.apollo.canbus.Steer_status__512.prototype.setSensorErr = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Steer_status__512} returns this
 */
proto.apollo.canbus.Steer_status__512.prototype.clearSensorErr = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Steer_status__512.prototype.hasSensorErr = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Turnsignal_status__513.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Turnsignal_status__513.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Turnsignal_status__513} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Turnsignal_status__513.toObject = function(includeInstance, msg) {
  var f, obj = {
    turnSignalSts: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Turnsignal_status__513 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Turnsignal_status__513.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.turnSignalSts;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Turnsignal_status__513.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Turnsignal_status__513}
 */
proto.apollo.canbus.Turnsignal_status__513.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Turnsignal_status__513();
  obj.turnSignalSts != null && jspb.Message.setField(msg, 1, obj.turnSignalSts);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Turnsignal_status__513}
 */
proto.apollo.canbus.Turnsignal_status__513.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Turnsignal_status__513;
  return proto.apollo.canbus.Turnsignal_status__513.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Turnsignal_status__513} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Turnsignal_status__513}
 */
proto.apollo.canbus.Turnsignal_status__513.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.canbus.Turnsignal_status__513.Turn_signal_stsType} */ (reader.readEnum());
      msg.setTurnSignalSts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Turnsignal_status__513.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Turnsignal_status__513.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Turnsignal_status__513} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Turnsignal_status__513.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.canbus.Turnsignal_status__513.Turn_signal_stsType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Turnsignal_status__513.Turn_signal_stsType = {
  TURN_SIGNAL_STS_NONE: 0,
  TURN_SIGNAL_STS_LEFT: 1,
  TURN_SIGNAL_STS_RIGHT: 2
};

/**
 * optional Turn_signal_stsType turn_signal_sts = 1;
 * @return {!proto.apollo.canbus.Turnsignal_status__513.Turn_signal_stsType}
 */
proto.apollo.canbus.Turnsignal_status__513.prototype.getTurnSignalSts = function() {
  return /** @type {!proto.apollo.canbus.Turnsignal_status__513.Turn_signal_stsType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.canbus.Turnsignal_status__513.Turn_signal_stsType} value
 * @return {!proto.apollo.canbus.Turnsignal_status__513} returns this
 */
proto.apollo.canbus.Turnsignal_status__513.prototype.setTurnSignalSts = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Turnsignal_status__513} returns this
 */
proto.apollo.canbus.Turnsignal_status__513.prototype.clearTurnSignalSts = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Turnsignal_status__513.prototype.hasTurnSignalSts = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Gear_status_514.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Gear_status_514.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Gear_status_514} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Gear_status_514.toObject = function(includeInstance, msg) {
  var f, obj = {
    gearSts: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Gear_status_514 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Gear_status_514.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.gearSts;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Gear_status_514.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Gear_status_514}
 */
proto.apollo.canbus.Gear_status_514.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Gear_status_514();
  obj.gearSts != null && jspb.Message.setField(msg, 1, obj.gearSts);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Gear_status_514}
 */
proto.apollo.canbus.Gear_status_514.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Gear_status_514;
  return proto.apollo.canbus.Gear_status_514.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Gear_status_514} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Gear_status_514}
 */
proto.apollo.canbus.Gear_status_514.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.canbus.Gear_status_514.Gear_stsType} */ (reader.readEnum());
      msg.setGearSts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Gear_status_514.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Gear_status_514.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Gear_status_514} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Gear_status_514.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.canbus.Gear_status_514.Gear_stsType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Gear_status_514.Gear_stsType = {
  GEAR_STS_PARK: 1,
  GEAR_STS_REVERSE: 2,
  GEAR_STS_NEUTRAL: 3,
  GEAR_STS_DRIVE: 4
};

/**
 * optional Gear_stsType gear_sts = 1;
 * @return {!proto.apollo.canbus.Gear_status_514.Gear_stsType}
 */
proto.apollo.canbus.Gear_status_514.prototype.getGearSts = function() {
  return /** @type {!proto.apollo.canbus.Gear_status_514.Gear_stsType} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.apollo.canbus.Gear_status_514.Gear_stsType} value
 * @return {!proto.apollo.canbus.Gear_status_514} returns this
 */
proto.apollo.canbus.Gear_status_514.prototype.setGearSts = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Gear_status_514} returns this
 */
proto.apollo.canbus.Gear_status_514.prototype.clearGearSts = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Gear_status_514.prototype.hasGearSts = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Ecu_status_1_515.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Ecu_status_1_515.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Ecu_status_1_515} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Ecu_status_1_515.toObject = function(includeInstance, msg) {
  var f, obj = {
    speed: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    accSpeed: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    ctrlSts: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    chassisSts: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    chassisErr: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Ecu_status_1_515 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Ecu_status_1_515.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.speed;

  /** @type {?|undefined} */
  this.accSpeed;

  /** @type {?|undefined} */
  this.ctrlSts;

  /** @type {?|undefined} */
  this.chassisSts;

  /** @type {?|undefined} */
  this.chassisErr;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Ecu_status_1_515.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Ecu_status_1_515}
 */
proto.apollo.canbus.Ecu_status_1_515.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Ecu_status_1_515();
  obj.speed != null && jspb.Message.setField(msg, 1, obj.speed);
  obj.accSpeed != null && jspb.Message.setField(msg, 2, obj.accSpeed);
  obj.ctrlSts != null && jspb.Message.setField(msg, 3, obj.ctrlSts);
  obj.chassisSts != null && jspb.Message.setField(msg, 4, obj.chassisSts);
  obj.chassisErr != null && jspb.Message.setField(msg, 5, obj.chassisErr);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Ecu_status_1_515}
 */
proto.apollo.canbus.Ecu_status_1_515.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Ecu_status_1_515;
  return proto.apollo.canbus.Ecu_status_1_515.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Ecu_status_1_515} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Ecu_status_1_515}
 */
proto.apollo.canbus.Ecu_status_1_515.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSpeed(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAccSpeed(value);
      break;
    case 3:
      var value = /** @type {!proto.apollo.canbus.Ecu_status_1_515.Ctrl_stsType} */ (reader.readEnum());
      msg.setCtrlSts(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChassisSts(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChassisErr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Ecu_status_1_515.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Ecu_status_1_515.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Ecu_status_1_515} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Ecu_status_1_515.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Ecu_status_1_515.Ctrl_stsType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Ecu_status_1_515.Ctrl_stsType = {
  CTRL_STS_OUT_OF_CONTROL: 0,
  CTRL_STS_UNDER_CONTROL: 1
};

/**
 * optional double speed = 1;
 * @return {number}
 */
proto.apollo.canbus.Ecu_status_1_515.prototype.getSpeed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ecu_status_1_515} returns this
 */
proto.apollo.canbus.Ecu_status_1_515.prototype.setSpeed = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ecu_status_1_515} returns this
 */
proto.apollo.canbus.Ecu_status_1_515.prototype.clearSpeed = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ecu_status_1_515.prototype.hasSpeed = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double acc_speed = 2;
 * @return {number}
 */
proto.apollo.canbus.Ecu_status_1_515.prototype.getAccSpeed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ecu_status_1_515} returns this
 */
proto.apollo.canbus.Ecu_status_1_515.prototype.setAccSpeed = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ecu_status_1_515} returns this
 */
proto.apollo.canbus.Ecu_status_1_515.prototype.clearAccSpeed = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ecu_status_1_515.prototype.hasAccSpeed = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Ctrl_stsType ctrl_sts = 3;
 * @return {!proto.apollo.canbus.Ecu_status_1_515.Ctrl_stsType}
 */
proto.apollo.canbus.Ecu_status_1_515.prototype.getCtrlSts = function() {
  return /** @type {!proto.apollo.canbus.Ecu_status_1_515.Ctrl_stsType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.apollo.canbus.Ecu_status_1_515.Ctrl_stsType} value
 * @return {!proto.apollo.canbus.Ecu_status_1_515} returns this
 */
proto.apollo.canbus.Ecu_status_1_515.prototype.setCtrlSts = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ecu_status_1_515} returns this
 */
proto.apollo.canbus.Ecu_status_1_515.prototype.clearCtrlSts = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ecu_status_1_515.prototype.hasCtrlSts = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 chassis_sts = 4;
 * @return {number}
 */
proto.apollo.canbus.Ecu_status_1_515.prototype.getChassisSts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ecu_status_1_515} returns this
 */
proto.apollo.canbus.Ecu_status_1_515.prototype.setChassisSts = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ecu_status_1_515} returns this
 */
proto.apollo.canbus.Ecu_status_1_515.prototype.clearChassisSts = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ecu_status_1_515.prototype.hasChassisSts = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 chassis_err = 5;
 * @return {number}
 */
proto.apollo.canbus.Ecu_status_1_515.prototype.getChassisErr = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ecu_status_1_515} returns this
 */
proto.apollo.canbus.Ecu_status_1_515.prototype.setChassisErr = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ecu_status_1_515} returns this
 */
proto.apollo.canbus.Ecu_status_1_515.prototype.clearChassisErr = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ecu_status_1_515.prototype.hasChassisErr = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Ecu_status_2_516.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Ecu_status_2_516.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Ecu_status_2_516} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Ecu_status_2_516.toObject = function(includeInstance, msg) {
  var f, obj = {
    batterySoc: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    batteryCapacity: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    batteryVoltage: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    batteryCurrent: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    batteryTemperature: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Ecu_status_2_516 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Ecu_status_2_516.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.batterySoc;

  /** @type {?|undefined} */
  this.batteryCapacity;

  /** @type {?|undefined} */
  this.batteryVoltage;

  /** @type {?|undefined} */
  this.batteryCurrent;

  /** @type {?|undefined} */
  this.batteryTemperature;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Ecu_status_2_516.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Ecu_status_2_516}
 */
proto.apollo.canbus.Ecu_status_2_516.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Ecu_status_2_516();
  obj.batterySoc != null && jspb.Message.setField(msg, 1, obj.batterySoc);
  obj.batteryCapacity != null && jspb.Message.setField(msg, 2, obj.batteryCapacity);
  obj.batteryVoltage != null && jspb.Message.setField(msg, 3, obj.batteryVoltage);
  obj.batteryCurrent != null && jspb.Message.setField(msg, 4, obj.batteryCurrent);
  obj.batteryTemperature != null && jspb.Message.setField(msg, 5, obj.batteryTemperature);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Ecu_status_2_516}
 */
proto.apollo.canbus.Ecu_status_2_516.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Ecu_status_2_516;
  return proto.apollo.canbus.Ecu_status_2_516.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Ecu_status_2_516} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Ecu_status_2_516}
 */
proto.apollo.canbus.Ecu_status_2_516.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBatterySoc(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBatteryCapacity(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBatteryVoltage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBatteryCurrent(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBatteryTemperature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Ecu_status_2_516.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Ecu_status_2_516.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Ecu_status_2_516} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Ecu_status_2_516.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int32 battery_soc = 1;
 * @return {number}
 */
proto.apollo.canbus.Ecu_status_2_516.prototype.getBatterySoc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ecu_status_2_516} returns this
 */
proto.apollo.canbus.Ecu_status_2_516.prototype.setBatterySoc = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ecu_status_2_516} returns this
 */
proto.apollo.canbus.Ecu_status_2_516.prototype.clearBatterySoc = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ecu_status_2_516.prototype.hasBatterySoc = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 battery_capacity = 2;
 * @return {number}
 */
proto.apollo.canbus.Ecu_status_2_516.prototype.getBatteryCapacity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ecu_status_2_516} returns this
 */
proto.apollo.canbus.Ecu_status_2_516.prototype.setBatteryCapacity = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ecu_status_2_516} returns this
 */
proto.apollo.canbus.Ecu_status_2_516.prototype.clearBatteryCapacity = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ecu_status_2_516.prototype.hasBatteryCapacity = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double battery_voltage = 3;
 * @return {number}
 */
proto.apollo.canbus.Ecu_status_2_516.prototype.getBatteryVoltage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ecu_status_2_516} returns this
 */
proto.apollo.canbus.Ecu_status_2_516.prototype.setBatteryVoltage = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ecu_status_2_516} returns this
 */
proto.apollo.canbus.Ecu_status_2_516.prototype.clearBatteryVoltage = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ecu_status_2_516.prototype.hasBatteryVoltage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double battery_current = 4;
 * @return {number}
 */
proto.apollo.canbus.Ecu_status_2_516.prototype.getBatteryCurrent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ecu_status_2_516} returns this
 */
proto.apollo.canbus.Ecu_status_2_516.prototype.setBatteryCurrent = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ecu_status_2_516} returns this
 */
proto.apollo.canbus.Ecu_status_2_516.prototype.clearBatteryCurrent = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ecu_status_2_516.prototype.hasBatteryCurrent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 battery_temperature = 5;
 * @return {number}
 */
proto.apollo.canbus.Ecu_status_2_516.prototype.getBatteryTemperature = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ecu_status_2_516} returns this
 */
proto.apollo.canbus.Ecu_status_2_516.prototype.setBatteryTemperature = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ecu_status_2_516} returns this
 */
proto.apollo.canbus.Ecu_status_2_516.prototype.clearBatteryTemperature = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ecu_status_2_516.prototype.hasBatteryTemperature = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Ecu_status_3_517.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Ecu_status_3_517} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Ecu_status_3_517.toObject = function(includeInstance, msg) {
  var f, obj = {
    ultrasoundDist1: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    ultrasoundDist2: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    ultrasoundDist3: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    ultrasoundDist4: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    ultrasoundDist5: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    ultrasoundDist6: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    ultrasoundDist7: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    ultrasoundDist8: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Ecu_status_3_517 as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Ecu_status_3_517.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.ultrasoundDist1;

  /** @type {?|undefined} */
  this.ultrasoundDist2;

  /** @type {?|undefined} */
  this.ultrasoundDist3;

  /** @type {?|undefined} */
  this.ultrasoundDist4;

  /** @type {?|undefined} */
  this.ultrasoundDist5;

  /** @type {?|undefined} */
  this.ultrasoundDist6;

  /** @type {?|undefined} */
  this.ultrasoundDist7;

  /** @type {?|undefined} */
  this.ultrasoundDist8;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Ecu_status_3_517.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Ecu_status_3_517}
 */
proto.apollo.canbus.Ecu_status_3_517.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Ecu_status_3_517();
  obj.ultrasoundDist1 != null && jspb.Message.setField(msg, 1, obj.ultrasoundDist1);
  obj.ultrasoundDist2 != null && jspb.Message.setField(msg, 2, obj.ultrasoundDist2);
  obj.ultrasoundDist3 != null && jspb.Message.setField(msg, 3, obj.ultrasoundDist3);
  obj.ultrasoundDist4 != null && jspb.Message.setField(msg, 4, obj.ultrasoundDist4);
  obj.ultrasoundDist5 != null && jspb.Message.setField(msg, 5, obj.ultrasoundDist5);
  obj.ultrasoundDist6 != null && jspb.Message.setField(msg, 6, obj.ultrasoundDist6);
  obj.ultrasoundDist7 != null && jspb.Message.setField(msg, 7, obj.ultrasoundDist7);
  obj.ultrasoundDist8 != null && jspb.Message.setField(msg, 8, obj.ultrasoundDist8);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Ecu_status_3_517}
 */
proto.apollo.canbus.Ecu_status_3_517.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Ecu_status_3_517;
  return proto.apollo.canbus.Ecu_status_3_517.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Ecu_status_3_517} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Ecu_status_3_517}
 */
proto.apollo.canbus.Ecu_status_3_517.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUltrasoundDist1(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUltrasoundDist2(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUltrasoundDist3(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUltrasoundDist4(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUltrasoundDist5(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUltrasoundDist6(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUltrasoundDist7(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUltrasoundDist8(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Ecu_status_3_517.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Ecu_status_3_517} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Ecu_status_3_517.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
};


/**
 * optional double ultrasound_dist_1 = 1;
 * @return {number}
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.getUltrasoundDist1 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ecu_status_3_517} returns this
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.setUltrasoundDist1 = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ecu_status_3_517} returns this
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.clearUltrasoundDist1 = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.hasUltrasoundDist1 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double ultrasound_dist_2 = 2;
 * @return {number}
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.getUltrasoundDist2 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ecu_status_3_517} returns this
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.setUltrasoundDist2 = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ecu_status_3_517} returns this
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.clearUltrasoundDist2 = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.hasUltrasoundDist2 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double ultrasound_dist_3 = 3;
 * @return {number}
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.getUltrasoundDist3 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ecu_status_3_517} returns this
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.setUltrasoundDist3 = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ecu_status_3_517} returns this
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.clearUltrasoundDist3 = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.hasUltrasoundDist3 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double ultrasound_dist_4 = 4;
 * @return {number}
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.getUltrasoundDist4 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ecu_status_3_517} returns this
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.setUltrasoundDist4 = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ecu_status_3_517} returns this
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.clearUltrasoundDist4 = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.hasUltrasoundDist4 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double ultrasound_dist_5 = 5;
 * @return {number}
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.getUltrasoundDist5 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ecu_status_3_517} returns this
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.setUltrasoundDist5 = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ecu_status_3_517} returns this
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.clearUltrasoundDist5 = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.hasUltrasoundDist5 = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double ultrasound_dist_6 = 6;
 * @return {number}
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.getUltrasoundDist6 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ecu_status_3_517} returns this
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.setUltrasoundDist6 = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ecu_status_3_517} returns this
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.clearUltrasoundDist6 = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.hasUltrasoundDist6 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double ultrasound_dist_7 = 7;
 * @return {number}
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.getUltrasoundDist7 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ecu_status_3_517} returns this
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.setUltrasoundDist7 = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ecu_status_3_517} returns this
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.clearUltrasoundDist7 = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.hasUltrasoundDist7 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double ultrasound_dist_8 = 8;
 * @return {number}
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.getUltrasoundDist8 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Ecu_status_3_517} returns this
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.setUltrasoundDist8 = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Ecu_status_3_517} returns this
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.clearUltrasoundDist8 = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ecu_status_3_517.prototype.hasUltrasoundDist8 = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Ch.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Ch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Ch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Ch.toObject = function(includeInstance, msg) {
  var f, obj = {
    throttleCommand110: (f = msg.getThrottleCommand110()) && proto.apollo.canbus.Throttle_command_110.toObject(includeInstance, f),
    brakeCommand111: (f = msg.getBrakeCommand111()) && proto.apollo.canbus.Brake_command_111.toObject(includeInstance, f),
    steerCommand112: (f = msg.getSteerCommand112()) && proto.apollo.canbus.Steer_command_112.toObject(includeInstance, f),
    turnsignalCommand113: (f = msg.getTurnsignalCommand113()) && proto.apollo.canbus.Turnsignal_command_113.toObject(includeInstance, f),
    gearCommand114: (f = msg.getGearCommand114()) && proto.apollo.canbus.Gear_command_114.toObject(includeInstance, f),
    controlCommand115: (f = msg.getControlCommand115()) && proto.apollo.canbus.Control_command_115.toObject(includeInstance, f),
    throttleStatus510: (f = msg.getThrottleStatus510()) && proto.apollo.canbus.Throttle_status__510.toObject(includeInstance, f),
    brakeStatus511: (f = msg.getBrakeStatus511()) && proto.apollo.canbus.Brake_status__511.toObject(includeInstance, f),
    steerStatus512: (f = msg.getSteerStatus512()) && proto.apollo.canbus.Steer_status__512.toObject(includeInstance, f),
    turnsignalStatus513: (f = msg.getTurnsignalStatus513()) && proto.apollo.canbus.Turnsignal_status__513.toObject(includeInstance, f),
    gearStatus514: (f = msg.getGearStatus514()) && proto.apollo.canbus.Gear_status_514.toObject(includeInstance, f),
    ecuStatus1515: (f = msg.getEcuStatus1515()) && proto.apollo.canbus.Ecu_status_1_515.toObject(includeInstance, f),
    ecuStatus2516: (f = msg.getEcuStatus2516()) && proto.apollo.canbus.Ecu_status_2_516.toObject(includeInstance, f),
    ecuStatus3517: (f = msg.getEcuStatus3517()) && proto.apollo.canbus.Ecu_status_3_517.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Ch as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Ch.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.throttleCommand110;

  /** @type {?|undefined} */
  this.brakeCommand111;

  /** @type {?|undefined} */
  this.steerCommand112;

  /** @type {?|undefined} */
  this.turnsignalCommand113;

  /** @type {?|undefined} */
  this.gearCommand114;

  /** @type {?|undefined} */
  this.controlCommand115;

  /** @type {?|undefined} */
  this.throttleStatus510;

  /** @type {?|undefined} */
  this.brakeStatus511;

  /** @type {?|undefined} */
  this.steerStatus512;

  /** @type {?|undefined} */
  this.turnsignalStatus513;

  /** @type {?|undefined} */
  this.gearStatus514;

  /** @type {?|undefined} */
  this.ecuStatus1515;

  /** @type {?|undefined} */
  this.ecuStatus2516;

  /** @type {?|undefined} */
  this.ecuStatus3517;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Ch.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Ch}
 */
proto.apollo.canbus.Ch.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Ch();
  obj.throttleCommand110 && jspb.Message.setWrapperField(
      msg, 1, proto.apollo.canbus.Throttle_command_110.fromObject(obj.throttleCommand110));
  obj.brakeCommand111 && jspb.Message.setWrapperField(
      msg, 2, proto.apollo.canbus.Brake_command_111.fromObject(obj.brakeCommand111));
  obj.steerCommand112 && jspb.Message.setWrapperField(
      msg, 3, proto.apollo.canbus.Steer_command_112.fromObject(obj.steerCommand112));
  obj.turnsignalCommand113 && jspb.Message.setWrapperField(
      msg, 4, proto.apollo.canbus.Turnsignal_command_113.fromObject(obj.turnsignalCommand113));
  obj.gearCommand114 && jspb.Message.setWrapperField(
      msg, 5, proto.apollo.canbus.Gear_command_114.fromObject(obj.gearCommand114));
  obj.controlCommand115 && jspb.Message.setWrapperField(
      msg, 6, proto.apollo.canbus.Control_command_115.fromObject(obj.controlCommand115));
  obj.throttleStatus510 && jspb.Message.setWrapperField(
      msg, 7, proto.apollo.canbus.Throttle_status__510.fromObject(obj.throttleStatus510));
  obj.brakeStatus511 && jspb.Message.setWrapperField(
      msg, 8, proto.apollo.canbus.Brake_status__511.fromObject(obj.brakeStatus511));
  obj.steerStatus512 && jspb.Message.setWrapperField(
      msg, 9, proto.apollo.canbus.Steer_status__512.fromObject(obj.steerStatus512));
  obj.turnsignalStatus513 && jspb.Message.setWrapperField(
      msg, 10, proto.apollo.canbus.Turnsignal_status__513.fromObject(obj.turnsignalStatus513));
  obj.gearStatus514 && jspb.Message.setWrapperField(
      msg, 11, proto.apollo.canbus.Gear_status_514.fromObject(obj.gearStatus514));
  obj.ecuStatus1515 && jspb.Message.setWrapperField(
      msg, 12, proto.apollo.canbus.Ecu_status_1_515.fromObject(obj.ecuStatus1515));
  obj.ecuStatus2516 && jspb.Message.setWrapperField(
      msg, 13, proto.apollo.canbus.Ecu_status_2_516.fromObject(obj.ecuStatus2516));
  obj.ecuStatus3517 && jspb.Message.setWrapperField(
      msg, 14, proto.apollo.canbus.Ecu_status_3_517.fromObject(obj.ecuStatus3517));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Ch}
 */
proto.apollo.canbus.Ch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Ch;
  return proto.apollo.canbus.Ch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Ch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Ch}
 */
proto.apollo.canbus.Ch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.apollo.canbus.Throttle_command_110;
      reader.readMessage(value,proto.apollo.canbus.Throttle_command_110.deserializeBinaryFromReader);
      msg.setThrottleCommand110(value);
      break;
    case 2:
      var value = new proto.apollo.canbus.Brake_command_111;
      reader.readMessage(value,proto.apollo.canbus.Brake_command_111.deserializeBinaryFromReader);
      msg.setBrakeCommand111(value);
      break;
    case 3:
      var value = new proto.apollo.canbus.Steer_command_112;
      reader.readMessage(value,proto.apollo.canbus.Steer_command_112.deserializeBinaryFromReader);
      msg.setSteerCommand112(value);
      break;
    case 4:
      var value = new proto.apollo.canbus.Turnsignal_command_113;
      reader.readMessage(value,proto.apollo.canbus.Turnsignal_command_113.deserializeBinaryFromReader);
      msg.setTurnsignalCommand113(value);
      break;
    case 5:
      var value = new proto.apollo.canbus.Gear_command_114;
      reader.readMessage(value,proto.apollo.canbus.Gear_command_114.deserializeBinaryFromReader);
      msg.setGearCommand114(value);
      break;
    case 6:
      var value = new proto.apollo.canbus.Control_command_115;
      reader.readMessage(value,proto.apollo.canbus.Control_command_115.deserializeBinaryFromReader);
      msg.setControlCommand115(value);
      break;
    case 7:
      var value = new proto.apollo.canbus.Throttle_status__510;
      reader.readMessage(value,proto.apollo.canbus.Throttle_status__510.deserializeBinaryFromReader);
      msg.setThrottleStatus510(value);
      break;
    case 8:
      var value = new proto.apollo.canbus.Brake_status__511;
      reader.readMessage(value,proto.apollo.canbus.Brake_status__511.deserializeBinaryFromReader);
      msg.setBrakeStatus511(value);
      break;
    case 9:
      var value = new proto.apollo.canbus.Steer_status__512;
      reader.readMessage(value,proto.apollo.canbus.Steer_status__512.deserializeBinaryFromReader);
      msg.setSteerStatus512(value);
      break;
    case 10:
      var value = new proto.apollo.canbus.Turnsignal_status__513;
      reader.readMessage(value,proto.apollo.canbus.Turnsignal_status__513.deserializeBinaryFromReader);
      msg.setTurnsignalStatus513(value);
      break;
    case 11:
      var value = new proto.apollo.canbus.Gear_status_514;
      reader.readMessage(value,proto.apollo.canbus.Gear_status_514.deserializeBinaryFromReader);
      msg.setGearStatus514(value);
      break;
    case 12:
      var value = new proto.apollo.canbus.Ecu_status_1_515;
      reader.readMessage(value,proto.apollo.canbus.Ecu_status_1_515.deserializeBinaryFromReader);
      msg.setEcuStatus1515(value);
      break;
    case 13:
      var value = new proto.apollo.canbus.Ecu_status_2_516;
      reader.readMessage(value,proto.apollo.canbus.Ecu_status_2_516.deserializeBinaryFromReader);
      msg.setEcuStatus2516(value);
      break;
    case 14:
      var value = new proto.apollo.canbus.Ecu_status_3_517;
      reader.readMessage(value,proto.apollo.canbus.Ecu_status_3_517.deserializeBinaryFromReader);
      msg.setEcuStatus3517(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Ch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Ch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Ch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Ch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThrottleCommand110();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.apollo.canbus.Throttle_command_110.serializeBinaryToWriter
    );
  }
  f = message.getBrakeCommand111();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.apollo.canbus.Brake_command_111.serializeBinaryToWriter
    );
  }
  f = message.getSteerCommand112();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.apollo.canbus.Steer_command_112.serializeBinaryToWriter
    );
  }
  f = message.getTurnsignalCommand113();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.apollo.canbus.Turnsignal_command_113.serializeBinaryToWriter
    );
  }
  f = message.getGearCommand114();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.apollo.canbus.Gear_command_114.serializeBinaryToWriter
    );
  }
  f = message.getControlCommand115();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.apollo.canbus.Control_command_115.serializeBinaryToWriter
    );
  }
  f = message.getThrottleStatus510();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.apollo.canbus.Throttle_status__510.serializeBinaryToWriter
    );
  }
  f = message.getBrakeStatus511();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.apollo.canbus.Brake_status__511.serializeBinaryToWriter
    );
  }
  f = message.getSteerStatus512();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.apollo.canbus.Steer_status__512.serializeBinaryToWriter
    );
  }
  f = message.getTurnsignalStatus513();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.apollo.canbus.Turnsignal_status__513.serializeBinaryToWriter
    );
  }
  f = message.getGearStatus514();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.apollo.canbus.Gear_status_514.serializeBinaryToWriter
    );
  }
  f = message.getEcuStatus1515();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.apollo.canbus.Ecu_status_1_515.serializeBinaryToWriter
    );
  }
  f = message.getEcuStatus2516();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.apollo.canbus.Ecu_status_2_516.serializeBinaryToWriter
    );
  }
  f = message.getEcuStatus3517();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.apollo.canbus.Ecu_status_3_517.serializeBinaryToWriter
    );
  }
};


/**
 * optional Throttle_command_110 throttle_command_110 = 1;
 * @return {?proto.apollo.canbus.Throttle_command_110}
 */
proto.apollo.canbus.Ch.prototype.getThrottleCommand110 = function() {
  return /** @type{?proto.apollo.canbus.Throttle_command_110} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Throttle_command_110, 1));
};


/**
 * @param {?proto.apollo.canbus.Throttle_command_110|undefined} value
 * @return {!proto.apollo.canbus.Ch} returns this
*/
proto.apollo.canbus.Ch.prototype.setThrottleCommand110 = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Ch} returns this
 */
proto.apollo.canbus.Ch.prototype.clearThrottleCommand110 = function() {
  return this.setThrottleCommand110(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ch.prototype.hasThrottleCommand110 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Brake_command_111 brake_command_111 = 2;
 * @return {?proto.apollo.canbus.Brake_command_111}
 */
proto.apollo.canbus.Ch.prototype.getBrakeCommand111 = function() {
  return /** @type{?proto.apollo.canbus.Brake_command_111} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Brake_command_111, 2));
};


/**
 * @param {?proto.apollo.canbus.Brake_command_111|undefined} value
 * @return {!proto.apollo.canbus.Ch} returns this
*/
proto.apollo.canbus.Ch.prototype.setBrakeCommand111 = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Ch} returns this
 */
proto.apollo.canbus.Ch.prototype.clearBrakeCommand111 = function() {
  return this.setBrakeCommand111(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ch.prototype.hasBrakeCommand111 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Steer_command_112 steer_command_112 = 3;
 * @return {?proto.apollo.canbus.Steer_command_112}
 */
proto.apollo.canbus.Ch.prototype.getSteerCommand112 = function() {
  return /** @type{?proto.apollo.canbus.Steer_command_112} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Steer_command_112, 3));
};


/**
 * @param {?proto.apollo.canbus.Steer_command_112|undefined} value
 * @return {!proto.apollo.canbus.Ch} returns this
*/
proto.apollo.canbus.Ch.prototype.setSteerCommand112 = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Ch} returns this
 */
proto.apollo.canbus.Ch.prototype.clearSteerCommand112 = function() {
  return this.setSteerCommand112(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ch.prototype.hasSteerCommand112 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Turnsignal_command_113 turnsignal_command_113 = 4;
 * @return {?proto.apollo.canbus.Turnsignal_command_113}
 */
proto.apollo.canbus.Ch.prototype.getTurnsignalCommand113 = function() {
  return /** @type{?proto.apollo.canbus.Turnsignal_command_113} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Turnsignal_command_113, 4));
};


/**
 * @param {?proto.apollo.canbus.Turnsignal_command_113|undefined} value
 * @return {!proto.apollo.canbus.Ch} returns this
*/
proto.apollo.canbus.Ch.prototype.setTurnsignalCommand113 = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Ch} returns this
 */
proto.apollo.canbus.Ch.prototype.clearTurnsignalCommand113 = function() {
  return this.setTurnsignalCommand113(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ch.prototype.hasTurnsignalCommand113 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Gear_command_114 gear_command_114 = 5;
 * @return {?proto.apollo.canbus.Gear_command_114}
 */
proto.apollo.canbus.Ch.prototype.getGearCommand114 = function() {
  return /** @type{?proto.apollo.canbus.Gear_command_114} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Gear_command_114, 5));
};


/**
 * @param {?proto.apollo.canbus.Gear_command_114|undefined} value
 * @return {!proto.apollo.canbus.Ch} returns this
*/
proto.apollo.canbus.Ch.prototype.setGearCommand114 = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Ch} returns this
 */
proto.apollo.canbus.Ch.prototype.clearGearCommand114 = function() {
  return this.setGearCommand114(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ch.prototype.hasGearCommand114 = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Control_command_115 control_command_115 = 6;
 * @return {?proto.apollo.canbus.Control_command_115}
 */
proto.apollo.canbus.Ch.prototype.getControlCommand115 = function() {
  return /** @type{?proto.apollo.canbus.Control_command_115} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Control_command_115, 6));
};


/**
 * @param {?proto.apollo.canbus.Control_command_115|undefined} value
 * @return {!proto.apollo.canbus.Ch} returns this
*/
proto.apollo.canbus.Ch.prototype.setControlCommand115 = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Ch} returns this
 */
proto.apollo.canbus.Ch.prototype.clearControlCommand115 = function() {
  return this.setControlCommand115(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ch.prototype.hasControlCommand115 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Throttle_status__510 throttle_status__510 = 7;
 * @return {?proto.apollo.canbus.Throttle_status__510}
 */
proto.apollo.canbus.Ch.prototype.getThrottleStatus510 = function() {
  return /** @type{?proto.apollo.canbus.Throttle_status__510} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Throttle_status__510, 7));
};


/**
 * @param {?proto.apollo.canbus.Throttle_status__510|undefined} value
 * @return {!proto.apollo.canbus.Ch} returns this
*/
proto.apollo.canbus.Ch.prototype.setThrottleStatus510 = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Ch} returns this
 */
proto.apollo.canbus.Ch.prototype.clearThrottleStatus510 = function() {
  return this.setThrottleStatus510(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ch.prototype.hasThrottleStatus510 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Brake_status__511 brake_status__511 = 8;
 * @return {?proto.apollo.canbus.Brake_status__511}
 */
proto.apollo.canbus.Ch.prototype.getBrakeStatus511 = function() {
  return /** @type{?proto.apollo.canbus.Brake_status__511} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Brake_status__511, 8));
};


/**
 * @param {?proto.apollo.canbus.Brake_status__511|undefined} value
 * @return {!proto.apollo.canbus.Ch} returns this
*/
proto.apollo.canbus.Ch.prototype.setBrakeStatus511 = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Ch} returns this
 */
proto.apollo.canbus.Ch.prototype.clearBrakeStatus511 = function() {
  return this.setBrakeStatus511(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ch.prototype.hasBrakeStatus511 = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Steer_status__512 steer_status__512 = 9;
 * @return {?proto.apollo.canbus.Steer_status__512}
 */
proto.apollo.canbus.Ch.prototype.getSteerStatus512 = function() {
  return /** @type{?proto.apollo.canbus.Steer_status__512} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Steer_status__512, 9));
};


/**
 * @param {?proto.apollo.canbus.Steer_status__512|undefined} value
 * @return {!proto.apollo.canbus.Ch} returns this
*/
proto.apollo.canbus.Ch.prototype.setSteerStatus512 = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Ch} returns this
 */
proto.apollo.canbus.Ch.prototype.clearSteerStatus512 = function() {
  return this.setSteerStatus512(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ch.prototype.hasSteerStatus512 = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Turnsignal_status__513 turnsignal_status__513 = 10;
 * @return {?proto.apollo.canbus.Turnsignal_status__513}
 */
proto.apollo.canbus.Ch.prototype.getTurnsignalStatus513 = function() {
  return /** @type{?proto.apollo.canbus.Turnsignal_status__513} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Turnsignal_status__513, 10));
};


/**
 * @param {?proto.apollo.canbus.Turnsignal_status__513|undefined} value
 * @return {!proto.apollo.canbus.Ch} returns this
*/
proto.apollo.canbus.Ch.prototype.setTurnsignalStatus513 = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Ch} returns this
 */
proto.apollo.canbus.Ch.prototype.clearTurnsignalStatus513 = function() {
  return this.setTurnsignalStatus513(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ch.prototype.hasTurnsignalStatus513 = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Gear_status_514 gear_status_514 = 11;
 * @return {?proto.apollo.canbus.Gear_status_514}
 */
proto.apollo.canbus.Ch.prototype.getGearStatus514 = function() {
  return /** @type{?proto.apollo.canbus.Gear_status_514} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Gear_status_514, 11));
};


/**
 * @param {?proto.apollo.canbus.Gear_status_514|undefined} value
 * @return {!proto.apollo.canbus.Ch} returns this
*/
proto.apollo.canbus.Ch.prototype.setGearStatus514 = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Ch} returns this
 */
proto.apollo.canbus.Ch.prototype.clearGearStatus514 = function() {
  return this.setGearStatus514(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ch.prototype.hasGearStatus514 = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Ecu_status_1_515 ecu_status_1_515 = 12;
 * @return {?proto.apollo.canbus.Ecu_status_1_515}
 */
proto.apollo.canbus.Ch.prototype.getEcuStatus1515 = function() {
  return /** @type{?proto.apollo.canbus.Ecu_status_1_515} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Ecu_status_1_515, 12));
};


/**
 * @param {?proto.apollo.canbus.Ecu_status_1_515|undefined} value
 * @return {!proto.apollo.canbus.Ch} returns this
*/
proto.apollo.canbus.Ch.prototype.setEcuStatus1515 = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Ch} returns this
 */
proto.apollo.canbus.Ch.prototype.clearEcuStatus1515 = function() {
  return this.setEcuStatus1515(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ch.prototype.hasEcuStatus1515 = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Ecu_status_2_516 ecu_status_2_516 = 13;
 * @return {?proto.apollo.canbus.Ecu_status_2_516}
 */
proto.apollo.canbus.Ch.prototype.getEcuStatus2516 = function() {
  return /** @type{?proto.apollo.canbus.Ecu_status_2_516} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Ecu_status_2_516, 13));
};


/**
 * @param {?proto.apollo.canbus.Ecu_status_2_516|undefined} value
 * @return {!proto.apollo.canbus.Ch} returns this
*/
proto.apollo.canbus.Ch.prototype.setEcuStatus2516 = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Ch} returns this
 */
proto.apollo.canbus.Ch.prototype.clearEcuStatus2516 = function() {
  return this.setEcuStatus2516(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ch.prototype.hasEcuStatus2516 = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Ecu_status_3_517 ecu_status_3_517 = 14;
 * @return {?proto.apollo.canbus.Ecu_status_3_517}
 */
proto.apollo.canbus.Ch.prototype.getEcuStatus3517 = function() {
  return /** @type{?proto.apollo.canbus.Ecu_status_3_517} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Ecu_status_3_517, 14));
};


/**
 * @param {?proto.apollo.canbus.Ecu_status_3_517|undefined} value
 * @return {!proto.apollo.canbus.Ch} returns this
*/
proto.apollo.canbus.Ch.prototype.setEcuStatus3517 = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Ch} returns this
 */
proto.apollo.canbus.Ch.prototype.clearEcuStatus3517 = function() {
  return this.setEcuStatus3517(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Ch.prototype.hasEcuStatus3517 = function() {
  return jspb.Message.getField(this, 14) != null;
};


goog.object.extend(exports, proto.apollo.canbus);
