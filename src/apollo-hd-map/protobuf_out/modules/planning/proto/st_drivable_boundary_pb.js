// source: modules/planning/proto/st_drivable_boundary.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.apollo.planning.STDrivableBoundary', null, global);
goog.exportSymbol('proto.apollo.planning.STDrivableBoundaryInstance', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.planning.STDrivableBoundaryInstance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.planning.STDrivableBoundaryInstance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.planning.STDrivableBoundaryInstance.displayName = 'proto.apollo.planning.STDrivableBoundaryInstance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.planning.STDrivableBoundary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.planning.STDrivableBoundary.repeatedFields_, null);
};
goog.inherits(proto.apollo.planning.STDrivableBoundary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.planning.STDrivableBoundary.displayName = 'proto.apollo.planning.STDrivableBoundary';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.planning.STDrivableBoundaryInstance.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.planning.STDrivableBoundaryInstance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.planning.STDrivableBoundaryInstance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.planning.STDrivableBoundaryInstance.toObject = function(includeInstance, msg) {
  var f, obj = {
    t: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    sLower: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    sUpper: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    vObsLower: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    vObsUpper: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of STDrivableBoundaryInstance as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.planning.STDrivableBoundaryInstance.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.t;

  /** @type {?|undefined} */
  this.sLower;

  /** @type {?|undefined} */
  this.sUpper;

  /** @type {?|undefined} */
  this.vObsLower;

  /** @type {?|undefined} */
  this.vObsUpper;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.planning.STDrivableBoundaryInstance.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.planning.STDrivableBoundaryInstance}
 */
proto.apollo.planning.STDrivableBoundaryInstance.fromObject = function(obj) {
  var msg = new proto.apollo.planning.STDrivableBoundaryInstance();
  obj.t != null && jspb.Message.setField(msg, 1, obj.t);
  obj.sLower != null && jspb.Message.setField(msg, 2, obj.sLower);
  obj.sUpper != null && jspb.Message.setField(msg, 3, obj.sUpper);
  obj.vObsLower != null && jspb.Message.setField(msg, 4, obj.vObsLower);
  obj.vObsUpper != null && jspb.Message.setField(msg, 5, obj.vObsUpper);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.planning.STDrivableBoundaryInstance}
 */
proto.apollo.planning.STDrivableBoundaryInstance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.planning.STDrivableBoundaryInstance;
  return proto.apollo.planning.STDrivableBoundaryInstance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.planning.STDrivableBoundaryInstance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.planning.STDrivableBoundaryInstance}
 */
proto.apollo.planning.STDrivableBoundaryInstance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setT(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSLower(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSUpper(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVObsLower(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVObsUpper(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.planning.STDrivableBoundaryInstance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.planning.STDrivableBoundaryInstance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.planning.STDrivableBoundaryInstance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.planning.STDrivableBoundaryInstance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * optional double t = 1;
 * @return {number}
 */
proto.apollo.planning.STDrivableBoundaryInstance.prototype.getT = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.planning.STDrivableBoundaryInstance} returns this
 */
proto.apollo.planning.STDrivableBoundaryInstance.prototype.setT = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.STDrivableBoundaryInstance} returns this
 */
proto.apollo.planning.STDrivableBoundaryInstance.prototype.clearT = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.STDrivableBoundaryInstance.prototype.hasT = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double s_lower = 2;
 * @return {number}
 */
proto.apollo.planning.STDrivableBoundaryInstance.prototype.getSLower = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.planning.STDrivableBoundaryInstance} returns this
 */
proto.apollo.planning.STDrivableBoundaryInstance.prototype.setSLower = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.STDrivableBoundaryInstance} returns this
 */
proto.apollo.planning.STDrivableBoundaryInstance.prototype.clearSLower = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.STDrivableBoundaryInstance.prototype.hasSLower = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double s_upper = 3;
 * @return {number}
 */
proto.apollo.planning.STDrivableBoundaryInstance.prototype.getSUpper = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.planning.STDrivableBoundaryInstance} returns this
 */
proto.apollo.planning.STDrivableBoundaryInstance.prototype.setSUpper = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.STDrivableBoundaryInstance} returns this
 */
proto.apollo.planning.STDrivableBoundaryInstance.prototype.clearSUpper = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.STDrivableBoundaryInstance.prototype.hasSUpper = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double v_obs_lower = 4;
 * @return {number}
 */
proto.apollo.planning.STDrivableBoundaryInstance.prototype.getVObsLower = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.planning.STDrivableBoundaryInstance} returns this
 */
proto.apollo.planning.STDrivableBoundaryInstance.prototype.setVObsLower = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.STDrivableBoundaryInstance} returns this
 */
proto.apollo.planning.STDrivableBoundaryInstance.prototype.clearVObsLower = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.STDrivableBoundaryInstance.prototype.hasVObsLower = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double v_obs_upper = 5;
 * @return {number}
 */
proto.apollo.planning.STDrivableBoundaryInstance.prototype.getVObsUpper = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.planning.STDrivableBoundaryInstance} returns this
 */
proto.apollo.planning.STDrivableBoundaryInstance.prototype.setVObsUpper = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.planning.STDrivableBoundaryInstance} returns this
 */
proto.apollo.planning.STDrivableBoundaryInstance.prototype.clearVObsUpper = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.planning.STDrivableBoundaryInstance.prototype.hasVObsUpper = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.planning.STDrivableBoundary.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.planning.STDrivableBoundary.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.planning.STDrivableBoundary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.planning.STDrivableBoundary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.planning.STDrivableBoundary.toObject = function(includeInstance, msg) {
  var f, obj = {
    stBoundaryList: jspb.Message.toObjectList(msg.getStBoundaryList(),
    proto.apollo.planning.STDrivableBoundaryInstance.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of STDrivableBoundary as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.planning.STDrivableBoundary.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.stBoundaryList;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.planning.STDrivableBoundary.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.planning.STDrivableBoundary}
 */
proto.apollo.planning.STDrivableBoundary.fromObject = function(obj) {
  var msg = new proto.apollo.planning.STDrivableBoundary();
  obj.stBoundaryList && jspb.Message.setRepeatedWrapperField(
      msg, 1, obj.stBoundaryList.map(
          proto.apollo.planning.STDrivableBoundaryInstance.fromObject));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.planning.STDrivableBoundary}
 */
proto.apollo.planning.STDrivableBoundary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.planning.STDrivableBoundary;
  return proto.apollo.planning.STDrivableBoundary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.planning.STDrivableBoundary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.planning.STDrivableBoundary}
 */
proto.apollo.planning.STDrivableBoundary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.apollo.planning.STDrivableBoundaryInstance;
      reader.readMessage(value,proto.apollo.planning.STDrivableBoundaryInstance.deserializeBinaryFromReader);
      msg.addStBoundary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.planning.STDrivableBoundary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.planning.STDrivableBoundary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.planning.STDrivableBoundary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.planning.STDrivableBoundary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStBoundaryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.apollo.planning.STDrivableBoundaryInstance.serializeBinaryToWriter
    );
  }
};


/**
 * repeated STDrivableBoundaryInstance st_boundary = 1;
 * @return {!Array<!proto.apollo.planning.STDrivableBoundaryInstance>}
 */
proto.apollo.planning.STDrivableBoundary.prototype.getStBoundaryList = function() {
  return /** @type{!Array<!proto.apollo.planning.STDrivableBoundaryInstance>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.planning.STDrivableBoundaryInstance, 1));
};


/**
 * @param {!Array<!proto.apollo.planning.STDrivableBoundaryInstance>} value
 * @return {!proto.apollo.planning.STDrivableBoundary} returns this
*/
proto.apollo.planning.STDrivableBoundary.prototype.setStBoundaryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.apollo.planning.STDrivableBoundaryInstance=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.planning.STDrivableBoundaryInstance}
 */
proto.apollo.planning.STDrivableBoundary.prototype.addStBoundary = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.apollo.planning.STDrivableBoundaryInstance, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.planning.STDrivableBoundary} returns this
 */
proto.apollo.planning.STDrivableBoundary.prototype.clearStBoundaryList = function() {
  return this.setStBoundaryList([]);
};


goog.object.extend(exports, proto.apollo.planning);
