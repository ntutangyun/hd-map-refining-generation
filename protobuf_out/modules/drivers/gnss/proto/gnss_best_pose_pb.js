// source: modules/drivers/gnss/proto/gnss_best_pose.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var modules_common_proto_header_pb = require('../../../../modules/common/proto/header_pb.js');
goog.object.extend(proto, modules_common_proto_header_pb);
goog.exportSymbol('proto.apollo.drivers.gnss.DatumId', null, global);
goog.exportSymbol('proto.apollo.drivers.gnss.GnssBestPose', null, global);
goog.exportSymbol('proto.apollo.drivers.gnss.SolutionStatus', null, global);
goog.exportSymbol('proto.apollo.drivers.gnss.SolutionType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.drivers.gnss.GnssBestPose = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.drivers.gnss.GnssBestPose, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.drivers.gnss.GnssBestPose.displayName = 'proto.apollo.drivers.gnss.GnssBestPose';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.drivers.gnss.GnssBestPose.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.drivers.gnss.GnssBestPose} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.gnss.GnssBestPose.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && modules_common_proto_header_pb.Header.toObject(includeInstance, f),
    measurementTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    solStatus: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    solType: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    latitude: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    longitude: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    heightMsl: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    undulation: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    datumId: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    latitudeStdDev: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    longitudeStdDev: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    heightStdDev: (f = jspb.Message.getOptionalFloatingPointField(msg, 12)) == null ? undefined : f,
    baseStationId: msg.getBaseStationId_asB64(),
    differentialAge: (f = jspb.Message.getOptionalFloatingPointField(msg, 14)) == null ? undefined : f,
    solutionAge: (f = jspb.Message.getOptionalFloatingPointField(msg, 15)) == null ? undefined : f,
    numSatsTracked: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    numSatsInSolution: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    numSatsL1: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
    numSatsMulti: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f,
    reserved: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
    extendedSolutionStatus: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f,
    galileoBeidouUsedMask: (f = jspb.Message.getField(msg, 22)) == null ? undefined : f,
    gpsGlonassUsedMask: (f = jspb.Message.getField(msg, 23)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of GnssBestPose as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.drivers.gnss.GnssBestPose.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.header;

  /** @type {?|undefined} */
  this.measurementTime;

  /** @type {?|undefined} */
  this.solStatus;

  /** @type {?|undefined} */
  this.solType;

  /** @type {?|undefined} */
  this.latitude;

  /** @type {?|undefined} */
  this.longitude;

  /** @type {?|undefined} */
  this.heightMsl;

  /** @type {?|undefined} */
  this.undulation;

  /** @type {?|undefined} */
  this.datumId;

  /** @type {?|undefined} */
  this.latitudeStdDev;

  /** @type {?|undefined} */
  this.longitudeStdDev;

  /** @type {?|undefined} */
  this.heightStdDev;

  /** @type {?|undefined} */
  this.baseStationId;

  /** @type {?|undefined} */
  this.differentialAge;

  /** @type {?|undefined} */
  this.solutionAge;

  /** @type {?|undefined} */
  this.numSatsTracked;

  /** @type {?|undefined} */
  this.numSatsInSolution;

  /** @type {?|undefined} */
  this.numSatsL1;

  /** @type {?|undefined} */
  this.numSatsMulti;

  /** @type {?|undefined} */
  this.reserved;

  /** @type {?|undefined} */
  this.extendedSolutionStatus;

  /** @type {?|undefined} */
  this.galileoBeidouUsedMask;

  /** @type {?|undefined} */
  this.gpsGlonassUsedMask;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.drivers.gnss.GnssBestPose.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose}
 */
proto.apollo.drivers.gnss.GnssBestPose.fromObject = function(obj) {
  var msg = new proto.apollo.drivers.gnss.GnssBestPose();
  obj.header && jspb.Message.setWrapperField(
      msg, 1, modules_common_proto_header_pb.Header.fromObject(obj.header));
  obj.measurementTime != null && jspb.Message.setField(msg, 2, obj.measurementTime);
  obj.solStatus != null && jspb.Message.setField(msg, 3, obj.solStatus);
  obj.solType != null && jspb.Message.setField(msg, 4, obj.solType);
  obj.latitude != null && jspb.Message.setField(msg, 5, obj.latitude);
  obj.longitude != null && jspb.Message.setField(msg, 6, obj.longitude);
  obj.heightMsl != null && jspb.Message.setField(msg, 7, obj.heightMsl);
  obj.undulation != null && jspb.Message.setField(msg, 8, obj.undulation);
  obj.datumId != null && jspb.Message.setField(msg, 9, obj.datumId);
  obj.latitudeStdDev != null && jspb.Message.setField(msg, 10, obj.latitudeStdDev);
  obj.longitudeStdDev != null && jspb.Message.setField(msg, 11, obj.longitudeStdDev);
  obj.heightStdDev != null && jspb.Message.setField(msg, 12, obj.heightStdDev);
  obj.baseStationId != null && jspb.Message.setField(msg, 13, obj.baseStationId);
  obj.differentialAge != null && jspb.Message.setField(msg, 14, obj.differentialAge);
  obj.solutionAge != null && jspb.Message.setField(msg, 15, obj.solutionAge);
  obj.numSatsTracked != null && jspb.Message.setField(msg, 16, obj.numSatsTracked);
  obj.numSatsInSolution != null && jspb.Message.setField(msg, 17, obj.numSatsInSolution);
  obj.numSatsL1 != null && jspb.Message.setField(msg, 18, obj.numSatsL1);
  obj.numSatsMulti != null && jspb.Message.setField(msg, 19, obj.numSatsMulti);
  obj.reserved != null && jspb.Message.setField(msg, 20, obj.reserved);
  obj.extendedSolutionStatus != null && jspb.Message.setField(msg, 21, obj.extendedSolutionStatus);
  obj.galileoBeidouUsedMask != null && jspb.Message.setField(msg, 22, obj.galileoBeidouUsedMask);
  obj.gpsGlonassUsedMask != null && jspb.Message.setField(msg, 23, obj.gpsGlonassUsedMask);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose}
 */
proto.apollo.drivers.gnss.GnssBestPose.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.drivers.gnss.GnssBestPose;
  return proto.apollo.drivers.gnss.GnssBestPose.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.drivers.gnss.GnssBestPose} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose}
 */
proto.apollo.drivers.gnss.GnssBestPose.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modules_common_proto_header_pb.Header;
      reader.readMessage(value,modules_common_proto_header_pb.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMeasurementTime(value);
      break;
    case 3:
      var value = /** @type {!proto.apollo.drivers.gnss.SolutionStatus} */ (reader.readEnum());
      msg.setSolStatus(value);
      break;
    case 4:
      var value = /** @type {!proto.apollo.drivers.gnss.SolutionType} */ (reader.readEnum());
      msg.setSolType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHeightMsl(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setUndulation(value);
      break;
    case 9:
      var value = /** @type {!proto.apollo.drivers.gnss.DatumId} */ (reader.readEnum());
      msg.setDatumId(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLatitudeStdDev(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLongitudeStdDev(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setHeightStdDev(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBaseStationId(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDifferentialAge(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSolutionAge(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumSatsTracked(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumSatsInSolution(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumSatsL1(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumSatsMulti(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReserved(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setExtendedSolutionStatus(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGalileoBeidouUsedMask(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGpsGlonassUsedMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.drivers.gnss.GnssBestPose.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.drivers.gnss.GnssBestPose} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.drivers.gnss.GnssBestPose.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modules_common_proto_header_pb.Header.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {!proto.apollo.drivers.gnss.SolutionStatus} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!proto.apollo.drivers.gnss.SolutionType} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = /** @type {!proto.apollo.drivers.gnss.DatumId} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeFloat(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeUint32(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeUint32(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeUint32(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeUint32(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeUint32(
      22,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeUint32(
      23,
      f
    );
  }
};


/**
 * optional apollo.common.Header header = 1;
 * @return {?proto.apollo.common.Header}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getHeader = function() {
  return /** @type{?proto.apollo.common.Header} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_header_pb.Header, 1));
};


/**
 * @param {?proto.apollo.common.Header|undefined} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
*/
proto.apollo.drivers.gnss.GnssBestPose.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double measurement_time = 2;
 * @return {number}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getMeasurementTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.setMeasurementTime = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearMeasurementTime = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasMeasurementTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SolutionStatus sol_status = 3;
 * @return {!proto.apollo.drivers.gnss.SolutionStatus}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getSolStatus = function() {
  return /** @type {!proto.apollo.drivers.gnss.SolutionStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.apollo.drivers.gnss.SolutionStatus} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.setSolStatus = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearSolStatus = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasSolStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SolutionType sol_type = 4;
 * @return {!proto.apollo.drivers.gnss.SolutionType}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getSolType = function() {
  return /** @type {!proto.apollo.drivers.gnss.SolutionType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.apollo.drivers.gnss.SolutionType} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.setSolType = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearSolType = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasSolType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double latitude = 5;
 * @return {number}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.setLatitude = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearLatitude = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasLatitude = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double longitude = 6;
 * @return {number}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.setLongitude = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearLongitude = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasLongitude = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double height_msl = 7;
 * @return {number}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getHeightMsl = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.setHeightMsl = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearHeightMsl = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasHeightMsl = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional float undulation = 8;
 * @return {number}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getUndulation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.setUndulation = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearUndulation = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasUndulation = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional DatumId datum_id = 9;
 * @return {!proto.apollo.drivers.gnss.DatumId}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getDatumId = function() {
  return /** @type {!proto.apollo.drivers.gnss.DatumId} */ (jspb.Message.getFieldWithDefault(this, 9, 61));
};


/**
 * @param {!proto.apollo.drivers.gnss.DatumId} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.setDatumId = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearDatumId = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasDatumId = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional float latitude_std_dev = 10;
 * @return {number}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getLatitudeStdDev = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.setLatitudeStdDev = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearLatitudeStdDev = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasLatitudeStdDev = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional float longitude_std_dev = 11;
 * @return {number}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getLongitudeStdDev = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.setLongitudeStdDev = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearLongitudeStdDev = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasLongitudeStdDev = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional float height_std_dev = 12;
 * @return {number}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getHeightStdDev = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.setHeightStdDev = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearHeightStdDev = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasHeightStdDev = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bytes base_station_id = 13;
 * @return {!(string|Uint8Array)}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getBaseStationId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes base_station_id = 13;
 * This is a type-conversion wrapper around `getBaseStationId()`
 * @return {string}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getBaseStationId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBaseStationId()));
};


/**
 * optional bytes base_station_id = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBaseStationId()`
 * @return {!Uint8Array}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getBaseStationId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBaseStationId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.setBaseStationId = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearBaseStationId = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasBaseStationId = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional float differential_age = 14;
 * @return {number}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getDifferentialAge = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.setDifferentialAge = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearDifferentialAge = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasDifferentialAge = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional float solution_age = 15;
 * @return {number}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getSolutionAge = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.setSolutionAge = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearSolutionAge = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasSolutionAge = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint32 num_sats_tracked = 16;
 * @return {number}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getNumSatsTracked = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.setNumSatsTracked = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearNumSatsTracked = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasNumSatsTracked = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint32 num_sats_in_solution = 17;
 * @return {number}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getNumSatsInSolution = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.setNumSatsInSolution = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearNumSatsInSolution = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasNumSatsInSolution = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional uint32 num_sats_l1 = 18;
 * @return {number}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getNumSatsL1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.setNumSatsL1 = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearNumSatsL1 = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasNumSatsL1 = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional uint32 num_sats_multi = 19;
 * @return {number}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getNumSatsMulti = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.setNumSatsMulti = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearNumSatsMulti = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasNumSatsMulti = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional uint32 reserved = 20;
 * @return {number}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getReserved = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.setReserved = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearReserved = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasReserved = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional uint32 extended_solution_status = 21;
 * @return {number}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getExtendedSolutionStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.setExtendedSolutionStatus = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearExtendedSolutionStatus = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasExtendedSolutionStatus = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional uint32 galileo_beidou_used_mask = 22;
 * @return {number}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getGalileoBeidouUsedMask = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.setGalileoBeidouUsedMask = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearGalileoBeidouUsedMask = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasGalileoBeidouUsedMask = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional uint32 gps_glonass_used_mask = 23;
 * @return {number}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.getGpsGlonassUsedMask = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.setGpsGlonassUsedMask = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.drivers.gnss.GnssBestPose} returns this
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.clearGpsGlonassUsedMask = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.drivers.gnss.GnssBestPose.prototype.hasGpsGlonassUsedMask = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * @enum {number}
 */
proto.apollo.drivers.gnss.SolutionStatus = {
  SOL_COMPUTED: 0,
  INSUFFICIENT_OBS: 1,
  NO_CONVERGENCE: 2,
  SINGULARITY: 3,
  COV_TRACE: 4,
  TEST_DIST: 5,
  COLD_START: 6,
  V_H_LIMIT: 7,
  VARIANCE: 8,
  RESIDUALS: 9,
  INTEGRITY_WARNING: 13,
  PENDING: 18,
  INVALID_FIX: 19,
  UNAUTHORIZED: 20,
  INVALID_RATE: 22
};

/**
 * @enum {number}
 */
proto.apollo.drivers.gnss.SolutionType = {
  NONE: 0,
  FIXEDPOS: 1,
  FIXEDHEIGHT: 2,
  FLOATCONV: 4,
  WIDELANE: 5,
  NARROWLANE: 6,
  DOPPLER_VELOCITY: 8,
  SINGLE: 16,
  PSRDIFF: 17,
  WAAS: 18,
  PROPOGATED: 19,
  OMNISTAR: 20,
  L1_FLOAT: 32,
  IONOFREE_FLOAT: 33,
  NARROW_FLOAT: 34,
  L1_INT: 48,
  WIDE_INT: 49,
  NARROW_INT: 50,
  RTK_DIRECT_INS: 51,
  INS_SBAS: 52,
  INS_PSRSP: 53,
  INS_PSRDIFF: 54,
  INS_RTKFLOAT: 55,
  INS_RTKFIXED: 56,
  INS_OMNISTAR: 57,
  INS_OMNISTAR_HP: 58,
  INS_OMNISTAR_XP: 59,
  OMNISTAR_HP: 64,
  OMNISTAR_XP: 65,
  PPP_CONVERGING: 68,
  PPP: 69,
  INS_PPP_CONVERGING: 73,
  INS_PPP: 74
};

/**
 * @enum {number}
 */
proto.apollo.drivers.gnss.DatumId = {
  WGS84: 61
};

goog.object.extend(exports, proto.apollo.drivers.gnss);
