// source: modules/v2x/proto/fusion_params.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.apollo.v2x.ft.fusion.ConfidenceLevel', null, global);
goog.exportSymbol('proto.apollo.v2x.ft.fusion.FusionParams', null, global);
goog.exportSymbol('proto.apollo.v2x.ft.fusion.KMParams', null, global);
goog.exportSymbol('proto.apollo.v2x.ft.fusion.Param', null, global);
goog.exportSymbol('proto.apollo.v2x.ft.fusion.ScoreParams', null, global);
goog.exportSymbol('proto.apollo.v2x.ft.fusion.SingleCameraParam', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.v2x.ft.fusion.KMParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.v2x.ft.fusion.KMParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.v2x.ft.fusion.KMParams.displayName = 'proto.apollo.v2x.ft.fusion.KMParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.v2x.ft.fusion.Param = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.v2x.ft.fusion.Param, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.v2x.ft.fusion.Param.displayName = 'proto.apollo.v2x.ft.fusion.Param';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.v2x.ft.fusion.SingleCameraParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.v2x.ft.fusion.SingleCameraParam.repeatedFields_, null);
};
goog.inherits(proto.apollo.v2x.ft.fusion.SingleCameraParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.v2x.ft.fusion.SingleCameraParam.displayName = 'proto.apollo.v2x.ft.fusion.SingleCameraParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.v2x.ft.fusion.ScoreParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.v2x.ft.fusion.ScoreParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.v2x.ft.fusion.ScoreParams.displayName = 'proto.apollo.v2x.ft.fusion.ScoreParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.v2x.ft.fusion.FusionParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.v2x.ft.fusion.FusionParams.repeatedFields_, null);
};
goog.inherits(proto.apollo.v2x.ft.fusion.FusionParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.v2x.ft.fusion.FusionParams.displayName = 'proto.apollo.v2x.ft.fusion.FusionParams';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.v2x.ft.fusion.KMParams.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.v2x.ft.fusion.KMParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.v2x.ft.fusion.KMParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.v2x.ft.fusion.KMParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    minScore: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of KMParams as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.v2x.ft.fusion.KMParams.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.minScore;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.v2x.ft.fusion.KMParams.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.v2x.ft.fusion.KMParams}
 */
proto.apollo.v2x.ft.fusion.KMParams.fromObject = function(obj) {
  var msg = new proto.apollo.v2x.ft.fusion.KMParams();
  obj.minScore != null && jspb.Message.setField(msg, 1, obj.minScore);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.v2x.ft.fusion.KMParams}
 */
proto.apollo.v2x.ft.fusion.KMParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.v2x.ft.fusion.KMParams;
  return proto.apollo.v2x.ft.fusion.KMParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.v2x.ft.fusion.KMParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.v2x.ft.fusion.KMParams}
 */
proto.apollo.v2x.ft.fusion.KMParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.v2x.ft.fusion.KMParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.v2x.ft.fusion.KMParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.v2x.ft.fusion.KMParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.v2x.ft.fusion.KMParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
};


/**
 * optional double min_score = 1;
 * @return {number}
 */
proto.apollo.v2x.ft.fusion.KMParams.prototype.getMinScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.v2x.ft.fusion.KMParams} returns this
 */
proto.apollo.v2x.ft.fusion.KMParams.prototype.setMinScore = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.ft.fusion.KMParams} returns this
 */
proto.apollo.v2x.ft.fusion.KMParams.prototype.clearMinScore = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.ft.fusion.KMParams.prototype.hasMinScore = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.v2x.ft.fusion.Param.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.v2x.ft.fusion.Param.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.v2x.ft.fusion.Param} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.v2x.ft.fusion.Param.toObject = function(includeInstance, msg) {
  var f, obj = {
    k: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    b: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Param as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.v2x.ft.fusion.Param.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.k;

  /** @type {?|undefined} */
  this.b;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.v2x.ft.fusion.Param.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.v2x.ft.fusion.Param}
 */
proto.apollo.v2x.ft.fusion.Param.fromObject = function(obj) {
  var msg = new proto.apollo.v2x.ft.fusion.Param();
  obj.k != null && jspb.Message.setField(msg, 1, obj.k);
  obj.b != null && jspb.Message.setField(msg, 2, obj.b);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.v2x.ft.fusion.Param}
 */
proto.apollo.v2x.ft.fusion.Param.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.v2x.ft.fusion.Param;
  return proto.apollo.v2x.ft.fusion.Param.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.v2x.ft.fusion.Param} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.v2x.ft.fusion.Param}
 */
proto.apollo.v2x.ft.fusion.Param.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setK(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setB(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.v2x.ft.fusion.Param.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.v2x.ft.fusion.Param.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.v2x.ft.fusion.Param} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.v2x.ft.fusion.Param.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional double k = 1;
 * @return {number}
 */
proto.apollo.v2x.ft.fusion.Param.prototype.getK = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.v2x.ft.fusion.Param} returns this
 */
proto.apollo.v2x.ft.fusion.Param.prototype.setK = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.ft.fusion.Param} returns this
 */
proto.apollo.v2x.ft.fusion.Param.prototype.clearK = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.ft.fusion.Param.prototype.hasK = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double b = 2;
 * @return {number}
 */
proto.apollo.v2x.ft.fusion.Param.prototype.getB = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.v2x.ft.fusion.Param} returns this
 */
proto.apollo.v2x.ft.fusion.Param.prototype.setB = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.ft.fusion.Param} returns this
 */
proto.apollo.v2x.ft.fusion.Param.prototype.clearB = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.ft.fusion.Param.prototype.hasB = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.v2x.ft.fusion.SingleCameraParam.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.v2x.ft.fusion.SingleCameraParam.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.v2x.ft.fusion.SingleCameraParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.v2x.ft.fusion.SingleCameraParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.v2x.ft.fusion.SingleCameraParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    cameraId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    paramList: jspb.Message.toObjectList(msg.getParamList(),
    proto.apollo.v2x.ft.fusion.Param.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of SingleCameraParam as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.v2x.ft.fusion.SingleCameraParam.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.cameraId;

  /** @type {?|undefined} */
  this.paramList;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.v2x.ft.fusion.SingleCameraParam.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.v2x.ft.fusion.SingleCameraParam}
 */
proto.apollo.v2x.ft.fusion.SingleCameraParam.fromObject = function(obj) {
  var msg = new proto.apollo.v2x.ft.fusion.SingleCameraParam();
  obj.cameraId != null && jspb.Message.setField(msg, 1, obj.cameraId);
  obj.paramList && jspb.Message.setRepeatedWrapperField(
      msg, 2, obj.paramList.map(
          proto.apollo.v2x.ft.fusion.Param.fromObject));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.v2x.ft.fusion.SingleCameraParam}
 */
proto.apollo.v2x.ft.fusion.SingleCameraParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.v2x.ft.fusion.SingleCameraParam;
  return proto.apollo.v2x.ft.fusion.SingleCameraParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.v2x.ft.fusion.SingleCameraParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.v2x.ft.fusion.SingleCameraParam}
 */
proto.apollo.v2x.ft.fusion.SingleCameraParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCameraId(value);
      break;
    case 2:
      var value = new proto.apollo.v2x.ft.fusion.Param;
      reader.readMessage(value,proto.apollo.v2x.ft.fusion.Param.deserializeBinaryFromReader);
      msg.addParam(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.v2x.ft.fusion.SingleCameraParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.v2x.ft.fusion.SingleCameraParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.v2x.ft.fusion.SingleCameraParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.v2x.ft.fusion.SingleCameraParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getParamList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.apollo.v2x.ft.fusion.Param.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 camera_id = 1;
 * @return {number}
 */
proto.apollo.v2x.ft.fusion.SingleCameraParam.prototype.getCameraId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.v2x.ft.fusion.SingleCameraParam} returns this
 */
proto.apollo.v2x.ft.fusion.SingleCameraParam.prototype.setCameraId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.ft.fusion.SingleCameraParam} returns this
 */
proto.apollo.v2x.ft.fusion.SingleCameraParam.prototype.clearCameraId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.ft.fusion.SingleCameraParam.prototype.hasCameraId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Param param = 2;
 * @return {!Array<!proto.apollo.v2x.ft.fusion.Param>}
 */
proto.apollo.v2x.ft.fusion.SingleCameraParam.prototype.getParamList = function() {
  return /** @type{!Array<!proto.apollo.v2x.ft.fusion.Param>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.v2x.ft.fusion.Param, 2));
};


/**
 * @param {!Array<!proto.apollo.v2x.ft.fusion.Param>} value
 * @return {!proto.apollo.v2x.ft.fusion.SingleCameraParam} returns this
*/
proto.apollo.v2x.ft.fusion.SingleCameraParam.prototype.setParamList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.apollo.v2x.ft.fusion.Param=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.v2x.ft.fusion.Param}
 */
proto.apollo.v2x.ft.fusion.SingleCameraParam.prototype.addParam = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.apollo.v2x.ft.fusion.Param, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.v2x.ft.fusion.SingleCameraParam} returns this
 */
proto.apollo.v2x.ft.fusion.SingleCameraParam.prototype.clearParamList = function() {
  return this.setParamList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.v2x.ft.fusion.ScoreParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.v2x.ft.fusion.ScoreParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.v2x.ft.fusion.ScoreParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    probScale: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    maxMatchDistance: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    minScore: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    useMahalanobisDistance: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    checkType: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    confidenceLevel: jspb.Message.getFieldWithDefault(msg, 6, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ScoreParams as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.v2x.ft.fusion.ScoreParams.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.probScale;

  /** @type {?|undefined} */
  this.maxMatchDistance;

  /** @type {?|undefined} */
  this.minScore;

  /** @type {?|undefined} */
  this.useMahalanobisDistance;

  /** @type {?|undefined} */
  this.checkType;

  /** @type {?|undefined} */
  this.confidenceLevel;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.v2x.ft.fusion.ScoreParams.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.v2x.ft.fusion.ScoreParams}
 */
proto.apollo.v2x.ft.fusion.ScoreParams.fromObject = function(obj) {
  var msg = new proto.apollo.v2x.ft.fusion.ScoreParams();
  obj.probScale != null && jspb.Message.setField(msg, 1, obj.probScale);
  obj.maxMatchDistance != null && jspb.Message.setField(msg, 2, obj.maxMatchDistance);
  obj.minScore != null && jspb.Message.setField(msg, 3, obj.minScore);
  obj.useMahalanobisDistance != null && jspb.Message.setField(msg, 4, obj.useMahalanobisDistance);
  obj.checkType != null && jspb.Message.setField(msg, 5, obj.checkType);
  obj.confidenceLevel != null && jspb.Message.setField(msg, 6, obj.confidenceLevel);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.v2x.ft.fusion.ScoreParams}
 */
proto.apollo.v2x.ft.fusion.ScoreParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.v2x.ft.fusion.ScoreParams;
  return proto.apollo.v2x.ft.fusion.ScoreParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.v2x.ft.fusion.ScoreParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.v2x.ft.fusion.ScoreParams}
 */
proto.apollo.v2x.ft.fusion.ScoreParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setProbScale(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxMatchDistance(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinScore(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseMahalanobisDistance(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCheckType(value);
      break;
    case 6:
      var value = /** @type {!proto.apollo.v2x.ft.fusion.ConfidenceLevel} */ (reader.readEnum());
      msg.setConfidenceLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.v2x.ft.fusion.ScoreParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.v2x.ft.fusion.ScoreParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.v2x.ft.fusion.ScoreParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {!proto.apollo.v2x.ft.fusion.ConfidenceLevel} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional double prob_scale = 1;
 * @return {number}
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.getProbScale = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.v2x.ft.fusion.ScoreParams} returns this
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.setProbScale = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.ft.fusion.ScoreParams} returns this
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.clearProbScale = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.hasProbScale = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double max_match_distance = 2;
 * @return {number}
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.getMaxMatchDistance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.v2x.ft.fusion.ScoreParams} returns this
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.setMaxMatchDistance = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.ft.fusion.ScoreParams} returns this
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.clearMaxMatchDistance = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.hasMaxMatchDistance = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double min_score = 3;
 * @return {number}
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.getMinScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.v2x.ft.fusion.ScoreParams} returns this
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.setMinScore = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.ft.fusion.ScoreParams} returns this
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.clearMinScore = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.hasMinScore = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool use_mahalanobis_distance = 4;
 * @return {boolean}
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.getUseMahalanobisDistance = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.v2x.ft.fusion.ScoreParams} returns this
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.setUseMahalanobisDistance = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.ft.fusion.ScoreParams} returns this
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.clearUseMahalanobisDistance = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.hasUseMahalanobisDistance = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool check_type = 5;
 * @return {boolean}
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.getCheckType = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.v2x.ft.fusion.ScoreParams} returns this
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.setCheckType = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.ft.fusion.ScoreParams} returns this
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.clearCheckType = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.hasCheckType = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ConfidenceLevel confidence_level = 6;
 * @return {!proto.apollo.v2x.ft.fusion.ConfidenceLevel}
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.getConfidenceLevel = function() {
  return /** @type {!proto.apollo.v2x.ft.fusion.ConfidenceLevel} */ (jspb.Message.getFieldWithDefault(this, 6, 2));
};


/**
 * @param {!proto.apollo.v2x.ft.fusion.ConfidenceLevel} value
 * @return {!proto.apollo.v2x.ft.fusion.ScoreParams} returns this
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.setConfidenceLevel = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.ft.fusion.ScoreParams} returns this
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.clearConfidenceLevel = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.ft.fusion.ScoreParams.prototype.hasConfidenceLevel = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.v2x.ft.fusion.FusionParams.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.v2x.ft.fusion.FusionParams.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.v2x.ft.fusion.FusionParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.v2x.ft.fusion.FusionParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.v2x.ft.fusion.FusionParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    fusionParamsList: jspb.Message.toObjectList(msg.getFusionParamsList(),
    proto.apollo.v2x.ft.fusion.SingleCameraParam.toObject, includeInstance),
    kmParams: (f = msg.getKmParams()) && proto.apollo.v2x.ft.fusion.KMParams.toObject(includeInstance, f),
    scoreParams: (f = msg.getScoreParams()) && proto.apollo.v2x.ft.fusion.ScoreParams.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of FusionParams as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.v2x.ft.fusion.FusionParams.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.fusionParamsList;

  /** @type {?|undefined} */
  this.kmParams;

  /** @type {?|undefined} */
  this.scoreParams;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.v2x.ft.fusion.FusionParams.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.v2x.ft.fusion.FusionParams}
 */
proto.apollo.v2x.ft.fusion.FusionParams.fromObject = function(obj) {
  var msg = new proto.apollo.v2x.ft.fusion.FusionParams();
  obj.fusionParamsList && jspb.Message.setRepeatedWrapperField(
      msg, 1, obj.fusionParamsList.map(
          proto.apollo.v2x.ft.fusion.SingleCameraParam.fromObject));
  obj.kmParams && jspb.Message.setWrapperField(
      msg, 2, proto.apollo.v2x.ft.fusion.KMParams.fromObject(obj.kmParams));
  obj.scoreParams && jspb.Message.setWrapperField(
      msg, 3, proto.apollo.v2x.ft.fusion.ScoreParams.fromObject(obj.scoreParams));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.v2x.ft.fusion.FusionParams}
 */
proto.apollo.v2x.ft.fusion.FusionParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.v2x.ft.fusion.FusionParams;
  return proto.apollo.v2x.ft.fusion.FusionParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.v2x.ft.fusion.FusionParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.v2x.ft.fusion.FusionParams}
 */
proto.apollo.v2x.ft.fusion.FusionParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.apollo.v2x.ft.fusion.SingleCameraParam;
      reader.readMessage(value,proto.apollo.v2x.ft.fusion.SingleCameraParam.deserializeBinaryFromReader);
      msg.addFusionParams(value);
      break;
    case 2:
      var value = new proto.apollo.v2x.ft.fusion.KMParams;
      reader.readMessage(value,proto.apollo.v2x.ft.fusion.KMParams.deserializeBinaryFromReader);
      msg.setKmParams(value);
      break;
    case 3:
      var value = new proto.apollo.v2x.ft.fusion.ScoreParams;
      reader.readMessage(value,proto.apollo.v2x.ft.fusion.ScoreParams.deserializeBinaryFromReader);
      msg.setScoreParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.v2x.ft.fusion.FusionParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.v2x.ft.fusion.FusionParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.v2x.ft.fusion.FusionParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.v2x.ft.fusion.FusionParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFusionParamsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.apollo.v2x.ft.fusion.SingleCameraParam.serializeBinaryToWriter
    );
  }
  f = message.getKmParams();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.apollo.v2x.ft.fusion.KMParams.serializeBinaryToWriter
    );
  }
  f = message.getScoreParams();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.apollo.v2x.ft.fusion.ScoreParams.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SingleCameraParam fusion_params = 1;
 * @return {!Array<!proto.apollo.v2x.ft.fusion.SingleCameraParam>}
 */
proto.apollo.v2x.ft.fusion.FusionParams.prototype.getFusionParamsList = function() {
  return /** @type{!Array<!proto.apollo.v2x.ft.fusion.SingleCameraParam>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.v2x.ft.fusion.SingleCameraParam, 1));
};


/**
 * @param {!Array<!proto.apollo.v2x.ft.fusion.SingleCameraParam>} value
 * @return {!proto.apollo.v2x.ft.fusion.FusionParams} returns this
*/
proto.apollo.v2x.ft.fusion.FusionParams.prototype.setFusionParamsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.apollo.v2x.ft.fusion.SingleCameraParam=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.v2x.ft.fusion.SingleCameraParam}
 */
proto.apollo.v2x.ft.fusion.FusionParams.prototype.addFusionParams = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.apollo.v2x.ft.fusion.SingleCameraParam, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.v2x.ft.fusion.FusionParams} returns this
 */
proto.apollo.v2x.ft.fusion.FusionParams.prototype.clearFusionParamsList = function() {
  return this.setFusionParamsList([]);
};


/**
 * optional KMParams km_params = 2;
 * @return {?proto.apollo.v2x.ft.fusion.KMParams}
 */
proto.apollo.v2x.ft.fusion.FusionParams.prototype.getKmParams = function() {
  return /** @type{?proto.apollo.v2x.ft.fusion.KMParams} */ (
    jspb.Message.getWrapperField(this, proto.apollo.v2x.ft.fusion.KMParams, 2));
};


/**
 * @param {?proto.apollo.v2x.ft.fusion.KMParams|undefined} value
 * @return {!proto.apollo.v2x.ft.fusion.FusionParams} returns this
*/
proto.apollo.v2x.ft.fusion.FusionParams.prototype.setKmParams = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.v2x.ft.fusion.FusionParams} returns this
 */
proto.apollo.v2x.ft.fusion.FusionParams.prototype.clearKmParams = function() {
  return this.setKmParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.ft.fusion.FusionParams.prototype.hasKmParams = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required ScoreParams score_params = 3;
 * @return {!proto.apollo.v2x.ft.fusion.ScoreParams}
 */
proto.apollo.v2x.ft.fusion.FusionParams.prototype.getScoreParams = function() {
  return /** @type{!proto.apollo.v2x.ft.fusion.ScoreParams} */ (
    jspb.Message.getWrapperField(this, proto.apollo.v2x.ft.fusion.ScoreParams, 3, 1));
};


/**
 * @param {!proto.apollo.v2x.ft.fusion.ScoreParams} value
 * @return {!proto.apollo.v2x.ft.fusion.FusionParams} returns this
*/
proto.apollo.v2x.ft.fusion.FusionParams.prototype.setScoreParams = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.ft.fusion.FusionParams} returns this
 */
proto.apollo.v2x.ft.fusion.FusionParams.prototype.clearScoreParams = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.ft.fusion.FusionParams.prototype.hasScoreParams = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.apollo.v2x.ft.fusion.ConfidenceLevel = {
  C90P: 0,
  C95P: 1,
  C975P: 2,
  C99P: 3
};

goog.object.extend(exports, proto.apollo.v2x.ft.fusion);
