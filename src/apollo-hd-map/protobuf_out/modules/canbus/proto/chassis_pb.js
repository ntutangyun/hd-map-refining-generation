// source: modules/canbus/proto/chassis.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var modules_common_proto_header_pb = require('../../../modules/common/proto/header_pb.js');
goog.object.extend(proto, modules_common_proto_header_pb);
var modules_common_proto_vehicle_signal_pb = require('../../../modules/common/proto/vehicle_signal_pb.js');
goog.object.extend(proto, modules_common_proto_vehicle_signal_pb);
var modules_common_proto_drive_state_pb = require('../../../modules/common/proto/drive_state_pb.js');
goog.object.extend(proto, modules_common_proto_drive_state_pb);
var modules_common_proto_geometry_pb = require('../../../modules/common/proto/geometry_pb.js');
goog.object.extend(proto, modules_common_proto_geometry_pb);
var modules_common_configs_proto_vehicle_config_pb = require('../../../modules/common/configs/proto/vehicle_config_pb.js');
goog.object.extend(proto, modules_common_configs_proto_vehicle_config_pb);
goog.exportSymbol('proto.apollo.canbus.Chassis', null, global);
goog.exportSymbol('proto.apollo.canbus.Chassis.DrivingMode', null, global);
goog.exportSymbol('proto.apollo.canbus.Chassis.ErrorCode', null, global);
goog.exportSymbol('proto.apollo.canbus.Chassis.GearPosition', null, global);
goog.exportSymbol('proto.apollo.canbus.ChassisGPS', null, global);
goog.exportSymbol('proto.apollo.canbus.GpsQuality', null, global);
goog.exportSymbol('proto.apollo.canbus.License', null, global);
goog.exportSymbol('proto.apollo.canbus.Sonar', null, global);
goog.exportSymbol('proto.apollo.canbus.Surround', null, global);
goog.exportSymbol('proto.apollo.canbus.WheelSpeed', null, global);
goog.exportSymbol('proto.apollo.canbus.WheelSpeed.WheelSpeedType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Chassis = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Chassis, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Chassis.displayName = 'proto.apollo.canbus.Chassis';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.ChassisGPS = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.ChassisGPS, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.ChassisGPS.displayName = 'proto.apollo.canbus.ChassisGPS';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.WheelSpeed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.WheelSpeed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.WheelSpeed.displayName = 'proto.apollo.canbus.WheelSpeed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Sonar = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.Sonar, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Sonar.displayName = 'proto.apollo.canbus.Sonar';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.Surround = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.canbus.Surround.repeatedFields_, null);
};
goog.inherits(proto.apollo.canbus.Surround, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.Surround.displayName = 'proto.apollo.canbus.Surround';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.canbus.License = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.canbus.License, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.canbus.License.displayName = 'proto.apollo.canbus.License';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Chassis.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Chassis.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Chassis} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Chassis.toObject = function(includeInstance, msg) {
  var f, obj = {
    engineStarted: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    engineRpm: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, NaN),
    speedMps: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, NaN),
    odometerM: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, NaN),
    fuelRangeM: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    throttlePercentage: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, NaN),
    brakePercentage: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, NaN),
    steeringPercentage: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, NaN),
    steeringTorqueNm: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, NaN),
    parkingBrake: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
    highBeamSignal: (f = jspb.Message.getBooleanField(msg, 14)) == null ? undefined : f,
    lowBeamSignal: (f = jspb.Message.getBooleanField(msg, 15)) == null ? undefined : f,
    leftTurnSignal: (f = jspb.Message.getBooleanField(msg, 16)) == null ? undefined : f,
    rightTurnSignal: (f = jspb.Message.getBooleanField(msg, 17)) == null ? undefined : f,
    horn: (f = jspb.Message.getBooleanField(msg, 18)) == null ? undefined : f,
    wiper: (f = jspb.Message.getBooleanField(msg, 19)) == null ? undefined : f,
    disengageStatus: (f = jspb.Message.getBooleanField(msg, 20)) == null ? undefined : f,
    drivingMode: jspb.Message.getFieldWithDefault(msg, 21, 0),
    errorCode: jspb.Message.getFieldWithDefault(msg, 22, 0),
    gearLocation: (f = jspb.Message.getField(msg, 23)) == null ? undefined : f,
    steeringTimestamp: (f = jspb.Message.getOptionalFloatingPointField(msg, 24)) == null ? undefined : f,
    header: (f = msg.getHeader()) && modules_common_proto_header_pb.Header.toObject(includeInstance, f),
    chassisErrorMask: jspb.Message.getFieldWithDefault(msg, 26, 0),
    signal: (f = msg.getSignal()) && modules_common_proto_vehicle_signal_pb.VehicleSignal.toObject(includeInstance, f),
    chassisGps: (f = msg.getChassisGps()) && proto.apollo.canbus.ChassisGPS.toObject(includeInstance, f),
    engageAdvice: (f = msg.getEngageAdvice()) && modules_common_proto_drive_state_pb.EngageAdvice.toObject(includeInstance, f),
    wheelSpeed: (f = msg.getWheelSpeed()) && proto.apollo.canbus.WheelSpeed.toObject(includeInstance, f),
    surround: (f = msg.getSurround()) && proto.apollo.canbus.Surround.toObject(includeInstance, f),
    license: (f = msg.getLicense()) && proto.apollo.canbus.License.toObject(includeInstance, f),
    vehicleId: (f = msg.getVehicleId()) && modules_common_configs_proto_vehicle_config_pb.VehicleID.toObject(includeInstance, f),
    batterySocPercentage: jspb.Message.getFieldWithDefault(msg, 34, -1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Chassis as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Chassis.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.engineStarted;

  /** @type {?|undefined} */
  this.engineRpm;

  /** @type {?|undefined} */
  this.speedMps;

  /** @type {?|undefined} */
  this.odometerM;

  /** @type {?|undefined} */
  this.fuelRangeM;

  /** @type {?|undefined} */
  this.throttlePercentage;

  /** @type {?|undefined} */
  this.brakePercentage;

  /** @type {?|undefined} */
  this.steeringPercentage;

  /** @type {?|undefined} */
  this.steeringTorqueNm;

  /** @type {?|undefined} */
  this.parkingBrake;

  /** @type {?|undefined} */
  this.highBeamSignal;

  /** @type {?|undefined} */
  this.lowBeamSignal;

  /** @type {?|undefined} */
  this.leftTurnSignal;

  /** @type {?|undefined} */
  this.rightTurnSignal;

  /** @type {?|undefined} */
  this.horn;

  /** @type {?|undefined} */
  this.wiper;

  /** @type {?|undefined} */
  this.disengageStatus;

  /** @type {?|undefined} */
  this.drivingMode;

  /** @type {?|undefined} */
  this.errorCode;

  /** @type {?|undefined} */
  this.gearLocation;

  /** @type {?|undefined} */
  this.steeringTimestamp;

  /** @type {?|undefined} */
  this.header;

  /** @type {?|undefined} */
  this.chassisErrorMask;

  /** @type {?|undefined} */
  this.signal;

  /** @type {?|undefined} */
  this.chassisGps;

  /** @type {?|undefined} */
  this.engageAdvice;

  /** @type {?|undefined} */
  this.wheelSpeed;

  /** @type {?|undefined} */
  this.surround;

  /** @type {?|undefined} */
  this.license;

  /** @type {?|undefined} */
  this.vehicleId;

  /** @type {?|undefined} */
  this.batterySocPercentage;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Chassis.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Chassis}
 */
proto.apollo.canbus.Chassis.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Chassis();
  obj.engineStarted != null && jspb.Message.setField(msg, 3, obj.engineStarted);
  obj.engineRpm != null && jspb.Message.setField(msg, 4, obj.engineRpm);
  obj.speedMps != null && jspb.Message.setField(msg, 5, obj.speedMps);
  obj.odometerM != null && jspb.Message.setField(msg, 6, obj.odometerM);
  obj.fuelRangeM != null && jspb.Message.setField(msg, 7, obj.fuelRangeM);
  obj.throttlePercentage != null && jspb.Message.setField(msg, 8, obj.throttlePercentage);
  obj.brakePercentage != null && jspb.Message.setField(msg, 9, obj.brakePercentage);
  obj.steeringPercentage != null && jspb.Message.setField(msg, 11, obj.steeringPercentage);
  obj.steeringTorqueNm != null && jspb.Message.setField(msg, 12, obj.steeringTorqueNm);
  obj.parkingBrake != null && jspb.Message.setField(msg, 13, obj.parkingBrake);
  obj.highBeamSignal != null && jspb.Message.setField(msg, 14, obj.highBeamSignal);
  obj.lowBeamSignal != null && jspb.Message.setField(msg, 15, obj.lowBeamSignal);
  obj.leftTurnSignal != null && jspb.Message.setField(msg, 16, obj.leftTurnSignal);
  obj.rightTurnSignal != null && jspb.Message.setField(msg, 17, obj.rightTurnSignal);
  obj.horn != null && jspb.Message.setField(msg, 18, obj.horn);
  obj.wiper != null && jspb.Message.setField(msg, 19, obj.wiper);
  obj.disengageStatus != null && jspb.Message.setField(msg, 20, obj.disengageStatus);
  obj.drivingMode != null && jspb.Message.setField(msg, 21, obj.drivingMode);
  obj.errorCode != null && jspb.Message.setField(msg, 22, obj.errorCode);
  obj.gearLocation != null && jspb.Message.setField(msg, 23, obj.gearLocation);
  obj.steeringTimestamp != null && jspb.Message.setField(msg, 24, obj.steeringTimestamp);
  obj.header && jspb.Message.setWrapperField(
      msg, 25, modules_common_proto_header_pb.Header.fromObject(obj.header));
  obj.chassisErrorMask != null && jspb.Message.setField(msg, 26, obj.chassisErrorMask);
  obj.signal && jspb.Message.setWrapperField(
      msg, 27, modules_common_proto_vehicle_signal_pb.VehicleSignal.fromObject(obj.signal));
  obj.chassisGps && jspb.Message.setWrapperField(
      msg, 28, proto.apollo.canbus.ChassisGPS.fromObject(obj.chassisGps));
  obj.engageAdvice && jspb.Message.setWrapperField(
      msg, 29, modules_common_proto_drive_state_pb.EngageAdvice.fromObject(obj.engageAdvice));
  obj.wheelSpeed && jspb.Message.setWrapperField(
      msg, 30, proto.apollo.canbus.WheelSpeed.fromObject(obj.wheelSpeed));
  obj.surround && jspb.Message.setWrapperField(
      msg, 31, proto.apollo.canbus.Surround.fromObject(obj.surround));
  obj.license && jspb.Message.setWrapperField(
      msg, 32, proto.apollo.canbus.License.fromObject(obj.license));
  obj.vehicleId && jspb.Message.setWrapperField(
      msg, 33, modules_common_configs_proto_vehicle_config_pb.VehicleID.fromObject(obj.vehicleId));
  obj.batterySocPercentage != null && jspb.Message.setField(msg, 34, obj.batterySocPercentage);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Chassis}
 */
proto.apollo.canbus.Chassis.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Chassis;
  return proto.apollo.canbus.Chassis.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Chassis} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Chassis}
 */
proto.apollo.canbus.Chassis.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEngineStarted(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEngineRpm(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSpeedMps(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOdometerM(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFuelRangeM(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setThrottlePercentage(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBrakePercentage(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSteeringPercentage(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSteeringTorqueNm(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setParkingBrake(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHighBeamSignal(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLowBeamSignal(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLeftTurnSignal(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRightTurnSignal(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHorn(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWiper(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisengageStatus(value);
      break;
    case 21:
      var value = /** @type {!proto.apollo.canbus.Chassis.DrivingMode} */ (reader.readEnum());
      msg.setDrivingMode(value);
      break;
    case 22:
      var value = /** @type {!proto.apollo.canbus.Chassis.ErrorCode} */ (reader.readEnum());
      msg.setErrorCode(value);
      break;
    case 23:
      var value = /** @type {!proto.apollo.canbus.Chassis.GearPosition} */ (reader.readEnum());
      msg.setGearLocation(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSteeringTimestamp(value);
      break;
    case 25:
      var value = new modules_common_proto_header_pb.Header;
      reader.readMessage(value,modules_common_proto_header_pb.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChassisErrorMask(value);
      break;
    case 27:
      var value = new modules_common_proto_vehicle_signal_pb.VehicleSignal;
      reader.readMessage(value,modules_common_proto_vehicle_signal_pb.VehicleSignal.deserializeBinaryFromReader);
      msg.setSignal(value);
      break;
    case 28:
      var value = new proto.apollo.canbus.ChassisGPS;
      reader.readMessage(value,proto.apollo.canbus.ChassisGPS.deserializeBinaryFromReader);
      msg.setChassisGps(value);
      break;
    case 29:
      var value = new modules_common_proto_drive_state_pb.EngageAdvice;
      reader.readMessage(value,modules_common_proto_drive_state_pb.EngageAdvice.deserializeBinaryFromReader);
      msg.setEngageAdvice(value);
      break;
    case 30:
      var value = new proto.apollo.canbus.WheelSpeed;
      reader.readMessage(value,proto.apollo.canbus.WheelSpeed.deserializeBinaryFromReader);
      msg.setWheelSpeed(value);
      break;
    case 31:
      var value = new proto.apollo.canbus.Surround;
      reader.readMessage(value,proto.apollo.canbus.Surround.deserializeBinaryFromReader);
      msg.setSurround(value);
      break;
    case 32:
      var value = new proto.apollo.canbus.License;
      reader.readMessage(value,proto.apollo.canbus.License.deserializeBinaryFromReader);
      msg.setLicense(value);
      break;
    case 33:
      var value = new modules_common_configs_proto_vehicle_config_pb.VehicleID;
      reader.readMessage(value,modules_common_configs_proto_vehicle_config_pb.VehicleID.deserializeBinaryFromReader);
      msg.setVehicleId(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBatterySocPercentage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Chassis.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Chassis.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Chassis} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Chassis.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBool(
      16,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBool(
      17,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeBool(
      18,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeBool(
      19,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeBool(
      20,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Chassis.DrivingMode} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeEnum(
      21,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Chassis.ErrorCode} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeEnum(
      22,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.Chassis.GearPosition} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeEnum(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeDouble(
      24,
      f
    );
  }
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      modules_common_proto_header_pb.Header.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeInt32(
      26,
      f
    );
  }
  f = message.getSignal();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      modules_common_proto_vehicle_signal_pb.VehicleSignal.serializeBinaryToWriter
    );
  }
  f = message.getChassisGps();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      proto.apollo.canbus.ChassisGPS.serializeBinaryToWriter
    );
  }
  f = message.getEngageAdvice();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      modules_common_proto_drive_state_pb.EngageAdvice.serializeBinaryToWriter
    );
  }
  f = message.getWheelSpeed();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.apollo.canbus.WheelSpeed.serializeBinaryToWriter
    );
  }
  f = message.getSurround();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      proto.apollo.canbus.Surround.serializeBinaryToWriter
    );
  }
  f = message.getLicense();
  if (f != null) {
    writer.writeMessage(
      32,
      f,
      proto.apollo.canbus.License.serializeBinaryToWriter
    );
  }
  f = message.getVehicleId();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      modules_common_configs_proto_vehicle_config_pb.VehicleID.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 34));
  if (f != null) {
    writer.writeInt32(
      34,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.Chassis.DrivingMode = {
  COMPLETE_MANUAL: 0,
  COMPLETE_AUTO_DRIVE: 1,
  AUTO_STEER_ONLY: 2,
  AUTO_SPEED_ONLY: 3,
  EMERGENCY_MODE: 4
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Chassis.ErrorCode = {
  NO_ERROR: 0,
  CMD_NOT_IN_PERIOD: 1,
  CHASSIS_ERROR: 2,
  CHASSIS_ERROR_ON_STEER: 6,
  CHASSIS_ERROR_ON_BRAKE: 7,
  CHASSIS_ERROR_ON_THROTTLE: 8,
  CHASSIS_ERROR_ON_GEAR: 9,
  MANUAL_INTERVENTION: 3,
  CHASSIS_CAN_NOT_IN_PERIOD: 4,
  UNKNOWN_ERROR: 5
};

/**
 * @enum {number}
 */
proto.apollo.canbus.Chassis.GearPosition = {
  GEAR_NEUTRAL: 0,
  GEAR_DRIVE: 1,
  GEAR_REVERSE: 2,
  GEAR_PARKING: 3,
  GEAR_LOW: 4,
  GEAR_INVALID: 5,
  GEAR_NONE: 6
};

/**
 * optional bool engine_started = 3;
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.getEngineStarted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setEngineStarted = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearEngineStarted = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasEngineStarted = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float engine_rpm = 4;
 * @return {number}
 */
proto.apollo.canbus.Chassis.prototype.getEngineRpm = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, NaN));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setEngineRpm = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearEngineRpm = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasEngineRpm = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional float speed_mps = 5;
 * @return {number}
 */
proto.apollo.canbus.Chassis.prototype.getSpeedMps = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, NaN));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setSpeedMps = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearSpeedMps = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasSpeedMps = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional float odometer_m = 6;
 * @return {number}
 */
proto.apollo.canbus.Chassis.prototype.getOdometerM = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, NaN));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setOdometerM = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearOdometerM = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasOdometerM = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 fuel_range_m = 7;
 * @return {number}
 */
proto.apollo.canbus.Chassis.prototype.getFuelRangeM = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setFuelRangeM = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearFuelRangeM = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasFuelRangeM = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional float throttle_percentage = 8;
 * @return {number}
 */
proto.apollo.canbus.Chassis.prototype.getThrottlePercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, NaN));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setThrottlePercentage = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearThrottlePercentage = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasThrottlePercentage = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional float brake_percentage = 9;
 * @return {number}
 */
proto.apollo.canbus.Chassis.prototype.getBrakePercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, NaN));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setBrakePercentage = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearBrakePercentage = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasBrakePercentage = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional float steering_percentage = 11;
 * @return {number}
 */
proto.apollo.canbus.Chassis.prototype.getSteeringPercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, NaN));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setSteeringPercentage = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearSteeringPercentage = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasSteeringPercentage = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional float steering_torque_nm = 12;
 * @return {number}
 */
proto.apollo.canbus.Chassis.prototype.getSteeringTorqueNm = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, NaN));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setSteeringTorqueNm = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearSteeringTorqueNm = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasSteeringTorqueNm = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool parking_brake = 13;
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.getParkingBrake = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setParkingBrake = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearParkingBrake = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasParkingBrake = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool high_beam_signal = 14;
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.getHighBeamSignal = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setHighBeamSignal = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearHighBeamSignal = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasHighBeamSignal = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool low_beam_signal = 15;
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.getLowBeamSignal = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setLowBeamSignal = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearLowBeamSignal = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasLowBeamSignal = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool left_turn_signal = 16;
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.getLeftTurnSignal = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setLeftTurnSignal = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearLeftTurnSignal = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasLeftTurnSignal = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bool right_turn_signal = 17;
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.getRightTurnSignal = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setRightTurnSignal = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearRightTurnSignal = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasRightTurnSignal = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bool horn = 18;
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.getHorn = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setHorn = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearHorn = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasHorn = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional bool wiper = 19;
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.getWiper = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setWiper = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearWiper = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasWiper = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bool disengage_status = 20;
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.getDisengageStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setDisengageStatus = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearDisengageStatus = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasDisengageStatus = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional DrivingMode driving_mode = 21;
 * @return {!proto.apollo.canbus.Chassis.DrivingMode}
 */
proto.apollo.canbus.Chassis.prototype.getDrivingMode = function() {
  return /** @type {!proto.apollo.canbus.Chassis.DrivingMode} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {!proto.apollo.canbus.Chassis.DrivingMode} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setDrivingMode = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearDrivingMode = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasDrivingMode = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional ErrorCode error_code = 22;
 * @return {!proto.apollo.canbus.Chassis.ErrorCode}
 */
proto.apollo.canbus.Chassis.prototype.getErrorCode = function() {
  return /** @type {!proto.apollo.canbus.Chassis.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {!proto.apollo.canbus.Chassis.ErrorCode} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setErrorCode = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearErrorCode = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasErrorCode = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional GearPosition gear_location = 23;
 * @return {!proto.apollo.canbus.Chassis.GearPosition}
 */
proto.apollo.canbus.Chassis.prototype.getGearLocation = function() {
  return /** @type {!proto.apollo.canbus.Chassis.GearPosition} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {!proto.apollo.canbus.Chassis.GearPosition} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setGearLocation = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearGearLocation = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasGearLocation = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional double steering_timestamp = 24;
 * @return {number}
 */
proto.apollo.canbus.Chassis.prototype.getSteeringTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 24, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setSteeringTimestamp = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearSteeringTimestamp = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasSteeringTimestamp = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional apollo.common.Header header = 25;
 * @return {?proto.apollo.common.Header}
 */
proto.apollo.canbus.Chassis.prototype.getHeader = function() {
  return /** @type{?proto.apollo.common.Header} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_header_pb.Header, 25));
};


/**
 * @param {?proto.apollo.common.Header|undefined} value
 * @return {!proto.apollo.canbus.Chassis} returns this
*/
proto.apollo.canbus.Chassis.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional int32 chassis_error_mask = 26;
 * @return {number}
 */
proto.apollo.canbus.Chassis.prototype.getChassisErrorMask = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setChassisErrorMask = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearChassisErrorMask = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasChassisErrorMask = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional apollo.common.VehicleSignal signal = 27;
 * @return {?proto.apollo.common.VehicleSignal}
 */
proto.apollo.canbus.Chassis.prototype.getSignal = function() {
  return /** @type{?proto.apollo.common.VehicleSignal} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_vehicle_signal_pb.VehicleSignal, 27));
};


/**
 * @param {?proto.apollo.common.VehicleSignal|undefined} value
 * @return {!proto.apollo.canbus.Chassis} returns this
*/
proto.apollo.canbus.Chassis.prototype.setSignal = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearSignal = function() {
  return this.setSignal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasSignal = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional ChassisGPS chassis_gps = 28;
 * @return {?proto.apollo.canbus.ChassisGPS}
 */
proto.apollo.canbus.Chassis.prototype.getChassisGps = function() {
  return /** @type{?proto.apollo.canbus.ChassisGPS} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.ChassisGPS, 28));
};


/**
 * @param {?proto.apollo.canbus.ChassisGPS|undefined} value
 * @return {!proto.apollo.canbus.Chassis} returns this
*/
proto.apollo.canbus.Chassis.prototype.setChassisGps = function(value) {
  return jspb.Message.setWrapperField(this, 28, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearChassisGps = function() {
  return this.setChassisGps(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasChassisGps = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional apollo.common.EngageAdvice engage_advice = 29;
 * @return {?proto.apollo.common.EngageAdvice}
 */
proto.apollo.canbus.Chassis.prototype.getEngageAdvice = function() {
  return /** @type{?proto.apollo.common.EngageAdvice} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_drive_state_pb.EngageAdvice, 29));
};


/**
 * @param {?proto.apollo.common.EngageAdvice|undefined} value
 * @return {!proto.apollo.canbus.Chassis} returns this
*/
proto.apollo.canbus.Chassis.prototype.setEngageAdvice = function(value) {
  return jspb.Message.setWrapperField(this, 29, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearEngageAdvice = function() {
  return this.setEngageAdvice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasEngageAdvice = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional WheelSpeed wheel_speed = 30;
 * @return {?proto.apollo.canbus.WheelSpeed}
 */
proto.apollo.canbus.Chassis.prototype.getWheelSpeed = function() {
  return /** @type{?proto.apollo.canbus.WheelSpeed} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.WheelSpeed, 30));
};


/**
 * @param {?proto.apollo.canbus.WheelSpeed|undefined} value
 * @return {!proto.apollo.canbus.Chassis} returns this
*/
proto.apollo.canbus.Chassis.prototype.setWheelSpeed = function(value) {
  return jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearWheelSpeed = function() {
  return this.setWheelSpeed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasWheelSpeed = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional Surround surround = 31;
 * @return {?proto.apollo.canbus.Surround}
 */
proto.apollo.canbus.Chassis.prototype.getSurround = function() {
  return /** @type{?proto.apollo.canbus.Surround} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.Surround, 31));
};


/**
 * @param {?proto.apollo.canbus.Surround|undefined} value
 * @return {!proto.apollo.canbus.Chassis} returns this
*/
proto.apollo.canbus.Chassis.prototype.setSurround = function(value) {
  return jspb.Message.setWrapperField(this, 31, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearSurround = function() {
  return this.setSurround(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasSurround = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional License license = 32;
 * @return {?proto.apollo.canbus.License}
 */
proto.apollo.canbus.Chassis.prototype.getLicense = function() {
  return /** @type{?proto.apollo.canbus.License} */ (
    jspb.Message.getWrapperField(this, proto.apollo.canbus.License, 32));
};


/**
 * @param {?proto.apollo.canbus.License|undefined} value
 * @return {!proto.apollo.canbus.Chassis} returns this
*/
proto.apollo.canbus.Chassis.prototype.setLicense = function(value) {
  return jspb.Message.setWrapperField(this, 32, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearLicense = function() {
  return this.setLicense(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasLicense = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional apollo.common.VehicleID vehicle_id = 33;
 * @return {?proto.apollo.common.VehicleID}
 */
proto.apollo.canbus.Chassis.prototype.getVehicleId = function() {
  return /** @type{?proto.apollo.common.VehicleID} */ (
    jspb.Message.getWrapperField(this, modules_common_configs_proto_vehicle_config_pb.VehicleID, 33));
};


/**
 * @param {?proto.apollo.common.VehicleID|undefined} value
 * @return {!proto.apollo.canbus.Chassis} returns this
*/
proto.apollo.canbus.Chassis.prototype.setVehicleId = function(value) {
  return jspb.Message.setWrapperField(this, 33, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearVehicleId = function() {
  return this.setVehicleId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasVehicleId = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional int32 battery_soc_percentage = 34;
 * @return {number}
 */
proto.apollo.canbus.Chassis.prototype.getBatterySocPercentage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 34, -1));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.setBatterySocPercentage = function(value) {
  return jspb.Message.setField(this, 34, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Chassis} returns this
 */
proto.apollo.canbus.Chassis.prototype.clearBatterySocPercentage = function() {
  return jspb.Message.setField(this, 34, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Chassis.prototype.hasBatterySocPercentage = function() {
  return jspb.Message.getField(this, 34) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.ChassisGPS.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.ChassisGPS.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.ChassisGPS} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.ChassisGPS.toObject = function(includeInstance, msg) {
  var f, obj = {
    latitude: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    longitude: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    gpsValid: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    year: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    month: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    day: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    hours: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    minutes: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    seconds: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    compassDirection: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    pdop: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    isGpsFault: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f,
    isInferred: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
    altitude: (f = jspb.Message.getOptionalFloatingPointField(msg, 14)) == null ? undefined : f,
    heading: (f = jspb.Message.getOptionalFloatingPointField(msg, 15)) == null ? undefined : f,
    hdop: (f = jspb.Message.getOptionalFloatingPointField(msg, 16)) == null ? undefined : f,
    vdop: (f = jspb.Message.getOptionalFloatingPointField(msg, 17)) == null ? undefined : f,
    quality: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
    numSatellites: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f,
    gpsSpeed: (f = jspb.Message.getOptionalFloatingPointField(msg, 20)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ChassisGPS as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.ChassisGPS.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.latitude;

  /** @type {?|undefined} */
  this.longitude;

  /** @type {?|undefined} */
  this.gpsValid;

  /** @type {?|undefined} */
  this.year;

  /** @type {?|undefined} */
  this.month;

  /** @type {?|undefined} */
  this.day;

  /** @type {?|undefined} */
  this.hours;

  /** @type {?|undefined} */
  this.minutes;

  /** @type {?|undefined} */
  this.seconds;

  /** @type {?|undefined} */
  this.compassDirection;

  /** @type {?|undefined} */
  this.pdop;

  /** @type {?|undefined} */
  this.isGpsFault;

  /** @type {?|undefined} */
  this.isInferred;

  /** @type {?|undefined} */
  this.altitude;

  /** @type {?|undefined} */
  this.heading;

  /** @type {?|undefined} */
  this.hdop;

  /** @type {?|undefined} */
  this.vdop;

  /** @type {?|undefined} */
  this.quality;

  /** @type {?|undefined} */
  this.numSatellites;

  /** @type {?|undefined} */
  this.gpsSpeed;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.ChassisGPS.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.ChassisGPS}
 */
proto.apollo.canbus.ChassisGPS.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.ChassisGPS();
  obj.latitude != null && jspb.Message.setField(msg, 1, obj.latitude);
  obj.longitude != null && jspb.Message.setField(msg, 2, obj.longitude);
  obj.gpsValid != null && jspb.Message.setField(msg, 3, obj.gpsValid);
  obj.year != null && jspb.Message.setField(msg, 4, obj.year);
  obj.month != null && jspb.Message.setField(msg, 5, obj.month);
  obj.day != null && jspb.Message.setField(msg, 6, obj.day);
  obj.hours != null && jspb.Message.setField(msg, 7, obj.hours);
  obj.minutes != null && jspb.Message.setField(msg, 8, obj.minutes);
  obj.seconds != null && jspb.Message.setField(msg, 9, obj.seconds);
  obj.compassDirection != null && jspb.Message.setField(msg, 10, obj.compassDirection);
  obj.pdop != null && jspb.Message.setField(msg, 11, obj.pdop);
  obj.isGpsFault != null && jspb.Message.setField(msg, 12, obj.isGpsFault);
  obj.isInferred != null && jspb.Message.setField(msg, 13, obj.isInferred);
  obj.altitude != null && jspb.Message.setField(msg, 14, obj.altitude);
  obj.heading != null && jspb.Message.setField(msg, 15, obj.heading);
  obj.hdop != null && jspb.Message.setField(msg, 16, obj.hdop);
  obj.vdop != null && jspb.Message.setField(msg, 17, obj.vdop);
  obj.quality != null && jspb.Message.setField(msg, 18, obj.quality);
  obj.numSatellites != null && jspb.Message.setField(msg, 19, obj.numSatellites);
  obj.gpsSpeed != null && jspb.Message.setField(msg, 20, obj.gpsSpeed);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.ChassisGPS}
 */
proto.apollo.canbus.ChassisGPS.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.ChassisGPS;
  return proto.apollo.canbus.ChassisGPS.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.ChassisGPS} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.ChassisGPS}
 */
proto.apollo.canbus.ChassisGPS.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGpsValid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setYear(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMonth(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDay(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHours(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinutes(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSeconds(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCompassDirection(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPdop(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsGpsFault(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsInferred(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAltitude(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHeading(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHdop(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVdop(value);
      break;
    case 18:
      var value = /** @type {!proto.apollo.canbus.GpsQuality} */ (reader.readEnum());
      msg.setQuality(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumSatellites(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGpsSpeed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.ChassisGPS.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.ChassisGPS.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.ChassisGPS} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.ChassisGPS.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeDouble(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.GpsQuality} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeEnum(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeDouble(
      20,
      f
    );
  }
};


/**
 * optional double latitude = 1;
 * @return {number}
 */
proto.apollo.canbus.ChassisGPS.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.setLatitude = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.clearLatitude = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.hasLatitude = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double longitude = 2;
 * @return {number}
 */
proto.apollo.canbus.ChassisGPS.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.setLongitude = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.clearLongitude = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.hasLongitude = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool gps_valid = 3;
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.getGpsValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.setGpsValid = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.clearGpsValid = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.hasGpsValid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 year = 4;
 * @return {number}
 */
proto.apollo.canbus.ChassisGPS.prototype.getYear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.setYear = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.clearYear = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.hasYear = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 month = 5;
 * @return {number}
 */
proto.apollo.canbus.ChassisGPS.prototype.getMonth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.setMonth = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.clearMonth = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.hasMonth = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 day = 6;
 * @return {number}
 */
proto.apollo.canbus.ChassisGPS.prototype.getDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.setDay = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.clearDay = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.hasDay = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 hours = 7;
 * @return {number}
 */
proto.apollo.canbus.ChassisGPS.prototype.getHours = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.setHours = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.clearHours = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.hasHours = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 minutes = 8;
 * @return {number}
 */
proto.apollo.canbus.ChassisGPS.prototype.getMinutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.setMinutes = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.clearMinutes = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.hasMinutes = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 seconds = 9;
 * @return {number}
 */
proto.apollo.canbus.ChassisGPS.prototype.getSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.setSeconds = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.clearSeconds = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.hasSeconds = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional double compass_direction = 10;
 * @return {number}
 */
proto.apollo.canbus.ChassisGPS.prototype.getCompassDirection = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.setCompassDirection = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.clearCompassDirection = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.hasCompassDirection = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional double pdop = 11;
 * @return {number}
 */
proto.apollo.canbus.ChassisGPS.prototype.getPdop = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.setPdop = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.clearPdop = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.hasPdop = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool is_gps_fault = 12;
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.getIsGpsFault = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.setIsGpsFault = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.clearIsGpsFault = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.hasIsGpsFault = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool is_inferred = 13;
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.getIsInferred = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.setIsInferred = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.clearIsInferred = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.hasIsInferred = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional double altitude = 14;
 * @return {number}
 */
proto.apollo.canbus.ChassisGPS.prototype.getAltitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.setAltitude = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.clearAltitude = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.hasAltitude = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional double heading = 15;
 * @return {number}
 */
proto.apollo.canbus.ChassisGPS.prototype.getHeading = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.setHeading = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.clearHeading = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.hasHeading = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional double hdop = 16;
 * @return {number}
 */
proto.apollo.canbus.ChassisGPS.prototype.getHdop = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.setHdop = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.clearHdop = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.hasHdop = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional double vdop = 17;
 * @return {number}
 */
proto.apollo.canbus.ChassisGPS.prototype.getVdop = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.setVdop = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.clearVdop = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.hasVdop = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional GpsQuality quality = 18;
 * @return {!proto.apollo.canbus.GpsQuality}
 */
proto.apollo.canbus.ChassisGPS.prototype.getQuality = function() {
  return /** @type {!proto.apollo.canbus.GpsQuality} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {!proto.apollo.canbus.GpsQuality} value
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.setQuality = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.clearQuality = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.hasQuality = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional int32 num_satellites = 19;
 * @return {number}
 */
proto.apollo.canbus.ChassisGPS.prototype.getNumSatellites = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.setNumSatellites = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.clearNumSatellites = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.hasNumSatellites = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional double gps_speed = 20;
 * @return {number}
 */
proto.apollo.canbus.ChassisGPS.prototype.getGpsSpeed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 20, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.setGpsSpeed = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.ChassisGPS} returns this
 */
proto.apollo.canbus.ChassisGPS.prototype.clearGpsSpeed = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.ChassisGPS.prototype.hasGpsSpeed = function() {
  return jspb.Message.getField(this, 20) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.WheelSpeed.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.WheelSpeed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.WheelSpeed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.WheelSpeed.toObject = function(includeInstance, msg) {
  var f, obj = {
    isWheelSpdRrValid: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    wheelDirectionRr: jspb.Message.getFieldWithDefault(msg, 2, 3),
    wheelSpdRr: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    isWheelSpdRlValid: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    wheelDirectionRl: jspb.Message.getFieldWithDefault(msg, 5, 3),
    wheelSpdRl: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    isWheelSpdFrValid: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    wheelDirectionFr: jspb.Message.getFieldWithDefault(msg, 8, 3),
    wheelSpdFr: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    isWheelSpdFlValid: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    wheelDirectionFl: jspb.Message.getFieldWithDefault(msg, 11, 3),
    wheelSpdFl: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of WheelSpeed as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.WheelSpeed.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.isWheelSpdRrValid;

  /** @type {?|undefined} */
  this.wheelDirectionRr;

  /** @type {?|undefined} */
  this.wheelSpdRr;

  /** @type {?|undefined} */
  this.isWheelSpdRlValid;

  /** @type {?|undefined} */
  this.wheelDirectionRl;

  /** @type {?|undefined} */
  this.wheelSpdRl;

  /** @type {?|undefined} */
  this.isWheelSpdFrValid;

  /** @type {?|undefined} */
  this.wheelDirectionFr;

  /** @type {?|undefined} */
  this.wheelSpdFr;

  /** @type {?|undefined} */
  this.isWheelSpdFlValid;

  /** @type {?|undefined} */
  this.wheelDirectionFl;

  /** @type {?|undefined} */
  this.wheelSpdFl;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.WheelSpeed.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.WheelSpeed}
 */
proto.apollo.canbus.WheelSpeed.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.WheelSpeed();
  obj.isWheelSpdRrValid != null && jspb.Message.setField(msg, 1, obj.isWheelSpdRrValid);
  obj.wheelDirectionRr != null && jspb.Message.setField(msg, 2, obj.wheelDirectionRr);
  obj.wheelSpdRr != null && jspb.Message.setField(msg, 3, obj.wheelSpdRr);
  obj.isWheelSpdRlValid != null && jspb.Message.setField(msg, 4, obj.isWheelSpdRlValid);
  obj.wheelDirectionRl != null && jspb.Message.setField(msg, 5, obj.wheelDirectionRl);
  obj.wheelSpdRl != null && jspb.Message.setField(msg, 6, obj.wheelSpdRl);
  obj.isWheelSpdFrValid != null && jspb.Message.setField(msg, 7, obj.isWheelSpdFrValid);
  obj.wheelDirectionFr != null && jspb.Message.setField(msg, 8, obj.wheelDirectionFr);
  obj.wheelSpdFr != null && jspb.Message.setField(msg, 9, obj.wheelSpdFr);
  obj.isWheelSpdFlValid != null && jspb.Message.setField(msg, 10, obj.isWheelSpdFlValid);
  obj.wheelDirectionFl != null && jspb.Message.setField(msg, 11, obj.wheelDirectionFl);
  obj.wheelSpdFl != null && jspb.Message.setField(msg, 12, obj.wheelSpdFl);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.WheelSpeed}
 */
proto.apollo.canbus.WheelSpeed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.WheelSpeed;
  return proto.apollo.canbus.WheelSpeed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.WheelSpeed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.WheelSpeed}
 */
proto.apollo.canbus.WheelSpeed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsWheelSpdRrValid(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.canbus.WheelSpeed.WheelSpeedType} */ (reader.readEnum());
      msg.setWheelDirectionRr(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWheelSpdRr(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsWheelSpdRlValid(value);
      break;
    case 5:
      var value = /** @type {!proto.apollo.canbus.WheelSpeed.WheelSpeedType} */ (reader.readEnum());
      msg.setWheelDirectionRl(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWheelSpdRl(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsWheelSpdFrValid(value);
      break;
    case 8:
      var value = /** @type {!proto.apollo.canbus.WheelSpeed.WheelSpeedType} */ (reader.readEnum());
      msg.setWheelDirectionFr(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWheelSpdFr(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsWheelSpdFlValid(value);
      break;
    case 11:
      var value = /** @type {!proto.apollo.canbus.WheelSpeed.WheelSpeedType} */ (reader.readEnum());
      msg.setWheelDirectionFl(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWheelSpdFl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.WheelSpeed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.WheelSpeed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.WheelSpeed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.WheelSpeed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.WheelSpeed.WheelSpeedType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.WheelSpeed.WheelSpeedType} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.WheelSpeed.WheelSpeedType} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {!proto.apollo.canbus.WheelSpeed.WheelSpeedType} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeDouble(
      12,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.canbus.WheelSpeed.WheelSpeedType = {
  FORWARD: 0,
  BACKWARD: 1,
  STANDSTILL: 2,
  INVALID: 3
};

/**
 * optional bool is_wheel_spd_rr_valid = 1;
 * @return {boolean}
 */
proto.apollo.canbus.WheelSpeed.prototype.getIsWheelSpdRrValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.setIsWheelSpdRrValid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.clearIsWheelSpdRrValid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.WheelSpeed.prototype.hasIsWheelSpdRrValid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional WheelSpeedType wheel_direction_rr = 2;
 * @return {!proto.apollo.canbus.WheelSpeed.WheelSpeedType}
 */
proto.apollo.canbus.WheelSpeed.prototype.getWheelDirectionRr = function() {
  return /** @type {!proto.apollo.canbus.WheelSpeed.WheelSpeedType} */ (jspb.Message.getFieldWithDefault(this, 2, 3));
};


/**
 * @param {!proto.apollo.canbus.WheelSpeed.WheelSpeedType} value
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.setWheelDirectionRr = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.clearWheelDirectionRr = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.WheelSpeed.prototype.hasWheelDirectionRr = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double wheel_spd_rr = 3;
 * @return {number}
 */
proto.apollo.canbus.WheelSpeed.prototype.getWheelSpdRr = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.setWheelSpdRr = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.clearWheelSpdRr = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.WheelSpeed.prototype.hasWheelSpdRr = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool is_wheel_spd_rl_valid = 4;
 * @return {boolean}
 */
proto.apollo.canbus.WheelSpeed.prototype.getIsWheelSpdRlValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.setIsWheelSpdRlValid = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.clearIsWheelSpdRlValid = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.WheelSpeed.prototype.hasIsWheelSpdRlValid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional WheelSpeedType wheel_direction_rl = 5;
 * @return {!proto.apollo.canbus.WheelSpeed.WheelSpeedType}
 */
proto.apollo.canbus.WheelSpeed.prototype.getWheelDirectionRl = function() {
  return /** @type {!proto.apollo.canbus.WheelSpeed.WheelSpeedType} */ (jspb.Message.getFieldWithDefault(this, 5, 3));
};


/**
 * @param {!proto.apollo.canbus.WheelSpeed.WheelSpeedType} value
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.setWheelDirectionRl = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.clearWheelDirectionRl = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.WheelSpeed.prototype.hasWheelDirectionRl = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double wheel_spd_rl = 6;
 * @return {number}
 */
proto.apollo.canbus.WheelSpeed.prototype.getWheelSpdRl = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.setWheelSpdRl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.clearWheelSpdRl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.WheelSpeed.prototype.hasWheelSpdRl = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool is_wheel_spd_fr_valid = 7;
 * @return {boolean}
 */
proto.apollo.canbus.WheelSpeed.prototype.getIsWheelSpdFrValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.setIsWheelSpdFrValid = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.clearIsWheelSpdFrValid = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.WheelSpeed.prototype.hasIsWheelSpdFrValid = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional WheelSpeedType wheel_direction_fr = 8;
 * @return {!proto.apollo.canbus.WheelSpeed.WheelSpeedType}
 */
proto.apollo.canbus.WheelSpeed.prototype.getWheelDirectionFr = function() {
  return /** @type {!proto.apollo.canbus.WheelSpeed.WheelSpeedType} */ (jspb.Message.getFieldWithDefault(this, 8, 3));
};


/**
 * @param {!proto.apollo.canbus.WheelSpeed.WheelSpeedType} value
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.setWheelDirectionFr = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.clearWheelDirectionFr = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.WheelSpeed.prototype.hasWheelDirectionFr = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double wheel_spd_fr = 9;
 * @return {number}
 */
proto.apollo.canbus.WheelSpeed.prototype.getWheelSpdFr = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.setWheelSpdFr = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.clearWheelSpdFr = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.WheelSpeed.prototype.hasWheelSpdFr = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool is_wheel_spd_fl_valid = 10;
 * @return {boolean}
 */
proto.apollo.canbus.WheelSpeed.prototype.getIsWheelSpdFlValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.setIsWheelSpdFlValid = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.clearIsWheelSpdFlValid = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.WheelSpeed.prototype.hasIsWheelSpdFlValid = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional WheelSpeedType wheel_direction_fl = 11;
 * @return {!proto.apollo.canbus.WheelSpeed.WheelSpeedType}
 */
proto.apollo.canbus.WheelSpeed.prototype.getWheelDirectionFl = function() {
  return /** @type {!proto.apollo.canbus.WheelSpeed.WheelSpeedType} */ (jspb.Message.getFieldWithDefault(this, 11, 3));
};


/**
 * @param {!proto.apollo.canbus.WheelSpeed.WheelSpeedType} value
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.setWheelDirectionFl = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.clearWheelDirectionFl = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.WheelSpeed.prototype.hasWheelDirectionFl = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional double wheel_spd_fl = 12;
 * @return {number}
 */
proto.apollo.canbus.WheelSpeed.prototype.getWheelSpdFl = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.setWheelSpdFl = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.WheelSpeed} returns this
 */
proto.apollo.canbus.WheelSpeed.prototype.clearWheelSpdFl = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.WheelSpeed.prototype.hasWheelSpdFl = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Sonar.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Sonar.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Sonar} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Sonar.toObject = function(includeInstance, msg) {
  var f, obj = {
    range: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    translation: (f = msg.getTranslation()) && modules_common_proto_geometry_pb.Point3D.toObject(includeInstance, f),
    rotation: (f = msg.getRotation()) && modules_common_proto_geometry_pb.Quaternion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Sonar as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Sonar.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.range;

  /** @type {?|undefined} */
  this.translation;

  /** @type {?|undefined} */
  this.rotation;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Sonar.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Sonar}
 */
proto.apollo.canbus.Sonar.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Sonar();
  obj.range != null && jspb.Message.setField(msg, 1, obj.range);
  obj.translation && jspb.Message.setWrapperField(
      msg, 2, modules_common_proto_geometry_pb.Point3D.fromObject(obj.translation));
  obj.rotation && jspb.Message.setWrapperField(
      msg, 3, modules_common_proto_geometry_pb.Quaternion.fromObject(obj.rotation));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Sonar}
 */
proto.apollo.canbus.Sonar.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Sonar;
  return proto.apollo.canbus.Sonar.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Sonar} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Sonar}
 */
proto.apollo.canbus.Sonar.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRange(value);
      break;
    case 2:
      var value = new modules_common_proto_geometry_pb.Point3D;
      reader.readMessage(value,modules_common_proto_geometry_pb.Point3D.deserializeBinaryFromReader);
      msg.setTranslation(value);
      break;
    case 3:
      var value = new modules_common_proto_geometry_pb.Quaternion;
      reader.readMessage(value,modules_common_proto_geometry_pb.Quaternion.deserializeBinaryFromReader);
      msg.setRotation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Sonar.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Sonar.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Sonar} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Sonar.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getTranslation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      modules_common_proto_geometry_pb.Point3D.serializeBinaryToWriter
    );
  }
  f = message.getRotation();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      modules_common_proto_geometry_pb.Quaternion.serializeBinaryToWriter
    );
  }
};


/**
 * optional double range = 1;
 * @return {number}
 */
proto.apollo.canbus.Sonar.prototype.getRange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Sonar} returns this
 */
proto.apollo.canbus.Sonar.prototype.setRange = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Sonar} returns this
 */
proto.apollo.canbus.Sonar.prototype.clearRange = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Sonar.prototype.hasRange = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional apollo.common.Point3D translation = 2;
 * @return {?proto.apollo.common.Point3D}
 */
proto.apollo.canbus.Sonar.prototype.getTranslation = function() {
  return /** @type{?proto.apollo.common.Point3D} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_geometry_pb.Point3D, 2));
};


/**
 * @param {?proto.apollo.common.Point3D|undefined} value
 * @return {!proto.apollo.canbus.Sonar} returns this
*/
proto.apollo.canbus.Sonar.prototype.setTranslation = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Sonar} returns this
 */
proto.apollo.canbus.Sonar.prototype.clearTranslation = function() {
  return this.setTranslation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Sonar.prototype.hasTranslation = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional apollo.common.Quaternion rotation = 3;
 * @return {?proto.apollo.common.Quaternion}
 */
proto.apollo.canbus.Sonar.prototype.getRotation = function() {
  return /** @type{?proto.apollo.common.Quaternion} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_geometry_pb.Quaternion, 3));
};


/**
 * @param {?proto.apollo.common.Quaternion|undefined} value
 * @return {!proto.apollo.canbus.Sonar} returns this
*/
proto.apollo.canbus.Sonar.prototype.setRotation = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.canbus.Sonar} returns this
 */
proto.apollo.canbus.Sonar.prototype.clearRotation = function() {
  return this.setRotation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Sonar.prototype.hasRotation = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.canbus.Surround.repeatedFields_ = [23,24];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.Surround.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.Surround.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.Surround} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Surround.toObject = function(includeInstance, msg) {
  var f, obj = {
    crossTrafficAlertLeft: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    crossTrafficAlertLeftEnabled: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    blindSpotLeftAlert: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    blindSpotLeftAlertEnabled: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    crossTrafficAlertRight: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    crossTrafficAlertRightEnabled: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    blindSpotRightAlert: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
    blindSpotRightAlertEnabled: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,
    sonar00: (f = jspb.Message.getOptionalFloatingPointField(msg, 9)) == null ? undefined : f,
    sonar01: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    sonar02: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    sonar03: (f = jspb.Message.getOptionalFloatingPointField(msg, 12)) == null ? undefined : f,
    sonar04: (f = jspb.Message.getOptionalFloatingPointField(msg, 13)) == null ? undefined : f,
    sonar05: (f = jspb.Message.getOptionalFloatingPointField(msg, 14)) == null ? undefined : f,
    sonar06: (f = jspb.Message.getOptionalFloatingPointField(msg, 15)) == null ? undefined : f,
    sonar07: (f = jspb.Message.getOptionalFloatingPointField(msg, 16)) == null ? undefined : f,
    sonar08: (f = jspb.Message.getOptionalFloatingPointField(msg, 17)) == null ? undefined : f,
    sonar09: (f = jspb.Message.getOptionalFloatingPointField(msg, 18)) == null ? undefined : f,
    sonar10: (f = jspb.Message.getOptionalFloatingPointField(msg, 19)) == null ? undefined : f,
    sonar11: (f = jspb.Message.getOptionalFloatingPointField(msg, 20)) == null ? undefined : f,
    sonarEnabled: (f = jspb.Message.getBooleanField(msg, 21)) == null ? undefined : f,
    sonarFault: (f = jspb.Message.getBooleanField(msg, 22)) == null ? undefined : f,
    sonarRangeList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 23)) == null ? undefined : f,
    sonarList: jspb.Message.toObjectList(msg.getSonarList(),
    proto.apollo.canbus.Sonar.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Surround as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.Surround.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.crossTrafficAlertLeft;

  /** @type {?|undefined} */
  this.crossTrafficAlertLeftEnabled;

  /** @type {?|undefined} */
  this.blindSpotLeftAlert;

  /** @type {?|undefined} */
  this.blindSpotLeftAlertEnabled;

  /** @type {?|undefined} */
  this.crossTrafficAlertRight;

  /** @type {?|undefined} */
  this.crossTrafficAlertRightEnabled;

  /** @type {?|undefined} */
  this.blindSpotRightAlert;

  /** @type {?|undefined} */
  this.blindSpotRightAlertEnabled;

  /** @type {?|undefined} */
  this.sonar00;

  /** @type {?|undefined} */
  this.sonar01;

  /** @type {?|undefined} */
  this.sonar02;

  /** @type {?|undefined} */
  this.sonar03;

  /** @type {?|undefined} */
  this.sonar04;

  /** @type {?|undefined} */
  this.sonar05;

  /** @type {?|undefined} */
  this.sonar06;

  /** @type {?|undefined} */
  this.sonar07;

  /** @type {?|undefined} */
  this.sonar08;

  /** @type {?|undefined} */
  this.sonar09;

  /** @type {?|undefined} */
  this.sonar10;

  /** @type {?|undefined} */
  this.sonar11;

  /** @type {?|undefined} */
  this.sonarEnabled;

  /** @type {?|undefined} */
  this.sonarFault;

  /** @type {?|undefined} */
  this.sonarRangeList;

  /** @type {?|undefined} */
  this.sonarList;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.Surround.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.Surround}
 */
proto.apollo.canbus.Surround.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.Surround();
  obj.crossTrafficAlertLeft != null && jspb.Message.setField(msg, 1, obj.crossTrafficAlertLeft);
  obj.crossTrafficAlertLeftEnabled != null && jspb.Message.setField(msg, 2, obj.crossTrafficAlertLeftEnabled);
  obj.blindSpotLeftAlert != null && jspb.Message.setField(msg, 3, obj.blindSpotLeftAlert);
  obj.blindSpotLeftAlertEnabled != null && jspb.Message.setField(msg, 4, obj.blindSpotLeftAlertEnabled);
  obj.crossTrafficAlertRight != null && jspb.Message.setField(msg, 5, obj.crossTrafficAlertRight);
  obj.crossTrafficAlertRightEnabled != null && jspb.Message.setField(msg, 6, obj.crossTrafficAlertRightEnabled);
  obj.blindSpotRightAlert != null && jspb.Message.setField(msg, 7, obj.blindSpotRightAlert);
  obj.blindSpotRightAlertEnabled != null && jspb.Message.setField(msg, 8, obj.blindSpotRightAlertEnabled);
  obj.sonar00 != null && jspb.Message.setField(msg, 9, obj.sonar00);
  obj.sonar01 != null && jspb.Message.setField(msg, 10, obj.sonar01);
  obj.sonar02 != null && jspb.Message.setField(msg, 11, obj.sonar02);
  obj.sonar03 != null && jspb.Message.setField(msg, 12, obj.sonar03);
  obj.sonar04 != null && jspb.Message.setField(msg, 13, obj.sonar04);
  obj.sonar05 != null && jspb.Message.setField(msg, 14, obj.sonar05);
  obj.sonar06 != null && jspb.Message.setField(msg, 15, obj.sonar06);
  obj.sonar07 != null && jspb.Message.setField(msg, 16, obj.sonar07);
  obj.sonar08 != null && jspb.Message.setField(msg, 17, obj.sonar08);
  obj.sonar09 != null && jspb.Message.setField(msg, 18, obj.sonar09);
  obj.sonar10 != null && jspb.Message.setField(msg, 19, obj.sonar10);
  obj.sonar11 != null && jspb.Message.setField(msg, 20, obj.sonar11);
  obj.sonarEnabled != null && jspb.Message.setField(msg, 21, obj.sonarEnabled);
  obj.sonarFault != null && jspb.Message.setField(msg, 22, obj.sonarFault);
  obj.sonarRangeList != null && jspb.Message.setField(msg, 23, obj.sonarRangeList);
  obj.sonarList && jspb.Message.setRepeatedWrapperField(
      msg, 24, obj.sonarList.map(
          proto.apollo.canbus.Sonar.fromObject));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.Surround}
 */
proto.apollo.canbus.Surround.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.Surround;
  return proto.apollo.canbus.Surround.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.Surround} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.Surround}
 */
proto.apollo.canbus.Surround.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCrossTrafficAlertLeft(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCrossTrafficAlertLeftEnabled(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlindSpotLeftAlert(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlindSpotLeftAlertEnabled(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCrossTrafficAlertRight(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCrossTrafficAlertRightEnabled(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlindSpotRightAlert(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlindSpotRightAlertEnabled(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSonar00(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSonar01(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSonar02(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSonar03(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSonar04(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSonar05(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSonar06(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSonar07(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSonar08(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSonar09(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSonar10(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSonar11(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSonarEnabled(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSonarFault(value);
      break;
    case 23:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSonarRange(values[i]);
      }
      break;
    case 24:
      var value = new proto.apollo.canbus.Sonar;
      reader.readMessage(value,proto.apollo.canbus.Sonar.deserializeBinaryFromReader);
      msg.addSonar(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.Surround.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.Surround.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.Surround} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.Surround.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeDouble(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeDouble(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeDouble(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeDouble(
      20,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeBool(
      21,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getSonarRangeList();
  if (f.length > 0) {
    writer.writeRepeatedDouble(
      23,
      f
    );
  }
  f = message.getSonarList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      24,
      f,
      proto.apollo.canbus.Sonar.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool cross_traffic_alert_left = 1;
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.getCrossTrafficAlertLeft = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setCrossTrafficAlertLeft = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearCrossTrafficAlertLeft = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.hasCrossTrafficAlertLeft = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool cross_traffic_alert_left_enabled = 2;
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.getCrossTrafficAlertLeftEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setCrossTrafficAlertLeftEnabled = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearCrossTrafficAlertLeftEnabled = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.hasCrossTrafficAlertLeftEnabled = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool blind_spot_left_alert = 3;
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.getBlindSpotLeftAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setBlindSpotLeftAlert = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearBlindSpotLeftAlert = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.hasBlindSpotLeftAlert = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool blind_spot_left_alert_enabled = 4;
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.getBlindSpotLeftAlertEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setBlindSpotLeftAlertEnabled = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearBlindSpotLeftAlertEnabled = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.hasBlindSpotLeftAlertEnabled = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool cross_traffic_alert_right = 5;
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.getCrossTrafficAlertRight = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setCrossTrafficAlertRight = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearCrossTrafficAlertRight = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.hasCrossTrafficAlertRight = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool cross_traffic_alert_right_enabled = 6;
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.getCrossTrafficAlertRightEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setCrossTrafficAlertRightEnabled = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearCrossTrafficAlertRightEnabled = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.hasCrossTrafficAlertRightEnabled = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool blind_spot_right_alert = 7;
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.getBlindSpotRightAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setBlindSpotRightAlert = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearBlindSpotRightAlert = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.hasBlindSpotRightAlert = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool blind_spot_right_alert_enabled = 8;
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.getBlindSpotRightAlertEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setBlindSpotRightAlertEnabled = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearBlindSpotRightAlertEnabled = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.hasBlindSpotRightAlertEnabled = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double sonar00 = 9;
 * @return {number}
 */
proto.apollo.canbus.Surround.prototype.getSonar00 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setSonar00 = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearSonar00 = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.hasSonar00 = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional double sonar01 = 10;
 * @return {number}
 */
proto.apollo.canbus.Surround.prototype.getSonar01 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setSonar01 = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearSonar01 = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.hasSonar01 = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional double sonar02 = 11;
 * @return {number}
 */
proto.apollo.canbus.Surround.prototype.getSonar02 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setSonar02 = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearSonar02 = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.hasSonar02 = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional double sonar03 = 12;
 * @return {number}
 */
proto.apollo.canbus.Surround.prototype.getSonar03 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setSonar03 = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearSonar03 = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.hasSonar03 = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional double sonar04 = 13;
 * @return {number}
 */
proto.apollo.canbus.Surround.prototype.getSonar04 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setSonar04 = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearSonar04 = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.hasSonar04 = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional double sonar05 = 14;
 * @return {number}
 */
proto.apollo.canbus.Surround.prototype.getSonar05 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setSonar05 = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearSonar05 = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.hasSonar05 = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional double sonar06 = 15;
 * @return {number}
 */
proto.apollo.canbus.Surround.prototype.getSonar06 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setSonar06 = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearSonar06 = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.hasSonar06 = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional double sonar07 = 16;
 * @return {number}
 */
proto.apollo.canbus.Surround.prototype.getSonar07 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setSonar07 = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearSonar07 = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.hasSonar07 = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional double sonar08 = 17;
 * @return {number}
 */
proto.apollo.canbus.Surround.prototype.getSonar08 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setSonar08 = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearSonar08 = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.hasSonar08 = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional double sonar09 = 18;
 * @return {number}
 */
proto.apollo.canbus.Surround.prototype.getSonar09 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 18, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setSonar09 = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearSonar09 = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.hasSonar09 = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional double sonar10 = 19;
 * @return {number}
 */
proto.apollo.canbus.Surround.prototype.getSonar10 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 19, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setSonar10 = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearSonar10 = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.hasSonar10 = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional double sonar11 = 20;
 * @return {number}
 */
proto.apollo.canbus.Surround.prototype.getSonar11 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 20, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setSonar11 = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearSonar11 = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.hasSonar11 = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional bool sonar_enabled = 21;
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.getSonarEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setSonarEnabled = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearSonarEnabled = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.hasSonarEnabled = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional bool sonar_fault = 22;
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.getSonarFault = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setSonarFault = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearSonarFault = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.Surround.prototype.hasSonarFault = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * repeated double sonar_range = 23;
 * @return {!Array<number>}
 */
proto.apollo.canbus.Surround.prototype.getSonarRangeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 23));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.setSonarRangeList = function(value) {
  return jspb.Message.setField(this, 23, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.addSonarRange = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 23, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearSonarRangeList = function() {
  return this.setSonarRangeList([]);
};


/**
 * repeated Sonar sonar = 24;
 * @return {!Array<!proto.apollo.canbus.Sonar>}
 */
proto.apollo.canbus.Surround.prototype.getSonarList = function() {
  return /** @type{!Array<!proto.apollo.canbus.Sonar>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.canbus.Sonar, 24));
};


/**
 * @param {!Array<!proto.apollo.canbus.Sonar>} value
 * @return {!proto.apollo.canbus.Surround} returns this
*/
proto.apollo.canbus.Surround.prototype.setSonarList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 24, value);
};


/**
 * @param {!proto.apollo.canbus.Sonar=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.canbus.Sonar}
 */
proto.apollo.canbus.Surround.prototype.addSonar = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 24, opt_value, proto.apollo.canbus.Sonar, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.canbus.Surround} returns this
 */
proto.apollo.canbus.Surround.prototype.clearSonarList = function() {
  return this.setSonarList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.canbus.License.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.canbus.License.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.canbus.License} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.License.toObject = function(includeInstance, msg) {
  var f, obj = {
    vin: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of License as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.canbus.License.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.vin;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.canbus.License.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.canbus.License}
 */
proto.apollo.canbus.License.fromObject = function(obj) {
  var msg = new proto.apollo.canbus.License();
  obj.vin != null && jspb.Message.setField(msg, 1, obj.vin);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.canbus.License}
 */
proto.apollo.canbus.License.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.canbus.License;
  return proto.apollo.canbus.License.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.canbus.License} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.canbus.License}
 */
proto.apollo.canbus.License.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.canbus.License.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.canbus.License.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.canbus.License} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.canbus.License.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string vin = 1;
 * @return {string}
 */
proto.apollo.canbus.License.prototype.getVin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.canbus.License} returns this
 */
proto.apollo.canbus.License.prototype.setVin = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.canbus.License} returns this
 */
proto.apollo.canbus.License.prototype.clearVin = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.canbus.License.prototype.hasVin = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * @enum {number}
 */
proto.apollo.canbus.GpsQuality = {
  FIX_NO: 0,
  FIX_2D: 1,
  FIX_3D: 2,
  FIX_INVALID: 3
};

goog.object.extend(exports, proto.apollo.canbus);
