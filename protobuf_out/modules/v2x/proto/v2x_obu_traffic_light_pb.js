// source: modules/v2x/proto/v2x_obu_traffic_light.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var modules_common_proto_header_pb = require('../../../modules/common/proto/header_pb.js');
goog.object.extend(proto, modules_common_proto_header_pb);
var modules_v2x_proto_v2x_traffic_light_pb = require('../../../modules/v2x/proto/v2x_traffic_light_pb.js');
goog.object.extend(proto, modules_v2x_proto_v2x_traffic_light_pb);
goog.exportSymbol('proto.apollo.v2x.obu.LaneTrafficLight', null, global);
goog.exportSymbol('proto.apollo.v2x.obu.ObuTrafficLight', null, global);
goog.exportSymbol('proto.apollo.v2x.obu.RoadTrafficLight', null, global);
goog.exportSymbol('proto.apollo.v2x.obu.SingleTrafficLight', null, global);
goog.exportSymbol('proto.apollo.v2x.obu.SingleTrafficLight.Type', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.v2x.obu.SingleTrafficLight = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.v2x.obu.SingleTrafficLight, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.v2x.obu.SingleTrafficLight.displayName = 'proto.apollo.v2x.obu.SingleTrafficLight';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.v2x.obu.LaneTrafficLight = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.v2x.obu.LaneTrafficLight.repeatedFields_, null);
};
goog.inherits(proto.apollo.v2x.obu.LaneTrafficLight, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.v2x.obu.LaneTrafficLight.displayName = 'proto.apollo.v2x.obu.LaneTrafficLight';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.v2x.obu.RoadTrafficLight = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.v2x.obu.RoadTrafficLight.repeatedFields_, null);
};
goog.inherits(proto.apollo.v2x.obu.RoadTrafficLight, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.v2x.obu.RoadTrafficLight.displayName = 'proto.apollo.v2x.obu.RoadTrafficLight';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.v2x.obu.ObuTrafficLight = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.v2x.obu.ObuTrafficLight.repeatedFields_, null);
};
goog.inherits(proto.apollo.v2x.obu.ObuTrafficLight, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.v2x.obu.ObuTrafficLight.displayName = 'proto.apollo.v2x.obu.ObuTrafficLight';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.v2x.obu.SingleTrafficLight.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.v2x.obu.SingleTrafficLight} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.v2x.obu.SingleTrafficLight.toObject = function(includeInstance, msg) {
  var f, obj = {
    color: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    trafficLightType: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    id: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    colorRemainingTimeS: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    rightTurnLight: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    nextColor: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    nextRemainingTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    next2ndColor: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    next2ndRemainingTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of SingleTrafficLight as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.v2x.obu.SingleTrafficLight.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.color;

  /** @type {?|undefined} */
  this.trafficLightType;

  /** @type {?|undefined} */
  this.id;

  /** @type {?|undefined} */
  this.colorRemainingTimeS;

  /** @type {?|undefined} */
  this.rightTurnLight;

  /** @type {?|undefined} */
  this.nextColor;

  /** @type {?|undefined} */
  this.nextRemainingTime;

  /** @type {?|undefined} */
  this.next2ndColor;

  /** @type {?|undefined} */
  this.next2ndRemainingTime;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.v2x.obu.SingleTrafficLight.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.v2x.obu.SingleTrafficLight}
 */
proto.apollo.v2x.obu.SingleTrafficLight.fromObject = function(obj) {
  var msg = new proto.apollo.v2x.obu.SingleTrafficLight();
  obj.color != null && jspb.Message.setField(msg, 1, obj.color);
  obj.trafficLightType != null && jspb.Message.setField(msg, 2, obj.trafficLightType);
  obj.id != null && jspb.Message.setField(msg, 3, obj.id);
  obj.colorRemainingTimeS != null && jspb.Message.setField(msg, 4, obj.colorRemainingTimeS);
  obj.rightTurnLight != null && jspb.Message.setField(msg, 5, obj.rightTurnLight);
  obj.nextColor != null && jspb.Message.setField(msg, 6, obj.nextColor);
  obj.nextRemainingTime != null && jspb.Message.setField(msg, 7, obj.nextRemainingTime);
  obj.next2ndColor != null && jspb.Message.setField(msg, 8, obj.next2ndColor);
  obj.next2ndRemainingTime != null && jspb.Message.setField(msg, 9, obj.next2ndRemainingTime);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.v2x.obu.SingleTrafficLight}
 */
proto.apollo.v2x.obu.SingleTrafficLight.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.v2x.obu.SingleTrafficLight;
  return proto.apollo.v2x.obu.SingleTrafficLight.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.v2x.obu.SingleTrafficLight} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.v2x.obu.SingleTrafficLight}
 */
proto.apollo.v2x.obu.SingleTrafficLight.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.apollo.v2x.SingleTrafficLight.Color} */ (reader.readEnum());
      msg.setColor(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTrafficLightType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setColorRemainingTimeS(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRightTurnLight(value);
      break;
    case 6:
      var value = /** @type {!proto.apollo.v2x.SingleTrafficLight.Color} */ (reader.readEnum());
      msg.setNextColor(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNextRemainingTime(value);
      break;
    case 8:
      var value = /** @type {!proto.apollo.v2x.SingleTrafficLight.Color} */ (reader.readEnum());
      msg.setNext2ndColor(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNext2ndRemainingTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.v2x.obu.SingleTrafficLight.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.v2x.obu.SingleTrafficLight} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.v2x.obu.SingleTrafficLight.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.apollo.v2x.SingleTrafficLight.Color} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {!proto.apollo.v2x.SingleTrafficLight.Color} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {!proto.apollo.v2x.SingleTrafficLight.Color} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeDouble(
      9,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.v2x.obu.SingleTrafficLight.Type = {
  STRAIGHT: 1,
  LEFT: 2,
  RIGHT: 3,
  U_TURN: 4
};

/**
 * optional apollo.v2x.SingleTrafficLight.Color color = 1;
 * @return {!proto.apollo.v2x.SingleTrafficLight.Color}
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.getColor = function() {
  return /** @type {!proto.apollo.v2x.SingleTrafficLight.Color} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.apollo.v2x.SingleTrafficLight.Color} value
 * @return {!proto.apollo.v2x.obu.SingleTrafficLight} returns this
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.setColor = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.obu.SingleTrafficLight} returns this
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.clearColor = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.hasColor = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 traffic_light_type = 2;
 * @return {number}
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.getTrafficLightType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.v2x.obu.SingleTrafficLight} returns this
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.setTrafficLightType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.obu.SingleTrafficLight} returns this
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.clearTrafficLightType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.hasTrafficLightType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string id = 3;
 * @return {string}
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.v2x.obu.SingleTrafficLight} returns this
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.setId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.obu.SingleTrafficLight} returns this
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.clearId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.hasId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 color_remaining_time_s = 4;
 * @return {number}
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.getColorRemainingTimeS = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.v2x.obu.SingleTrafficLight} returns this
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.setColorRemainingTimeS = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.obu.SingleTrafficLight} returns this
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.clearColorRemainingTimeS = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.hasColorRemainingTimeS = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool right_turn_light = 5;
 * @return {boolean}
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.getRightTurnLight = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.v2x.obu.SingleTrafficLight} returns this
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.setRightTurnLight = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.obu.SingleTrafficLight} returns this
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.clearRightTurnLight = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.hasRightTurnLight = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional apollo.v2x.SingleTrafficLight.Color next_color = 6;
 * @return {!proto.apollo.v2x.SingleTrafficLight.Color}
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.getNextColor = function() {
  return /** @type {!proto.apollo.v2x.SingleTrafficLight.Color} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.apollo.v2x.SingleTrafficLight.Color} value
 * @return {!proto.apollo.v2x.obu.SingleTrafficLight} returns this
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.setNextColor = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.obu.SingleTrafficLight} returns this
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.clearNextColor = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.hasNextColor = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double next_remaining_time = 7;
 * @return {number}
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.getNextRemainingTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.v2x.obu.SingleTrafficLight} returns this
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.setNextRemainingTime = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.obu.SingleTrafficLight} returns this
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.clearNextRemainingTime = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.hasNextRemainingTime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional apollo.v2x.SingleTrafficLight.Color next_2nd_color = 8;
 * @return {!proto.apollo.v2x.SingleTrafficLight.Color}
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.getNext2ndColor = function() {
  return /** @type {!proto.apollo.v2x.SingleTrafficLight.Color} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.apollo.v2x.SingleTrafficLight.Color} value
 * @return {!proto.apollo.v2x.obu.SingleTrafficLight} returns this
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.setNext2ndColor = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.obu.SingleTrafficLight} returns this
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.clearNext2ndColor = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.hasNext2ndColor = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double next_2nd_remaining_time = 9;
 * @return {number}
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.getNext2ndRemainingTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.v2x.obu.SingleTrafficLight} returns this
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.setNext2ndRemainingTime = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.obu.SingleTrafficLight} returns this
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.clearNext2ndRemainingTime = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.obu.SingleTrafficLight.prototype.hasNext2ndRemainingTime = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.v2x.obu.LaneTrafficLight.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.v2x.obu.LaneTrafficLight.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.v2x.obu.LaneTrafficLight.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.v2x.obu.LaneTrafficLight} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.v2x.obu.LaneTrafficLight.toObject = function(includeInstance, msg) {
  var f, obj = {
    gpsXM: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    gpsYM: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    singleTrafficLightList: jspb.Message.toObjectList(msg.getSingleTrafficLightList(),
    proto.apollo.v2x.obu.SingleTrafficLight.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of LaneTrafficLight as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.v2x.obu.LaneTrafficLight.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.gpsXM;

  /** @type {?|undefined} */
  this.gpsYM;

  /** @type {?|undefined} */
  this.singleTrafficLightList;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.v2x.obu.LaneTrafficLight.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.v2x.obu.LaneTrafficLight}
 */
proto.apollo.v2x.obu.LaneTrafficLight.fromObject = function(obj) {
  var msg = new proto.apollo.v2x.obu.LaneTrafficLight();
  obj.gpsXM != null && jspb.Message.setField(msg, 1, obj.gpsXM);
  obj.gpsYM != null && jspb.Message.setField(msg, 2, obj.gpsYM);
  obj.singleTrafficLightList && jspb.Message.setRepeatedWrapperField(
      msg, 3, obj.singleTrafficLightList.map(
          proto.apollo.v2x.obu.SingleTrafficLight.fromObject));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.v2x.obu.LaneTrafficLight}
 */
proto.apollo.v2x.obu.LaneTrafficLight.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.v2x.obu.LaneTrafficLight;
  return proto.apollo.v2x.obu.LaneTrafficLight.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.v2x.obu.LaneTrafficLight} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.v2x.obu.LaneTrafficLight}
 */
proto.apollo.v2x.obu.LaneTrafficLight.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGpsXM(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGpsYM(value);
      break;
    case 3:
      var value = new proto.apollo.v2x.obu.SingleTrafficLight;
      reader.readMessage(value,proto.apollo.v2x.obu.SingleTrafficLight.deserializeBinaryFromReader);
      msg.addSingleTrafficLight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.v2x.obu.LaneTrafficLight.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.v2x.obu.LaneTrafficLight.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.v2x.obu.LaneTrafficLight} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.v2x.obu.LaneTrafficLight.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getSingleTrafficLightList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.apollo.v2x.obu.SingleTrafficLight.serializeBinaryToWriter
    );
  }
};


/**
 * optional double gps_x_m = 1;
 * @return {number}
 */
proto.apollo.v2x.obu.LaneTrafficLight.prototype.getGpsXM = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.v2x.obu.LaneTrafficLight} returns this
 */
proto.apollo.v2x.obu.LaneTrafficLight.prototype.setGpsXM = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.obu.LaneTrafficLight} returns this
 */
proto.apollo.v2x.obu.LaneTrafficLight.prototype.clearGpsXM = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.obu.LaneTrafficLight.prototype.hasGpsXM = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double gps_y_m = 2;
 * @return {number}
 */
proto.apollo.v2x.obu.LaneTrafficLight.prototype.getGpsYM = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.v2x.obu.LaneTrafficLight} returns this
 */
proto.apollo.v2x.obu.LaneTrafficLight.prototype.setGpsYM = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.obu.LaneTrafficLight} returns this
 */
proto.apollo.v2x.obu.LaneTrafficLight.prototype.clearGpsYM = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.obu.LaneTrafficLight.prototype.hasGpsYM = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated SingleTrafficLight single_traffic_light = 3;
 * @return {!Array<!proto.apollo.v2x.obu.SingleTrafficLight>}
 */
proto.apollo.v2x.obu.LaneTrafficLight.prototype.getSingleTrafficLightList = function() {
  return /** @type{!Array<!proto.apollo.v2x.obu.SingleTrafficLight>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.v2x.obu.SingleTrafficLight, 3));
};


/**
 * @param {!Array<!proto.apollo.v2x.obu.SingleTrafficLight>} value
 * @return {!proto.apollo.v2x.obu.LaneTrafficLight} returns this
*/
proto.apollo.v2x.obu.LaneTrafficLight.prototype.setSingleTrafficLightList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.apollo.v2x.obu.SingleTrafficLight=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.v2x.obu.SingleTrafficLight}
 */
proto.apollo.v2x.obu.LaneTrafficLight.prototype.addSingleTrafficLight = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.apollo.v2x.obu.SingleTrafficLight, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.v2x.obu.LaneTrafficLight} returns this
 */
proto.apollo.v2x.obu.LaneTrafficLight.prototype.clearSingleTrafficLightList = function() {
  return this.setSingleTrafficLightList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.v2x.obu.RoadTrafficLight.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.v2x.obu.RoadTrafficLight.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.v2x.obu.RoadTrafficLight.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.v2x.obu.RoadTrafficLight} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.v2x.obu.RoadTrafficLight.toObject = function(includeInstance, msg) {
  var f, obj = {
    laneTrafficLightList: jspb.Message.toObjectList(msg.getLaneTrafficLightList(),
    proto.apollo.v2x.obu.LaneTrafficLight.toObject, includeInstance),
    roadDirection: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of RoadTrafficLight as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.v2x.obu.RoadTrafficLight.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.laneTrafficLightList;

  /** @type {?|undefined} */
  this.roadDirection;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.v2x.obu.RoadTrafficLight.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.v2x.obu.RoadTrafficLight}
 */
proto.apollo.v2x.obu.RoadTrafficLight.fromObject = function(obj) {
  var msg = new proto.apollo.v2x.obu.RoadTrafficLight();
  obj.laneTrafficLightList && jspb.Message.setRepeatedWrapperField(
      msg, 1, obj.laneTrafficLightList.map(
          proto.apollo.v2x.obu.LaneTrafficLight.fromObject));
  obj.roadDirection != null && jspb.Message.setField(msg, 2, obj.roadDirection);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.v2x.obu.RoadTrafficLight}
 */
proto.apollo.v2x.obu.RoadTrafficLight.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.v2x.obu.RoadTrafficLight;
  return proto.apollo.v2x.obu.RoadTrafficLight.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.v2x.obu.RoadTrafficLight} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.v2x.obu.RoadTrafficLight}
 */
proto.apollo.v2x.obu.RoadTrafficLight.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.apollo.v2x.obu.LaneTrafficLight;
      reader.readMessage(value,proto.apollo.v2x.obu.LaneTrafficLight.deserializeBinaryFromReader);
      msg.addLaneTrafficLight(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRoadDirection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.v2x.obu.RoadTrafficLight.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.v2x.obu.RoadTrafficLight.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.v2x.obu.RoadTrafficLight} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.v2x.obu.RoadTrafficLight.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLaneTrafficLightList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.apollo.v2x.obu.LaneTrafficLight.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated LaneTrafficLight lane_traffic_light = 1;
 * @return {!Array<!proto.apollo.v2x.obu.LaneTrafficLight>}
 */
proto.apollo.v2x.obu.RoadTrafficLight.prototype.getLaneTrafficLightList = function() {
  return /** @type{!Array<!proto.apollo.v2x.obu.LaneTrafficLight>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.v2x.obu.LaneTrafficLight, 1));
};


/**
 * @param {!Array<!proto.apollo.v2x.obu.LaneTrafficLight>} value
 * @return {!proto.apollo.v2x.obu.RoadTrafficLight} returns this
*/
proto.apollo.v2x.obu.RoadTrafficLight.prototype.setLaneTrafficLightList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.apollo.v2x.obu.LaneTrafficLight=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.v2x.obu.LaneTrafficLight}
 */
proto.apollo.v2x.obu.RoadTrafficLight.prototype.addLaneTrafficLight = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.apollo.v2x.obu.LaneTrafficLight, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.v2x.obu.RoadTrafficLight} returns this
 */
proto.apollo.v2x.obu.RoadTrafficLight.prototype.clearLaneTrafficLightList = function() {
  return this.setLaneTrafficLightList([]);
};


/**
 * optional int32 road_direction = 2;
 * @return {number}
 */
proto.apollo.v2x.obu.RoadTrafficLight.prototype.getRoadDirection = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.v2x.obu.RoadTrafficLight} returns this
 */
proto.apollo.v2x.obu.RoadTrafficLight.prototype.setRoadDirection = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.obu.RoadTrafficLight} returns this
 */
proto.apollo.v2x.obu.RoadTrafficLight.prototype.clearRoadDirection = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.obu.RoadTrafficLight.prototype.hasRoadDirection = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.v2x.obu.ObuTrafficLight.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.v2x.obu.ObuTrafficLight.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.v2x.obu.ObuTrafficLight.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.v2x.obu.ObuTrafficLight} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.v2x.obu.ObuTrafficLight.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && modules_common_proto_header_pb.Header.toObject(includeInstance, f),
    roadTrafficLightList: jspb.Message.toObjectList(msg.getRoadTrafficLightList(),
    proto.apollo.v2x.obu.RoadTrafficLight.toObject, includeInstance),
    intersectionId: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    hdmapJunctionId: msg.getHdmapJunctionId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ObuTrafficLight as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.v2x.obu.ObuTrafficLight.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.header;

  /** @type {?|undefined} */
  this.roadTrafficLightList;

  /** @type {?|undefined} */
  this.intersectionId;

  /** @type {?|undefined} */
  this.hdmapJunctionId;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.v2x.obu.ObuTrafficLight.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.v2x.obu.ObuTrafficLight}
 */
proto.apollo.v2x.obu.ObuTrafficLight.fromObject = function(obj) {
  var msg = new proto.apollo.v2x.obu.ObuTrafficLight();
  obj.header && jspb.Message.setWrapperField(
      msg, 1, modules_common_proto_header_pb.Header.fromObject(obj.header));
  obj.roadTrafficLightList && jspb.Message.setRepeatedWrapperField(
      msg, 2, obj.roadTrafficLightList.map(
          proto.apollo.v2x.obu.RoadTrafficLight.fromObject));
  obj.intersectionId != null && jspb.Message.setField(msg, 3, obj.intersectionId);
  obj.hdmapJunctionId != null && jspb.Message.setField(msg, 4, obj.hdmapJunctionId);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.v2x.obu.ObuTrafficLight}
 */
proto.apollo.v2x.obu.ObuTrafficLight.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.v2x.obu.ObuTrafficLight;
  return proto.apollo.v2x.obu.ObuTrafficLight.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.v2x.obu.ObuTrafficLight} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.v2x.obu.ObuTrafficLight}
 */
proto.apollo.v2x.obu.ObuTrafficLight.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modules_common_proto_header_pb.Header;
      reader.readMessage(value,modules_common_proto_header_pb.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.apollo.v2x.obu.RoadTrafficLight;
      reader.readMessage(value,proto.apollo.v2x.obu.RoadTrafficLight.deserializeBinaryFromReader);
      msg.addRoadTrafficLight(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIntersectionId(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHdmapJunctionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.v2x.obu.ObuTrafficLight.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.v2x.obu.ObuTrafficLight.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.v2x.obu.ObuTrafficLight} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.v2x.obu.ObuTrafficLight.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modules_common_proto_header_pb.Header.serializeBinaryToWriter
    );
  }
  f = message.getRoadTrafficLightList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.apollo.v2x.obu.RoadTrafficLight.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional apollo.common.Header header = 1;
 * @return {?proto.apollo.common.Header}
 */
proto.apollo.v2x.obu.ObuTrafficLight.prototype.getHeader = function() {
  return /** @type{?proto.apollo.common.Header} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_header_pb.Header, 1));
};


/**
 * @param {?proto.apollo.common.Header|undefined} value
 * @return {!proto.apollo.v2x.obu.ObuTrafficLight} returns this
*/
proto.apollo.v2x.obu.ObuTrafficLight.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.v2x.obu.ObuTrafficLight} returns this
 */
proto.apollo.v2x.obu.ObuTrafficLight.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.obu.ObuTrafficLight.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated RoadTrafficLight road_traffic_light = 2;
 * @return {!Array<!proto.apollo.v2x.obu.RoadTrafficLight>}
 */
proto.apollo.v2x.obu.ObuTrafficLight.prototype.getRoadTrafficLightList = function() {
  return /** @type{!Array<!proto.apollo.v2x.obu.RoadTrafficLight>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.v2x.obu.RoadTrafficLight, 2));
};


/**
 * @param {!Array<!proto.apollo.v2x.obu.RoadTrafficLight>} value
 * @return {!proto.apollo.v2x.obu.ObuTrafficLight} returns this
*/
proto.apollo.v2x.obu.ObuTrafficLight.prototype.setRoadTrafficLightList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.apollo.v2x.obu.RoadTrafficLight=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.v2x.obu.RoadTrafficLight}
 */
proto.apollo.v2x.obu.ObuTrafficLight.prototype.addRoadTrafficLight = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.apollo.v2x.obu.RoadTrafficLight, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.v2x.obu.ObuTrafficLight} returns this
 */
proto.apollo.v2x.obu.ObuTrafficLight.prototype.clearRoadTrafficLightList = function() {
  return this.setRoadTrafficLightList([]);
};


/**
 * optional int32 intersection_id = 3;
 * @return {number}
 */
proto.apollo.v2x.obu.ObuTrafficLight.prototype.getIntersectionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.v2x.obu.ObuTrafficLight} returns this
 */
proto.apollo.v2x.obu.ObuTrafficLight.prototype.setIntersectionId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.obu.ObuTrafficLight} returns this
 */
proto.apollo.v2x.obu.ObuTrafficLight.prototype.clearIntersectionId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.obu.ObuTrafficLight.prototype.hasIntersectionId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes hdmap_junction_id = 4;
 * @return {!(string|Uint8Array)}
 */
proto.apollo.v2x.obu.ObuTrafficLight.prototype.getHdmapJunctionId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes hdmap_junction_id = 4;
 * This is a type-conversion wrapper around `getHdmapJunctionId()`
 * @return {string}
 */
proto.apollo.v2x.obu.ObuTrafficLight.prototype.getHdmapJunctionId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHdmapJunctionId()));
};


/**
 * optional bytes hdmap_junction_id = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHdmapJunctionId()`
 * @return {!Uint8Array}
 */
proto.apollo.v2x.obu.ObuTrafficLight.prototype.getHdmapJunctionId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHdmapJunctionId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.apollo.v2x.obu.ObuTrafficLight} returns this
 */
proto.apollo.v2x.obu.ObuTrafficLight.prototype.setHdmapJunctionId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.v2x.obu.ObuTrafficLight} returns this
 */
proto.apollo.v2x.obu.ObuTrafficLight.prototype.clearHdmapJunctionId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.v2x.obu.ObuTrafficLight.prototype.hasHdmapJunctionId = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.apollo.v2x.obu);
