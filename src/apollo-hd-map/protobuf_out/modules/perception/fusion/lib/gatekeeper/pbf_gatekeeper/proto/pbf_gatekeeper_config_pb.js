// source: modules/perception/fusion/lib/gatekeeper/pbf_gatekeeper/proto/pbf_gatekeeper_config.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.apollo.perception.fusion.PbfGatekeeperConfig', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.perception.fusion.PbfGatekeeperConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.perception.fusion.PbfGatekeeperConfig.displayName = 'proto.apollo.perception.fusion.PbfGatekeeperConfig';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.perception.fusion.PbfGatekeeperConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.perception.fusion.PbfGatekeeperConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    publishIfHasLidar: jspb.Message.getBooleanFieldWithDefault(msg, 1, true),
    publishIfHasRadar: jspb.Message.getBooleanFieldWithDefault(msg, 2, true),
    publishIfHasCamera: jspb.Message.getBooleanFieldWithDefault(msg, 3, true),
    useCamera3d: jspb.Message.getBooleanFieldWithDefault(msg, 4, true),
    minRadarConfidentDistance: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    maxRadarConfidentAngle: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    minCameraPublishDistance: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    invisiblePeriodThreshold: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    toicThreshold: (f = jspb.Message.getOptionalFloatingPointField(msg, 9)) == null ? undefined : f,
    useTrackTimePubStrategy: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f,
    pubTrackTimeThresh: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    existenceThreshold: (f = jspb.Message.getOptionalFloatingPointField(msg, 12)) == null ? undefined : f,
    radarExistenceThreshold: (f = jspb.Message.getOptionalFloatingPointField(msg, 13)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of PbfGatekeeperConfig as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.publishIfHasLidar;

  /** @type {?|undefined} */
  this.publishIfHasRadar;

  /** @type {?|undefined} */
  this.publishIfHasCamera;

  /** @type {?|undefined} */
  this.useCamera3d;

  /** @type {?|undefined} */
  this.minRadarConfidentDistance;

  /** @type {?|undefined} */
  this.maxRadarConfidentAngle;

  /** @type {?|undefined} */
  this.minCameraPublishDistance;

  /** @type {?|undefined} */
  this.invisiblePeriodThreshold;

  /** @type {?|undefined} */
  this.toicThreshold;

  /** @type {?|undefined} */
  this.useTrackTimePubStrategy;

  /** @type {?|undefined} */
  this.pubTrackTimeThresh;

  /** @type {?|undefined} */
  this.existenceThreshold;

  /** @type {?|undefined} */
  this.radarExistenceThreshold;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.perception.fusion.PbfGatekeeperConfig.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.fromObject = function(obj) {
  var msg = new proto.apollo.perception.fusion.PbfGatekeeperConfig();
  obj.publishIfHasLidar != null && jspb.Message.setField(msg, 1, obj.publishIfHasLidar);
  obj.publishIfHasRadar != null && jspb.Message.setField(msg, 2, obj.publishIfHasRadar);
  obj.publishIfHasCamera != null && jspb.Message.setField(msg, 3, obj.publishIfHasCamera);
  obj.useCamera3d != null && jspb.Message.setField(msg, 4, obj.useCamera3d);
  obj.minRadarConfidentDistance != null && jspb.Message.setField(msg, 5, obj.minRadarConfidentDistance);
  obj.maxRadarConfidentAngle != null && jspb.Message.setField(msg, 6, obj.maxRadarConfidentAngle);
  obj.minCameraPublishDistance != null && jspb.Message.setField(msg, 7, obj.minCameraPublishDistance);
  obj.invisiblePeriodThreshold != null && jspb.Message.setField(msg, 8, obj.invisiblePeriodThreshold);
  obj.toicThreshold != null && jspb.Message.setField(msg, 9, obj.toicThreshold);
  obj.useTrackTimePubStrategy != null && jspb.Message.setField(msg, 10, obj.useTrackTimePubStrategy);
  obj.pubTrackTimeThresh != null && jspb.Message.setField(msg, 11, obj.pubTrackTimeThresh);
  obj.existenceThreshold != null && jspb.Message.setField(msg, 12, obj.existenceThreshold);
  obj.radarExistenceThreshold != null && jspb.Message.setField(msg, 13, obj.radarExistenceThreshold);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.perception.fusion.PbfGatekeeperConfig;
  return proto.apollo.perception.fusion.PbfGatekeeperConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.perception.fusion.PbfGatekeeperConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPublishIfHasLidar(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPublishIfHasRadar(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPublishIfHasCamera(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseCamera3d(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinRadarConfidentDistance(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxRadarConfidentAngle(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinCameraPublishDistance(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setInvisiblePeriodThreshold(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setToicThreshold(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseTrackTimePubStrategy(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPubTrackTimeThresh(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setExistenceThreshold(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRadarExistenceThreshold(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.perception.fusion.PbfGatekeeperConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.perception.fusion.PbfGatekeeperConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeDouble(
      13,
      f
    );
  }
};


/**
 * optional bool publish_if_has_lidar = 1;
 * @return {boolean}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.getPublishIfHasLidar = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, true));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.setPublishIfHasLidar = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.clearPublishIfHasLidar = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.hasPublishIfHasLidar = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool publish_if_has_radar = 2;
 * @return {boolean}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.getPublishIfHasRadar = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, true));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.setPublishIfHasRadar = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.clearPublishIfHasRadar = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.hasPublishIfHasRadar = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool publish_if_has_camera = 3;
 * @return {boolean}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.getPublishIfHasCamera = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, true));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.setPublishIfHasCamera = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.clearPublishIfHasCamera = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.hasPublishIfHasCamera = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool use_camera_3d = 4;
 * @return {boolean}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.getUseCamera3d = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, true));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.setUseCamera3d = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.clearUseCamera3d = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.hasUseCamera3d = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double min_radar_confident_distance = 5;
 * @return {number}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.getMinRadarConfidentDistance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.setMinRadarConfidentDistance = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.clearMinRadarConfidentDistance = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.hasMinRadarConfidentDistance = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double max_radar_confident_angle = 6;
 * @return {number}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.getMaxRadarConfidentAngle = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.setMaxRadarConfidentAngle = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.clearMaxRadarConfidentAngle = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.hasMaxRadarConfidentAngle = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double min_camera_publish_distance = 7;
 * @return {number}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.getMinCameraPublishDistance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.setMinCameraPublishDistance = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.clearMinCameraPublishDistance = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.hasMinCameraPublishDistance = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double invisible_period_threshold = 8;
 * @return {number}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.getInvisiblePeriodThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.setInvisiblePeriodThreshold = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.clearInvisiblePeriodThreshold = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.hasInvisiblePeriodThreshold = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double toic_threshold = 9;
 * @return {number}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.getToicThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.setToicThreshold = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.clearToicThreshold = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.hasToicThreshold = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool use_track_time_pub_strategy = 10;
 * @return {boolean}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.getUseTrackTimePubStrategy = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.setUseTrackTimePubStrategy = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.clearUseTrackTimePubStrategy = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.hasUseTrackTimePubStrategy = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int32 pub_track_time_thresh = 11;
 * @return {number}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.getPubTrackTimeThresh = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.setPubTrackTimeThresh = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.clearPubTrackTimeThresh = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.hasPubTrackTimeThresh = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional double existence_threshold = 12;
 * @return {number}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.getExistenceThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.setExistenceThreshold = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.clearExistenceThreshold = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.hasExistenceThreshold = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional double radar_existence_threshold = 13;
 * @return {number}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.getRadarExistenceThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.setRadarExistenceThreshold = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.fusion.PbfGatekeeperConfig} returns this
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.clearRadarExistenceThreshold = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.fusion.PbfGatekeeperConfig.prototype.hasRadarExistenceThreshold = function() {
  return jspb.Message.getField(this, 13) != null;
};


goog.object.extend(exports, proto.apollo.perception.fusion);
