// source: cyber/proto/component_conf.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var cyber_proto_qos_profile_pb = require('../../cyber/proto/qos_profile_pb.js');
goog.object.extend(proto, cyber_proto_qos_profile_pb);
goog.exportSymbol('proto.apollo.cyber.proto.ComponentConfig', null, global);
goog.exportSymbol('proto.apollo.cyber.proto.ReaderOption', null, global);
goog.exportSymbol('proto.apollo.cyber.proto.TimerComponentConfig', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.cyber.proto.ReaderOption = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.cyber.proto.ReaderOption, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.cyber.proto.ReaderOption.displayName = 'proto.apollo.cyber.proto.ReaderOption';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.cyber.proto.ComponentConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.cyber.proto.ComponentConfig.repeatedFields_, null);
};
goog.inherits(proto.apollo.cyber.proto.ComponentConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.cyber.proto.ComponentConfig.displayName = 'proto.apollo.cyber.proto.ComponentConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.cyber.proto.TimerComponentConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.cyber.proto.TimerComponentConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.cyber.proto.TimerComponentConfig.displayName = 'proto.apollo.cyber.proto.TimerComponentConfig';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.cyber.proto.ReaderOption.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.cyber.proto.ReaderOption.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.cyber.proto.ReaderOption} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.cyber.proto.ReaderOption.toObject = function(includeInstance, msg) {
  var f, obj = {
    channel: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    qosProfile: (f = msg.getQosProfile()) && cyber_proto_qos_profile_pb.QosProfile.toObject(includeInstance, f),
    pendingQueueSize: jspb.Message.getFieldWithDefault(msg, 3, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ReaderOption as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.cyber.proto.ReaderOption.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.channel;

  /** @type {?|undefined} */
  this.qosProfile;

  /** @type {?|undefined} */
  this.pendingQueueSize;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.cyber.proto.ReaderOption.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.cyber.proto.ReaderOption}
 */
proto.apollo.cyber.proto.ReaderOption.fromObject = function(obj) {
  var msg = new proto.apollo.cyber.proto.ReaderOption();
  obj.channel != null && jspb.Message.setField(msg, 1, obj.channel);
  obj.qosProfile && jspb.Message.setWrapperField(
      msg, 2, cyber_proto_qos_profile_pb.QosProfile.fromObject(obj.qosProfile));
  obj.pendingQueueSize != null && jspb.Message.setField(msg, 3, obj.pendingQueueSize);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.cyber.proto.ReaderOption}
 */
proto.apollo.cyber.proto.ReaderOption.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.cyber.proto.ReaderOption;
  return proto.apollo.cyber.proto.ReaderOption.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.cyber.proto.ReaderOption} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.cyber.proto.ReaderOption}
 */
proto.apollo.cyber.proto.ReaderOption.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 2:
      var value = new cyber_proto_qos_profile_pb.QosProfile;
      reader.readMessage(value,cyber_proto_qos_profile_pb.QosProfile.deserializeBinaryFromReader);
      msg.setQosProfile(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPendingQueueSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.cyber.proto.ReaderOption.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.cyber.proto.ReaderOption.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.cyber.proto.ReaderOption} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.cyber.proto.ReaderOption.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQosProfile();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cyber_proto_qos_profile_pb.QosProfile.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional string channel = 1;
 * @return {string}
 */
proto.apollo.cyber.proto.ReaderOption.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.cyber.proto.ReaderOption} returns this
 */
proto.apollo.cyber.proto.ReaderOption.prototype.setChannel = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.ReaderOption} returns this
 */
proto.apollo.cyber.proto.ReaderOption.prototype.clearChannel = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.ReaderOption.prototype.hasChannel = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional QosProfile qos_profile = 2;
 * @return {?proto.apollo.cyber.proto.QosProfile}
 */
proto.apollo.cyber.proto.ReaderOption.prototype.getQosProfile = function() {
  return /** @type{?proto.apollo.cyber.proto.QosProfile} */ (
    jspb.Message.getWrapperField(this, cyber_proto_qos_profile_pb.QosProfile, 2));
};


/**
 * @param {?proto.apollo.cyber.proto.QosProfile|undefined} value
 * @return {!proto.apollo.cyber.proto.ReaderOption} returns this
*/
proto.apollo.cyber.proto.ReaderOption.prototype.setQosProfile = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.cyber.proto.ReaderOption} returns this
 */
proto.apollo.cyber.proto.ReaderOption.prototype.clearQosProfile = function() {
  return this.setQosProfile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.ReaderOption.prototype.hasQosProfile = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 pending_queue_size = 3;
 * @return {number}
 */
proto.apollo.cyber.proto.ReaderOption.prototype.getPendingQueueSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 1));
};


/**
 * @param {number} value
 * @return {!proto.apollo.cyber.proto.ReaderOption} returns this
 */
proto.apollo.cyber.proto.ReaderOption.prototype.setPendingQueueSize = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.ReaderOption} returns this
 */
proto.apollo.cyber.proto.ReaderOption.prototype.clearPendingQueueSize = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.ReaderOption.prototype.hasPendingQueueSize = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.cyber.proto.ComponentConfig.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.cyber.proto.ComponentConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.cyber.proto.ComponentConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.cyber.proto.ComponentConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.cyber.proto.ComponentConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    configFilePath: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    flagFilePath: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    readersList: jspb.Message.toObjectList(msg.getReadersList(),
    proto.apollo.cyber.proto.ReaderOption.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ComponentConfig as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.cyber.proto.ComponentConfig.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.name;

  /** @type {?|undefined} */
  this.configFilePath;

  /** @type {?|undefined} */
  this.flagFilePath;

  /** @type {?|undefined} */
  this.readersList;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.cyber.proto.ComponentConfig.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.cyber.proto.ComponentConfig}
 */
proto.apollo.cyber.proto.ComponentConfig.fromObject = function(obj) {
  var msg = new proto.apollo.cyber.proto.ComponentConfig();
  obj.name != null && jspb.Message.setField(msg, 1, obj.name);
  obj.configFilePath != null && jspb.Message.setField(msg, 2, obj.configFilePath);
  obj.flagFilePath != null && jspb.Message.setField(msg, 3, obj.flagFilePath);
  obj.readersList && jspb.Message.setRepeatedWrapperField(
      msg, 4, obj.readersList.map(
          proto.apollo.cyber.proto.ReaderOption.fromObject));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.cyber.proto.ComponentConfig}
 */
proto.apollo.cyber.proto.ComponentConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.cyber.proto.ComponentConfig;
  return proto.apollo.cyber.proto.ComponentConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.cyber.proto.ComponentConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.cyber.proto.ComponentConfig}
 */
proto.apollo.cyber.proto.ComponentConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfigFilePath(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFlagFilePath(value);
      break;
    case 4:
      var value = new proto.apollo.cyber.proto.ReaderOption;
      reader.readMessage(value,proto.apollo.cyber.proto.ReaderOption.deserializeBinaryFromReader);
      msg.addReaders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.cyber.proto.ComponentConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.cyber.proto.ComponentConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.cyber.proto.ComponentConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.cyber.proto.ComponentConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getReadersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.apollo.cyber.proto.ReaderOption.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.apollo.cyber.proto.ComponentConfig.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.cyber.proto.ComponentConfig} returns this
 */
proto.apollo.cyber.proto.ComponentConfig.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.ComponentConfig} returns this
 */
proto.apollo.cyber.proto.ComponentConfig.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.ComponentConfig.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string config_file_path = 2;
 * @return {string}
 */
proto.apollo.cyber.proto.ComponentConfig.prototype.getConfigFilePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.cyber.proto.ComponentConfig} returns this
 */
proto.apollo.cyber.proto.ComponentConfig.prototype.setConfigFilePath = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.ComponentConfig} returns this
 */
proto.apollo.cyber.proto.ComponentConfig.prototype.clearConfigFilePath = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.ComponentConfig.prototype.hasConfigFilePath = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string flag_file_path = 3;
 * @return {string}
 */
proto.apollo.cyber.proto.ComponentConfig.prototype.getFlagFilePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.cyber.proto.ComponentConfig} returns this
 */
proto.apollo.cyber.proto.ComponentConfig.prototype.setFlagFilePath = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.ComponentConfig} returns this
 */
proto.apollo.cyber.proto.ComponentConfig.prototype.clearFlagFilePath = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.ComponentConfig.prototype.hasFlagFilePath = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated ReaderOption readers = 4;
 * @return {!Array<!proto.apollo.cyber.proto.ReaderOption>}
 */
proto.apollo.cyber.proto.ComponentConfig.prototype.getReadersList = function() {
  return /** @type{!Array<!proto.apollo.cyber.proto.ReaderOption>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.cyber.proto.ReaderOption, 4));
};


/**
 * @param {!Array<!proto.apollo.cyber.proto.ReaderOption>} value
 * @return {!proto.apollo.cyber.proto.ComponentConfig} returns this
*/
proto.apollo.cyber.proto.ComponentConfig.prototype.setReadersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.apollo.cyber.proto.ReaderOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.cyber.proto.ReaderOption}
 */
proto.apollo.cyber.proto.ComponentConfig.prototype.addReaders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.apollo.cyber.proto.ReaderOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.cyber.proto.ComponentConfig} returns this
 */
proto.apollo.cyber.proto.ComponentConfig.prototype.clearReadersList = function() {
  return this.setReadersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.cyber.proto.TimerComponentConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.cyber.proto.TimerComponentConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.cyber.proto.TimerComponentConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.cyber.proto.TimerComponentConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    configFilePath: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    flagFilePath: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    interval: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of TimerComponentConfig as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.cyber.proto.TimerComponentConfig.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.name;

  /** @type {?|undefined} */
  this.configFilePath;

  /** @type {?|undefined} */
  this.flagFilePath;

  /** @type {?|undefined} */
  this.interval;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.cyber.proto.TimerComponentConfig.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.cyber.proto.TimerComponentConfig}
 */
proto.apollo.cyber.proto.TimerComponentConfig.fromObject = function(obj) {
  var msg = new proto.apollo.cyber.proto.TimerComponentConfig();
  obj.name != null && jspb.Message.setField(msg, 1, obj.name);
  obj.configFilePath != null && jspb.Message.setField(msg, 2, obj.configFilePath);
  obj.flagFilePath != null && jspb.Message.setField(msg, 3, obj.flagFilePath);
  obj.interval != null && jspb.Message.setField(msg, 4, obj.interval);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.cyber.proto.TimerComponentConfig}
 */
proto.apollo.cyber.proto.TimerComponentConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.cyber.proto.TimerComponentConfig;
  return proto.apollo.cyber.proto.TimerComponentConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.cyber.proto.TimerComponentConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.cyber.proto.TimerComponentConfig}
 */
proto.apollo.cyber.proto.TimerComponentConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfigFilePath(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFlagFilePath(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInterval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.cyber.proto.TimerComponentConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.cyber.proto.TimerComponentConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.cyber.proto.TimerComponentConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.cyber.proto.TimerComponentConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.apollo.cyber.proto.TimerComponentConfig.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.cyber.proto.TimerComponentConfig} returns this
 */
proto.apollo.cyber.proto.TimerComponentConfig.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.TimerComponentConfig} returns this
 */
proto.apollo.cyber.proto.TimerComponentConfig.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.TimerComponentConfig.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string config_file_path = 2;
 * @return {string}
 */
proto.apollo.cyber.proto.TimerComponentConfig.prototype.getConfigFilePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.cyber.proto.TimerComponentConfig} returns this
 */
proto.apollo.cyber.proto.TimerComponentConfig.prototype.setConfigFilePath = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.TimerComponentConfig} returns this
 */
proto.apollo.cyber.proto.TimerComponentConfig.prototype.clearConfigFilePath = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.TimerComponentConfig.prototype.hasConfigFilePath = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string flag_file_path = 3;
 * @return {string}
 */
proto.apollo.cyber.proto.TimerComponentConfig.prototype.getFlagFilePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.cyber.proto.TimerComponentConfig} returns this
 */
proto.apollo.cyber.proto.TimerComponentConfig.prototype.setFlagFilePath = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.TimerComponentConfig} returns this
 */
proto.apollo.cyber.proto.TimerComponentConfig.prototype.clearFlagFilePath = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.TimerComponentConfig.prototype.hasFlagFilePath = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 interval = 4;
 * @return {number}
 */
proto.apollo.cyber.proto.TimerComponentConfig.prototype.getInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.cyber.proto.TimerComponentConfig} returns this
 */
proto.apollo.cyber.proto.TimerComponentConfig.prototype.setInterval = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.cyber.proto.TimerComponentConfig} returns this
 */
proto.apollo.cyber.proto.TimerComponentConfig.prototype.clearInterval = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.cyber.proto.TimerComponentConfig.prototype.hasInterval = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.apollo.cyber.proto);
