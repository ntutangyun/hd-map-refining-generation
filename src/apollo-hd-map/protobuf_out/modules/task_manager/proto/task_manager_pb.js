// source: modules/task_manager/proto/task_manager.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var modules_common_proto_header_pb = require('../../../modules/common/proto/header_pb.js');
goog.object.extend(proto, modules_common_proto_header_pb);
var modules_routing_proto_routing_pb = require('../../../modules/routing/proto/routing_pb.js');
goog.object.extend(proto, modules_routing_proto_routing_pb);
var modules_map_proto_map_parking_space_pb = require('../../../modules/map/proto/map_parking_space_pb.js');
goog.object.extend(proto, modules_map_proto_map_parking_space_pb);
goog.exportSymbol('proto.apollo.task_manager.CycleRoutingTask', null, global);
goog.exportSymbol('proto.apollo.task_manager.DeadEndRoutingTask', null, global);
goog.exportSymbol('proto.apollo.task_manager.JunctionType', null, global);
goog.exportSymbol('proto.apollo.task_manager.ParkingRoutingTask', null, global);
goog.exportSymbol('proto.apollo.task_manager.Task', null, global);
goog.exportSymbol('proto.apollo.task_manager.Task.RoutingTaskCase', null, global);
goog.exportSymbol('proto.apollo.task_manager.TaskType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.task_manager.CycleRoutingTask = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.task_manager.CycleRoutingTask, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.task_manager.CycleRoutingTask.displayName = 'proto.apollo.task_manager.CycleRoutingTask';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.task_manager.ParkingRoutingTask = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.task_manager.ParkingRoutingTask, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.task_manager.ParkingRoutingTask.displayName = 'proto.apollo.task_manager.ParkingRoutingTask';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.task_manager.DeadEndRoutingTask = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.task_manager.DeadEndRoutingTask, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.task_manager.DeadEndRoutingTask.displayName = 'proto.apollo.task_manager.DeadEndRoutingTask';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.task_manager.Task = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.apollo.task_manager.Task.oneofGroups_);
};
goog.inherits(proto.apollo.task_manager.Task, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.task_manager.Task.displayName = 'proto.apollo.task_manager.Task';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.task_manager.CycleRoutingTask.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.task_manager.CycleRoutingTask.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.task_manager.CycleRoutingTask} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.task_manager.CycleRoutingTask.toObject = function(includeInstance, msg) {
  var f, obj = {
    cycleNum: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    routingRequest: (f = msg.getRoutingRequest()) && modules_routing_proto_routing_pb.RoutingRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of CycleRoutingTask as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.task_manager.CycleRoutingTask.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.cycleNum;

  /** @type {?|undefined} */
  this.routingRequest;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.task_manager.CycleRoutingTask.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.task_manager.CycleRoutingTask}
 */
proto.apollo.task_manager.CycleRoutingTask.fromObject = function(obj) {
  var msg = new proto.apollo.task_manager.CycleRoutingTask();
  obj.cycleNum != null && jspb.Message.setField(msg, 1, obj.cycleNum);
  obj.routingRequest && jspb.Message.setWrapperField(
      msg, 2, modules_routing_proto_routing_pb.RoutingRequest.fromObject(obj.routingRequest));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.task_manager.CycleRoutingTask}
 */
proto.apollo.task_manager.CycleRoutingTask.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.task_manager.CycleRoutingTask;
  return proto.apollo.task_manager.CycleRoutingTask.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.task_manager.CycleRoutingTask} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.task_manager.CycleRoutingTask}
 */
proto.apollo.task_manager.CycleRoutingTask.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCycleNum(value);
      break;
    case 2:
      var value = new modules_routing_proto_routing_pb.RoutingRequest;
      reader.readMessage(value,modules_routing_proto_routing_pb.RoutingRequest.deserializeBinaryFromReader);
      msg.setRoutingRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.task_manager.CycleRoutingTask.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.task_manager.CycleRoutingTask.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.task_manager.CycleRoutingTask} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.task_manager.CycleRoutingTask.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getRoutingRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      modules_routing_proto_routing_pb.RoutingRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 cycle_num = 1;
 * @return {number}
 */
proto.apollo.task_manager.CycleRoutingTask.prototype.getCycleNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.task_manager.CycleRoutingTask} returns this
 */
proto.apollo.task_manager.CycleRoutingTask.prototype.setCycleNum = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.task_manager.CycleRoutingTask} returns this
 */
proto.apollo.task_manager.CycleRoutingTask.prototype.clearCycleNum = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.task_manager.CycleRoutingTask.prototype.hasCycleNum = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional apollo.routing.RoutingRequest routing_request = 2;
 * @return {?proto.apollo.routing.RoutingRequest}
 */
proto.apollo.task_manager.CycleRoutingTask.prototype.getRoutingRequest = function() {
  return /** @type{?proto.apollo.routing.RoutingRequest} */ (
    jspb.Message.getWrapperField(this, modules_routing_proto_routing_pb.RoutingRequest, 2));
};


/**
 * @param {?proto.apollo.routing.RoutingRequest|undefined} value
 * @return {!proto.apollo.task_manager.CycleRoutingTask} returns this
*/
proto.apollo.task_manager.CycleRoutingTask.prototype.setRoutingRequest = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.task_manager.CycleRoutingTask} returns this
 */
proto.apollo.task_manager.CycleRoutingTask.prototype.clearRoutingRequest = function() {
  return this.setRoutingRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.task_manager.CycleRoutingTask.prototype.hasRoutingRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.task_manager.ParkingRoutingTask.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.task_manager.ParkingRoutingTask.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.task_manager.ParkingRoutingTask} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.task_manager.ParkingRoutingTask.toObject = function(includeInstance, msg) {
  var f, obj = {
    laneWidth: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    routingRequest: (f = msg.getRoutingRequest()) && modules_routing_proto_routing_pb.RoutingRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ParkingRoutingTask as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.task_manager.ParkingRoutingTask.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.laneWidth;

  /** @type {?|undefined} */
  this.routingRequest;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.task_manager.ParkingRoutingTask.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.task_manager.ParkingRoutingTask}
 */
proto.apollo.task_manager.ParkingRoutingTask.fromObject = function(obj) {
  var msg = new proto.apollo.task_manager.ParkingRoutingTask();
  obj.laneWidth != null && jspb.Message.setField(msg, 1, obj.laneWidth);
  obj.routingRequest && jspb.Message.setWrapperField(
      msg, 2, modules_routing_proto_routing_pb.RoutingRequest.fromObject(obj.routingRequest));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.task_manager.ParkingRoutingTask}
 */
proto.apollo.task_manager.ParkingRoutingTask.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.task_manager.ParkingRoutingTask;
  return proto.apollo.task_manager.ParkingRoutingTask.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.task_manager.ParkingRoutingTask} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.task_manager.ParkingRoutingTask}
 */
proto.apollo.task_manager.ParkingRoutingTask.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLaneWidth(value);
      break;
    case 2:
      var value = new modules_routing_proto_routing_pb.RoutingRequest;
      reader.readMessage(value,modules_routing_proto_routing_pb.RoutingRequest.deserializeBinaryFromReader);
      msg.setRoutingRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.task_manager.ParkingRoutingTask.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.task_manager.ParkingRoutingTask.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.task_manager.ParkingRoutingTask} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.task_manager.ParkingRoutingTask.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getRoutingRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      modules_routing_proto_routing_pb.RoutingRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional double lane_width = 1;
 * @return {number}
 */
proto.apollo.task_manager.ParkingRoutingTask.prototype.getLaneWidth = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.task_manager.ParkingRoutingTask} returns this
 */
proto.apollo.task_manager.ParkingRoutingTask.prototype.setLaneWidth = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.task_manager.ParkingRoutingTask} returns this
 */
proto.apollo.task_manager.ParkingRoutingTask.prototype.clearLaneWidth = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.task_manager.ParkingRoutingTask.prototype.hasLaneWidth = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional apollo.routing.RoutingRequest routing_request = 2;
 * @return {?proto.apollo.routing.RoutingRequest}
 */
proto.apollo.task_manager.ParkingRoutingTask.prototype.getRoutingRequest = function() {
  return /** @type{?proto.apollo.routing.RoutingRequest} */ (
    jspb.Message.getWrapperField(this, modules_routing_proto_routing_pb.RoutingRequest, 2));
};


/**
 * @param {?proto.apollo.routing.RoutingRequest|undefined} value
 * @return {!proto.apollo.task_manager.ParkingRoutingTask} returns this
*/
proto.apollo.task_manager.ParkingRoutingTask.prototype.setRoutingRequest = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.task_manager.ParkingRoutingTask} returns this
 */
proto.apollo.task_manager.ParkingRoutingTask.prototype.clearRoutingRequest = function() {
  return this.setRoutingRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.task_manager.ParkingRoutingTask.prototype.hasRoutingRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.task_manager.DeadEndRoutingTask.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.task_manager.DeadEndRoutingTask.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.task_manager.DeadEndRoutingTask} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.task_manager.DeadEndRoutingTask.toObject = function(includeInstance, msg) {
  var f, obj = {
    routingRequestIn: (f = msg.getRoutingRequestIn()) && modules_routing_proto_routing_pb.RoutingRequest.toObject(includeInstance, f),
    routingRequestOut: (f = msg.getRoutingRequestOut()) && modules_routing_proto_routing_pb.RoutingRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of DeadEndRoutingTask as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.task_manager.DeadEndRoutingTask.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.routingRequestIn;

  /** @type {?|undefined} */
  this.routingRequestOut;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.task_manager.DeadEndRoutingTask.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.task_manager.DeadEndRoutingTask}
 */
proto.apollo.task_manager.DeadEndRoutingTask.fromObject = function(obj) {
  var msg = new proto.apollo.task_manager.DeadEndRoutingTask();
  obj.routingRequestIn && jspb.Message.setWrapperField(
      msg, 2, modules_routing_proto_routing_pb.RoutingRequest.fromObject(obj.routingRequestIn));
  obj.routingRequestOut && jspb.Message.setWrapperField(
      msg, 3, modules_routing_proto_routing_pb.RoutingRequest.fromObject(obj.routingRequestOut));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.task_manager.DeadEndRoutingTask}
 */
proto.apollo.task_manager.DeadEndRoutingTask.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.task_manager.DeadEndRoutingTask;
  return proto.apollo.task_manager.DeadEndRoutingTask.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.task_manager.DeadEndRoutingTask} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.task_manager.DeadEndRoutingTask}
 */
proto.apollo.task_manager.DeadEndRoutingTask.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new modules_routing_proto_routing_pb.RoutingRequest;
      reader.readMessage(value,modules_routing_proto_routing_pb.RoutingRequest.deserializeBinaryFromReader);
      msg.setRoutingRequestIn(value);
      break;
    case 3:
      var value = new modules_routing_proto_routing_pb.RoutingRequest;
      reader.readMessage(value,modules_routing_proto_routing_pb.RoutingRequest.deserializeBinaryFromReader);
      msg.setRoutingRequestOut(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.task_manager.DeadEndRoutingTask.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.task_manager.DeadEndRoutingTask.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.task_manager.DeadEndRoutingTask} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.task_manager.DeadEndRoutingTask.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoutingRequestIn();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      modules_routing_proto_routing_pb.RoutingRequest.serializeBinaryToWriter
    );
  }
  f = message.getRoutingRequestOut();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      modules_routing_proto_routing_pb.RoutingRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional apollo.routing.RoutingRequest routing_request_in = 2;
 * @return {?proto.apollo.routing.RoutingRequest}
 */
proto.apollo.task_manager.DeadEndRoutingTask.prototype.getRoutingRequestIn = function() {
  return /** @type{?proto.apollo.routing.RoutingRequest} */ (
    jspb.Message.getWrapperField(this, modules_routing_proto_routing_pb.RoutingRequest, 2));
};


/**
 * @param {?proto.apollo.routing.RoutingRequest|undefined} value
 * @return {!proto.apollo.task_manager.DeadEndRoutingTask} returns this
*/
proto.apollo.task_manager.DeadEndRoutingTask.prototype.setRoutingRequestIn = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.task_manager.DeadEndRoutingTask} returns this
 */
proto.apollo.task_manager.DeadEndRoutingTask.prototype.clearRoutingRequestIn = function() {
  return this.setRoutingRequestIn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.task_manager.DeadEndRoutingTask.prototype.hasRoutingRequestIn = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional apollo.routing.RoutingRequest routing_request_out = 3;
 * @return {?proto.apollo.routing.RoutingRequest}
 */
proto.apollo.task_manager.DeadEndRoutingTask.prototype.getRoutingRequestOut = function() {
  return /** @type{?proto.apollo.routing.RoutingRequest} */ (
    jspb.Message.getWrapperField(this, modules_routing_proto_routing_pb.RoutingRequest, 3));
};


/**
 * @param {?proto.apollo.routing.RoutingRequest|undefined} value
 * @return {!proto.apollo.task_manager.DeadEndRoutingTask} returns this
*/
proto.apollo.task_manager.DeadEndRoutingTask.prototype.setRoutingRequestOut = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.task_manager.DeadEndRoutingTask} returns this
 */
proto.apollo.task_manager.DeadEndRoutingTask.prototype.clearRoutingRequestOut = function() {
  return this.setRoutingRequestOut(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.task_manager.DeadEndRoutingTask.prototype.hasRoutingRequestOut = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.apollo.task_manager.Task.oneofGroups_ = [[4,5,6]];

/**
 * @enum {number}
 */
proto.apollo.task_manager.Task.RoutingTaskCase = {
  ROUTING_TASK_NOT_SET: 0,
  CYCLE_ROUTING_TASK: 4,
  PARKING_ROUTING_TASK: 5,
  DEAD_END_ROUTING_TASK: 6
};

/**
 * @return {proto.apollo.task_manager.Task.RoutingTaskCase}
 */
proto.apollo.task_manager.Task.prototype.getRoutingTaskCase = function() {
  return /** @type {proto.apollo.task_manager.Task.RoutingTaskCase} */(jspb.Message.computeOneofCase(this, proto.apollo.task_manager.Task.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.task_manager.Task.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.task_manager.Task.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.task_manager.Task} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.task_manager.Task.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && modules_common_proto_header_pb.Header.toObject(includeInstance, f),
    taskName: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    taskType: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    cycleRoutingTask: (f = msg.getCycleRoutingTask()) && proto.apollo.task_manager.CycleRoutingTask.toObject(includeInstance, f),
    parkingRoutingTask: (f = msg.getParkingRoutingTask()) && proto.apollo.task_manager.ParkingRoutingTask.toObject(includeInstance, f),
    deadEndRoutingTask: (f = msg.getDeadEndRoutingTask()) && proto.apollo.task_manager.DeadEndRoutingTask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Task as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.task_manager.Task.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.header;

  /** @type {?|undefined} */
  this.taskName;

  /** @type {?|undefined} */
  this.taskType;

  /** @type {?|undefined} */
  this.cycleRoutingTask;

  /** @type {?|undefined} */
  this.parkingRoutingTask;

  /** @type {?|undefined} */
  this.deadEndRoutingTask;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.task_manager.Task.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.task_manager.Task}
 */
proto.apollo.task_manager.Task.fromObject = function(obj) {
  var msg = new proto.apollo.task_manager.Task();
  obj.header && jspb.Message.setWrapperField(
      msg, 1, modules_common_proto_header_pb.Header.fromObject(obj.header));
  obj.taskName != null && jspb.Message.setField(msg, 2, obj.taskName);
  obj.taskType != null && jspb.Message.setField(msg, 3, obj.taskType);
  obj.cycleRoutingTask && jspb.Message.setWrapperField(
      msg, 4, proto.apollo.task_manager.CycleRoutingTask.fromObject(obj.cycleRoutingTask));
  obj.parkingRoutingTask && jspb.Message.setWrapperField(
      msg, 5, proto.apollo.task_manager.ParkingRoutingTask.fromObject(obj.parkingRoutingTask));
  obj.deadEndRoutingTask && jspb.Message.setWrapperField(
      msg, 6, proto.apollo.task_manager.DeadEndRoutingTask.fromObject(obj.deadEndRoutingTask));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.task_manager.Task}
 */
proto.apollo.task_manager.Task.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.task_manager.Task;
  return proto.apollo.task_manager.Task.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.task_manager.Task} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.task_manager.Task}
 */
proto.apollo.task_manager.Task.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modules_common_proto_header_pb.Header;
      reader.readMessage(value,modules_common_proto_header_pb.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskName(value);
      break;
    case 3:
      var value = /** @type {!proto.apollo.task_manager.TaskType} */ (reader.readEnum());
      msg.setTaskType(value);
      break;
    case 4:
      var value = new proto.apollo.task_manager.CycleRoutingTask;
      reader.readMessage(value,proto.apollo.task_manager.CycleRoutingTask.deserializeBinaryFromReader);
      msg.setCycleRoutingTask(value);
      break;
    case 5:
      var value = new proto.apollo.task_manager.ParkingRoutingTask;
      reader.readMessage(value,proto.apollo.task_manager.ParkingRoutingTask.deserializeBinaryFromReader);
      msg.setParkingRoutingTask(value);
      break;
    case 6:
      var value = new proto.apollo.task_manager.DeadEndRoutingTask;
      reader.readMessage(value,proto.apollo.task_manager.DeadEndRoutingTask.deserializeBinaryFromReader);
      msg.setDeadEndRoutingTask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.task_manager.Task.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.task_manager.Task.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.task_manager.Task} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.task_manager.Task.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modules_common_proto_header_pb.Header.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {!proto.apollo.task_manager.TaskType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getCycleRoutingTask();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.apollo.task_manager.CycleRoutingTask.serializeBinaryToWriter
    );
  }
  f = message.getParkingRoutingTask();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.apollo.task_manager.ParkingRoutingTask.serializeBinaryToWriter
    );
  }
  f = message.getDeadEndRoutingTask();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.apollo.task_manager.DeadEndRoutingTask.serializeBinaryToWriter
    );
  }
};


/**
 * optional apollo.common.Header header = 1;
 * @return {?proto.apollo.common.Header}
 */
proto.apollo.task_manager.Task.prototype.getHeader = function() {
  return /** @type{?proto.apollo.common.Header} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_header_pb.Header, 1));
};


/**
 * @param {?proto.apollo.common.Header|undefined} value
 * @return {!proto.apollo.task_manager.Task} returns this
*/
proto.apollo.task_manager.Task.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.task_manager.Task} returns this
 */
proto.apollo.task_manager.Task.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.task_manager.Task.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string task_name = 2;
 * @return {string}
 */
proto.apollo.task_manager.Task.prototype.getTaskName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.task_manager.Task} returns this
 */
proto.apollo.task_manager.Task.prototype.setTaskName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.task_manager.Task} returns this
 */
proto.apollo.task_manager.Task.prototype.clearTaskName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.task_manager.Task.prototype.hasTaskName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TaskType task_type = 3;
 * @return {!proto.apollo.task_manager.TaskType}
 */
proto.apollo.task_manager.Task.prototype.getTaskType = function() {
  return /** @type {!proto.apollo.task_manager.TaskType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.apollo.task_manager.TaskType} value
 * @return {!proto.apollo.task_manager.Task} returns this
 */
proto.apollo.task_manager.Task.prototype.setTaskType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.task_manager.Task} returns this
 */
proto.apollo.task_manager.Task.prototype.clearTaskType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.task_manager.Task.prototype.hasTaskType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CycleRoutingTask cycle_routing_task = 4;
 * @return {?proto.apollo.task_manager.CycleRoutingTask}
 */
proto.apollo.task_manager.Task.prototype.getCycleRoutingTask = function() {
  return /** @type{?proto.apollo.task_manager.CycleRoutingTask} */ (
    jspb.Message.getWrapperField(this, proto.apollo.task_manager.CycleRoutingTask, 4));
};


/**
 * @param {?proto.apollo.task_manager.CycleRoutingTask|undefined} value
 * @return {!proto.apollo.task_manager.Task} returns this
*/
proto.apollo.task_manager.Task.prototype.setCycleRoutingTask = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.apollo.task_manager.Task.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.task_manager.Task} returns this
 */
proto.apollo.task_manager.Task.prototype.clearCycleRoutingTask = function() {
  return this.setCycleRoutingTask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.task_manager.Task.prototype.hasCycleRoutingTask = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ParkingRoutingTask parking_routing_task = 5;
 * @return {?proto.apollo.task_manager.ParkingRoutingTask}
 */
proto.apollo.task_manager.Task.prototype.getParkingRoutingTask = function() {
  return /** @type{?proto.apollo.task_manager.ParkingRoutingTask} */ (
    jspb.Message.getWrapperField(this, proto.apollo.task_manager.ParkingRoutingTask, 5));
};


/**
 * @param {?proto.apollo.task_manager.ParkingRoutingTask|undefined} value
 * @return {!proto.apollo.task_manager.Task} returns this
*/
proto.apollo.task_manager.Task.prototype.setParkingRoutingTask = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.apollo.task_manager.Task.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.task_manager.Task} returns this
 */
proto.apollo.task_manager.Task.prototype.clearParkingRoutingTask = function() {
  return this.setParkingRoutingTask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.task_manager.Task.prototype.hasParkingRoutingTask = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DeadEndRoutingTask dead_end_routing_task = 6;
 * @return {?proto.apollo.task_manager.DeadEndRoutingTask}
 */
proto.apollo.task_manager.Task.prototype.getDeadEndRoutingTask = function() {
  return /** @type{?proto.apollo.task_manager.DeadEndRoutingTask} */ (
    jspb.Message.getWrapperField(this, proto.apollo.task_manager.DeadEndRoutingTask, 6));
};


/**
 * @param {?proto.apollo.task_manager.DeadEndRoutingTask|undefined} value
 * @return {!proto.apollo.task_manager.Task} returns this
*/
proto.apollo.task_manager.Task.prototype.setDeadEndRoutingTask = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.apollo.task_manager.Task.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.task_manager.Task} returns this
 */
proto.apollo.task_manager.Task.prototype.clearDeadEndRoutingTask = function() {
  return this.setDeadEndRoutingTask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.task_manager.Task.prototype.hasDeadEndRoutingTask = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * @enum {number}
 */
proto.apollo.task_manager.TaskType = {
  CYCLE_ROUTING: 0,
  PARKING_ROUTING: 1,
  DEAD_END_ROUTING: 3
};

/**
 * @enum {number}
 */
proto.apollo.task_manager.JunctionType = {
  UNKNOWN: 0,
  IN_ROAD: 1,
  CROSS_ROAD: 2,
  FORK_ROAD: 3,
  MAIN_SIDE: 4,
  DEAD_END: 5
};

goog.object.extend(exports, proto.apollo.task_manager);
