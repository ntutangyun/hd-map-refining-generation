// source: modules/localization/proto/measure.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var modules_common_proto_header_pb = require('../../../modules/common/proto/header_pb.js');
goog.object.extend(proto, modules_common_proto_header_pb);
var modules_common_proto_geometry_pb = require('../../../modules/common/proto/geometry_pb.js');
goog.object.extend(proto, modules_common_proto_geometry_pb);
goog.exportSymbol('proto.apollo.localization.IntegMeasure', null, global);
goog.exportSymbol('proto.apollo.localization.IntegMeasure.FrameType', null, global);
goog.exportSymbol('proto.apollo.localization.IntegMeasure.MeasureType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.localization.IntegMeasure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.localization.IntegMeasure.repeatedFields_, null);
};
goog.inherits(proto.apollo.localization.IntegMeasure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.localization.IntegMeasure.displayName = 'proto.apollo.localization.IntegMeasure';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.localization.IntegMeasure.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.localization.IntegMeasure.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.localization.IntegMeasure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.localization.IntegMeasure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.localization.IntegMeasure.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && modules_common_proto_header_pb.Header.toObject(includeInstance, f),
    measureType: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    frameType: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    position: (f = msg.getPosition()) && modules_common_proto_geometry_pb.Point3D.toObject(includeInstance, f),
    velocity: (f = msg.getVelocity()) && modules_common_proto_geometry_pb.Point3D.toObject(includeInstance, f),
    yaw: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    zoneId: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    isHaveVariance: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,
    isGnssDoubleAntenna: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f,
    measureCovarList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of IntegMeasure as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.localization.IntegMeasure.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.header;

  /** @type {?|undefined} */
  this.measureType;

  /** @type {?|undefined} */
  this.frameType;

  /** @type {?|undefined} */
  this.position;

  /** @type {?|undefined} */
  this.velocity;

  /** @type {?|undefined} */
  this.yaw;

  /** @type {?|undefined} */
  this.zoneId;

  /** @type {?|undefined} */
  this.isHaveVariance;

  /** @type {?|undefined} */
  this.isGnssDoubleAntenna;

  /** @type {?|undefined} */
  this.measureCovarList;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.localization.IntegMeasure.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.localization.IntegMeasure}
 */
proto.apollo.localization.IntegMeasure.fromObject = function(obj) {
  var msg = new proto.apollo.localization.IntegMeasure();
  obj.header && jspb.Message.setWrapperField(
      msg, 1, modules_common_proto_header_pb.Header.fromObject(obj.header));
  obj.measureType != null && jspb.Message.setField(msg, 2, obj.measureType);
  obj.frameType != null && jspb.Message.setField(msg, 3, obj.frameType);
  obj.position && jspb.Message.setWrapperField(
      msg, 4, modules_common_proto_geometry_pb.Point3D.fromObject(obj.position));
  obj.velocity && jspb.Message.setWrapperField(
      msg, 5, modules_common_proto_geometry_pb.Point3D.fromObject(obj.velocity));
  obj.yaw != null && jspb.Message.setField(msg, 6, obj.yaw);
  obj.zoneId != null && jspb.Message.setField(msg, 7, obj.zoneId);
  obj.isHaveVariance != null && jspb.Message.setField(msg, 8, obj.isHaveVariance);
  obj.isGnssDoubleAntenna != null && jspb.Message.setField(msg, 9, obj.isGnssDoubleAntenna);
  obj.measureCovarList != null && jspb.Message.setField(msg, 10, obj.measureCovarList);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.localization.IntegMeasure}
 */
proto.apollo.localization.IntegMeasure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.localization.IntegMeasure;
  return proto.apollo.localization.IntegMeasure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.localization.IntegMeasure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.localization.IntegMeasure}
 */
proto.apollo.localization.IntegMeasure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new modules_common_proto_header_pb.Header;
      reader.readMessage(value,modules_common_proto_header_pb.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.localization.IntegMeasure.MeasureType} */ (reader.readEnum());
      msg.setMeasureType(value);
      break;
    case 3:
      var value = /** @type {!proto.apollo.localization.IntegMeasure.FrameType} */ (reader.readEnum());
      msg.setFrameType(value);
      break;
    case 4:
      var value = new modules_common_proto_geometry_pb.Point3D;
      reader.readMessage(value,modules_common_proto_geometry_pb.Point3D.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    case 5:
      var value = new modules_common_proto_geometry_pb.Point3D;
      reader.readMessage(value,modules_common_proto_geometry_pb.Point3D.deserializeBinaryFromReader);
      msg.setVelocity(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setYaw(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setZoneId(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsHaveVariance(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsGnssDoubleAntenna(value);
      break;
    case 10:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addMeasureCovar(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.localization.IntegMeasure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.localization.IntegMeasure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.localization.IntegMeasure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.localization.IntegMeasure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      modules_common_proto_header_pb.Header.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.apollo.localization.IntegMeasure.MeasureType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!proto.apollo.localization.IntegMeasure.FrameType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      modules_common_proto_geometry_pb.Point3D.serializeBinaryToWriter
    );
  }
  f = message.getVelocity();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      modules_common_proto_geometry_pb.Point3D.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getMeasureCovarList();
  if (f.length > 0) {
    writer.writePackedDouble(
      10,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.localization.IntegMeasure.MeasureType = {
  GNSS_POS_ONLY: 0,
  GNSS_POS_VEL: 1,
  GNSS_POS_XY: 2,
  GNSS_VEL_ONLY: 3,
  POINT_CLOUD_POS: 4,
  ODOMETER_VEL_ONLY: 5,
  VEHICLE_CONSTRAINT: 6
};

/**
 * @enum {number}
 */
proto.apollo.localization.IntegMeasure.FrameType = {
  ENU: 0,
  ECEF: 1,
  UTM: 2,
  ODOMETER: 3
};

/**
 * optional apollo.common.Header header = 1;
 * @return {?proto.apollo.common.Header}
 */
proto.apollo.localization.IntegMeasure.prototype.getHeader = function() {
  return /** @type{?proto.apollo.common.Header} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_header_pb.Header, 1));
};


/**
 * @param {?proto.apollo.common.Header|undefined} value
 * @return {!proto.apollo.localization.IntegMeasure} returns this
*/
proto.apollo.localization.IntegMeasure.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.localization.IntegMeasure} returns this
 */
proto.apollo.localization.IntegMeasure.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.IntegMeasure.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MeasureType measure_type = 2;
 * @return {!proto.apollo.localization.IntegMeasure.MeasureType}
 */
proto.apollo.localization.IntegMeasure.prototype.getMeasureType = function() {
  return /** @type {!proto.apollo.localization.IntegMeasure.MeasureType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.apollo.localization.IntegMeasure.MeasureType} value
 * @return {!proto.apollo.localization.IntegMeasure} returns this
 */
proto.apollo.localization.IntegMeasure.prototype.setMeasureType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.localization.IntegMeasure} returns this
 */
proto.apollo.localization.IntegMeasure.prototype.clearMeasureType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.IntegMeasure.prototype.hasMeasureType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FrameType frame_type = 3;
 * @return {!proto.apollo.localization.IntegMeasure.FrameType}
 */
proto.apollo.localization.IntegMeasure.prototype.getFrameType = function() {
  return /** @type {!proto.apollo.localization.IntegMeasure.FrameType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.apollo.localization.IntegMeasure.FrameType} value
 * @return {!proto.apollo.localization.IntegMeasure} returns this
 */
proto.apollo.localization.IntegMeasure.prototype.setFrameType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.localization.IntegMeasure} returns this
 */
proto.apollo.localization.IntegMeasure.prototype.clearFrameType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.IntegMeasure.prototype.hasFrameType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional apollo.common.Point3D position = 4;
 * @return {?proto.apollo.common.Point3D}
 */
proto.apollo.localization.IntegMeasure.prototype.getPosition = function() {
  return /** @type{?proto.apollo.common.Point3D} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_geometry_pb.Point3D, 4));
};


/**
 * @param {?proto.apollo.common.Point3D|undefined} value
 * @return {!proto.apollo.localization.IntegMeasure} returns this
*/
proto.apollo.localization.IntegMeasure.prototype.setPosition = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.localization.IntegMeasure} returns this
 */
proto.apollo.localization.IntegMeasure.prototype.clearPosition = function() {
  return this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.IntegMeasure.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional apollo.common.Point3D velocity = 5;
 * @return {?proto.apollo.common.Point3D}
 */
proto.apollo.localization.IntegMeasure.prototype.getVelocity = function() {
  return /** @type{?proto.apollo.common.Point3D} */ (
    jspb.Message.getWrapperField(this, modules_common_proto_geometry_pb.Point3D, 5));
};


/**
 * @param {?proto.apollo.common.Point3D|undefined} value
 * @return {!proto.apollo.localization.IntegMeasure} returns this
*/
proto.apollo.localization.IntegMeasure.prototype.setVelocity = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.localization.IntegMeasure} returns this
 */
proto.apollo.localization.IntegMeasure.prototype.clearVelocity = function() {
  return this.setVelocity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.IntegMeasure.prototype.hasVelocity = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double yaw = 6;
 * @return {number}
 */
proto.apollo.localization.IntegMeasure.prototype.getYaw = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.localization.IntegMeasure} returns this
 */
proto.apollo.localization.IntegMeasure.prototype.setYaw = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.localization.IntegMeasure} returns this
 */
proto.apollo.localization.IntegMeasure.prototype.clearYaw = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.IntegMeasure.prototype.hasYaw = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 zone_id = 7;
 * @return {number}
 */
proto.apollo.localization.IntegMeasure.prototype.getZoneId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.localization.IntegMeasure} returns this
 */
proto.apollo.localization.IntegMeasure.prototype.setZoneId = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.localization.IntegMeasure} returns this
 */
proto.apollo.localization.IntegMeasure.prototype.clearZoneId = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.IntegMeasure.prototype.hasZoneId = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool is_have_variance = 8;
 * @return {boolean}
 */
proto.apollo.localization.IntegMeasure.prototype.getIsHaveVariance = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.localization.IntegMeasure} returns this
 */
proto.apollo.localization.IntegMeasure.prototype.setIsHaveVariance = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.localization.IntegMeasure} returns this
 */
proto.apollo.localization.IntegMeasure.prototype.clearIsHaveVariance = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.IntegMeasure.prototype.hasIsHaveVariance = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool is_gnss_double_antenna = 9;
 * @return {boolean}
 */
proto.apollo.localization.IntegMeasure.prototype.getIsGnssDoubleAntenna = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.localization.IntegMeasure} returns this
 */
proto.apollo.localization.IntegMeasure.prototype.setIsGnssDoubleAntenna = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.localization.IntegMeasure} returns this
 */
proto.apollo.localization.IntegMeasure.prototype.clearIsGnssDoubleAntenna = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.localization.IntegMeasure.prototype.hasIsGnssDoubleAntenna = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated double measure_covar = 10;
 * @return {!Array<number>}
 */
proto.apollo.localization.IntegMeasure.prototype.getMeasureCovarList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 10));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.apollo.localization.IntegMeasure} returns this
 */
proto.apollo.localization.IntegMeasure.prototype.setMeasureCovarList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.apollo.localization.IntegMeasure} returns this
 */
proto.apollo.localization.IntegMeasure.prototype.addMeasureCovar = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.localization.IntegMeasure} returns this
 */
proto.apollo.localization.IntegMeasure.prototype.clearMeasureCovarList = function() {
  return this.setMeasureCovarList([]);
};


goog.object.extend(exports, proto.apollo.localization);
