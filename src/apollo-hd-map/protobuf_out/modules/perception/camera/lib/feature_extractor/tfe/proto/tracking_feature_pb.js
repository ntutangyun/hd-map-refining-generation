// source: modules/perception/camera/lib/feature_extractor/tfe/proto/tracking_feature.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.apollo.perception.camera.tracking_feature.ExternalParam', null, global);
goog.exportSymbol('proto.apollo.perception.camera.tracking_feature.ExtractorParam', null, global);
goog.exportSymbol('proto.apollo.perception.camera.tracking_feature.ExtractorParam.FeatureType', null, global);
goog.exportSymbol('proto.apollo.perception.camera.tracking_feature.FeatureParam', null, global);
goog.exportSymbol('proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam', null, global);
goog.exportSymbol('proto.apollo.perception.camera.tracking_feature.ROIPoolingParam', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.perception.camera.tracking_feature.FeatureParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.perception.camera.tracking_feature.FeatureParam.repeatedFields_, null);
};
goog.inherits(proto.apollo.perception.camera.tracking_feature.FeatureParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.perception.camera.tracking_feature.FeatureParam.displayName = 'proto.apollo.perception.camera.tracking_feature.FeatureParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.perception.camera.tracking_feature.ExtractorParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.perception.camera.tracking_feature.ExtractorParam.displayName = 'proto.apollo.perception.camera.tracking_feature.ExtractorParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.perception.camera.tracking_feature.ROIPoolingParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.perception.camera.tracking_feature.ROIPoolingParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.displayName = 'proto.apollo.perception.camera.tracking_feature.ROIPoolingParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.displayName = 'proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apollo.perception.camera.tracking_feature.ExternalParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.perception.camera.tracking_feature.ExternalParam.displayName = 'proto.apollo.perception.camera.tracking_feature.ExternalParam';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.perception.camera.tracking_feature.FeatureParam.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.perception.camera.tracking_feature.FeatureParam.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.perception.camera.tracking_feature.FeatureParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.perception.camera.tracking_feature.FeatureParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.tracking_feature.FeatureParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    featStride: jspb.Message.getFieldWithDefault(msg, 1, 32),
    extractorList: jspb.Message.toObjectList(msg.getExtractorList(),
    proto.apollo.perception.camera.tracking_feature.ExtractorParam.toObject, includeInstance),
    remapModel: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of FeatureParam as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.perception.camera.tracking_feature.FeatureParam.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.featStride;

  /** @type {?|undefined} */
  this.extractorList;

  /** @type {?|undefined} */
  this.remapModel;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.perception.camera.tracking_feature.FeatureParam.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.perception.camera.tracking_feature.FeatureParam}
 */
proto.apollo.perception.camera.tracking_feature.FeatureParam.fromObject = function(obj) {
  var msg = new proto.apollo.perception.camera.tracking_feature.FeatureParam();
  obj.featStride != null && jspb.Message.setField(msg, 1, obj.featStride);
  obj.extractorList && jspb.Message.setRepeatedWrapperField(
      msg, 2, obj.extractorList.map(
          proto.apollo.perception.camera.tracking_feature.ExtractorParam.fromObject));
  obj.remapModel != null && jspb.Message.setField(msg, 3, obj.remapModel);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.perception.camera.tracking_feature.FeatureParam}
 */
proto.apollo.perception.camera.tracking_feature.FeatureParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.perception.camera.tracking_feature.FeatureParam;
  return proto.apollo.perception.camera.tracking_feature.FeatureParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.perception.camera.tracking_feature.FeatureParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.perception.camera.tracking_feature.FeatureParam}
 */
proto.apollo.perception.camera.tracking_feature.FeatureParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFeatStride(value);
      break;
    case 2:
      var value = new proto.apollo.perception.camera.tracking_feature.ExtractorParam;
      reader.readMessage(value,proto.apollo.perception.camera.tracking_feature.ExtractorParam.deserializeBinaryFromReader);
      msg.addExtractor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemapModel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.perception.camera.tracking_feature.FeatureParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.perception.camera.tracking_feature.FeatureParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.perception.camera.tracking_feature.FeatureParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.tracking_feature.FeatureParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getExtractorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.apollo.perception.camera.tracking_feature.ExtractorParam.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 feat_stride = 1;
 * @return {number}
 */
proto.apollo.perception.camera.tracking_feature.FeatureParam.prototype.getFeatStride = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 32));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.tracking_feature.FeatureParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.FeatureParam.prototype.setFeatStride = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.FeatureParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.FeatureParam.prototype.clearFeatStride = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.FeatureParam.prototype.hasFeatStride = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ExtractorParam extractor = 2;
 * @return {!Array<!proto.apollo.perception.camera.tracking_feature.ExtractorParam>}
 */
proto.apollo.perception.camera.tracking_feature.FeatureParam.prototype.getExtractorList = function() {
  return /** @type{!Array<!proto.apollo.perception.camera.tracking_feature.ExtractorParam>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.perception.camera.tracking_feature.ExtractorParam, 2));
};


/**
 * @param {!Array<!proto.apollo.perception.camera.tracking_feature.ExtractorParam>} value
 * @return {!proto.apollo.perception.camera.tracking_feature.FeatureParam} returns this
*/
proto.apollo.perception.camera.tracking_feature.FeatureParam.prototype.setExtractorList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.apollo.perception.camera.tracking_feature.ExtractorParam=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.perception.camera.tracking_feature.ExtractorParam}
 */
proto.apollo.perception.camera.tracking_feature.FeatureParam.prototype.addExtractor = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.apollo.perception.camera.tracking_feature.ExtractorParam, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.perception.camera.tracking_feature.FeatureParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.FeatureParam.prototype.clearExtractorList = function() {
  return this.setExtractorList([]);
};


/**
 * optional string remap_model = 3;
 * @return {string}
 */
proto.apollo.perception.camera.tracking_feature.FeatureParam.prototype.getRemapModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.camera.tracking_feature.FeatureParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.FeatureParam.prototype.setRemapModel = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.FeatureParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.FeatureParam.prototype.clearRemapModel = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.FeatureParam.prototype.hasRemapModel = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.perception.camera.tracking_feature.ExtractorParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.perception.camera.tracking_feature.ExtractorParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    featBlob: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    featType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    roiPoolingParam: (f = msg.getRoiPoolingParam()) && proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.toObject(includeInstance, f),
    psRoiPoolingParam: (f = msg.getPsRoiPoolingParam()) && proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ExtractorParam as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.featBlob;

  /** @type {?|undefined} */
  this.featType;

  /** @type {?|undefined} */
  this.roiPoolingParam;

  /** @type {?|undefined} */
  this.psRoiPoolingParam;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.perception.camera.tracking_feature.ExtractorParam.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.perception.camera.tracking_feature.ExtractorParam}
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.fromObject = function(obj) {
  var msg = new proto.apollo.perception.camera.tracking_feature.ExtractorParam();
  obj.featBlob != null && jspb.Message.setField(msg, 1, obj.featBlob);
  obj.featType != null && jspb.Message.setField(msg, 2, obj.featType);
  obj.roiPoolingParam && jspb.Message.setWrapperField(
      msg, 3, proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.fromObject(obj.roiPoolingParam));
  obj.psRoiPoolingParam && jspb.Message.setWrapperField(
      msg, 4, proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.fromObject(obj.psRoiPoolingParam));
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.perception.camera.tracking_feature.ExtractorParam}
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.perception.camera.tracking_feature.ExtractorParam;
  return proto.apollo.perception.camera.tracking_feature.ExtractorParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.perception.camera.tracking_feature.ExtractorParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.perception.camera.tracking_feature.ExtractorParam}
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeatBlob(value);
      break;
    case 2:
      var value = /** @type {!proto.apollo.perception.camera.tracking_feature.ExtractorParam.FeatureType} */ (reader.readEnum());
      msg.setFeatType(value);
      break;
    case 3:
      var value = new proto.apollo.perception.camera.tracking_feature.ROIPoolingParam;
      reader.readMessage(value,proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.deserializeBinaryFromReader);
      msg.setRoiPoolingParam(value);
      break;
    case 4:
      var value = new proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam;
      reader.readMessage(value,proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.deserializeBinaryFromReader);
      msg.setPsRoiPoolingParam(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.perception.camera.tracking_feature.ExtractorParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.perception.camera.tracking_feature.ExtractorParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!proto.apollo.perception.camera.tracking_feature.ExtractorParam.FeatureType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getRoiPoolingParam();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.serializeBinaryToWriter
    );
  }
  f = message.getPsRoiPoolingParam();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.FeatureType = {
  ROIPOOLING: 0
};

/**
 * optional string feat_blob = 1;
 * @return {string}
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.prototype.getFeatBlob = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.camera.tracking_feature.ExtractorParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.prototype.setFeatBlob = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.ExtractorParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.prototype.clearFeatBlob = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.prototype.hasFeatBlob = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FeatureType feat_type = 2;
 * @return {!proto.apollo.perception.camera.tracking_feature.ExtractorParam.FeatureType}
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.prototype.getFeatType = function() {
  return /** @type {!proto.apollo.perception.camera.tracking_feature.ExtractorParam.FeatureType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.apollo.perception.camera.tracking_feature.ExtractorParam.FeatureType} value
 * @return {!proto.apollo.perception.camera.tracking_feature.ExtractorParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.prototype.setFeatType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.ExtractorParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.prototype.clearFeatType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.prototype.hasFeatType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ROIPoolingParam roi_pooling_param = 3;
 * @return {?proto.apollo.perception.camera.tracking_feature.ROIPoolingParam}
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.prototype.getRoiPoolingParam = function() {
  return /** @type{?proto.apollo.perception.camera.tracking_feature.ROIPoolingParam} */ (
    jspb.Message.getWrapperField(this, proto.apollo.perception.camera.tracking_feature.ROIPoolingParam, 3));
};


/**
 * @param {?proto.apollo.perception.camera.tracking_feature.ROIPoolingParam|undefined} value
 * @return {!proto.apollo.perception.camera.tracking_feature.ExtractorParam} returns this
*/
proto.apollo.perception.camera.tracking_feature.ExtractorParam.prototype.setRoiPoolingParam = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.ExtractorParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.prototype.clearRoiPoolingParam = function() {
  return this.setRoiPoolingParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.prototype.hasRoiPoolingParam = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PSROIPoolingParam ps_roi_pooling_param = 4;
 * @return {?proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam}
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.prototype.getPsRoiPoolingParam = function() {
  return /** @type{?proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam} */ (
    jspb.Message.getWrapperField(this, proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam, 4));
};


/**
 * @param {?proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam|undefined} value
 * @return {!proto.apollo.perception.camera.tracking_feature.ExtractorParam} returns this
*/
proto.apollo.perception.camera.tracking_feature.ExtractorParam.prototype.setPsRoiPoolingParam = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.ExtractorParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.prototype.clearPsRoiPoolingParam = function() {
  return this.setPsRoiPoolingParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.ExtractorParam.prototype.hasPsRoiPoolingParam = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.perception.camera.tracking_feature.ROIPoolingParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    pooledH: jspb.Message.getFieldWithDefault(msg, 1, 3),
    pooledW: jspb.Message.getFieldWithDefault(msg, 2, 3),
    useFloor: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ROIPoolingParam as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.pooledH;

  /** @type {?|undefined} */
  this.pooledW;

  /** @type {?|undefined} */
  this.useFloor;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.perception.camera.tracking_feature.ROIPoolingParam}
 */
proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.fromObject = function(obj) {
  var msg = new proto.apollo.perception.camera.tracking_feature.ROIPoolingParam();
  obj.pooledH != null && jspb.Message.setField(msg, 1, obj.pooledH);
  obj.pooledW != null && jspb.Message.setField(msg, 2, obj.pooledW);
  obj.useFloor != null && jspb.Message.setField(msg, 3, obj.useFloor);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.perception.camera.tracking_feature.ROIPoolingParam}
 */
proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.perception.camera.tracking_feature.ROIPoolingParam;
  return proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.perception.camera.tracking_feature.ROIPoolingParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.perception.camera.tracking_feature.ROIPoolingParam}
 */
proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPooledH(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPooledW(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseFloor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.perception.camera.tracking_feature.ROIPoolingParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional int32 pooled_h = 1;
 * @return {number}
 */
proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.prototype.getPooledH = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 3));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.tracking_feature.ROIPoolingParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.prototype.setPooledH = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.ROIPoolingParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.prototype.clearPooledH = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.prototype.hasPooledH = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 pooled_w = 2;
 * @return {number}
 */
proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.prototype.getPooledW = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 3));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.tracking_feature.ROIPoolingParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.prototype.setPooledW = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.ROIPoolingParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.prototype.clearPooledW = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.prototype.hasPooledW = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool use_floor = 3;
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.prototype.getUseFloor = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.perception.camera.tracking_feature.ROIPoolingParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.prototype.setUseFloor = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.ROIPoolingParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.prototype.clearUseFloor = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.ROIPoolingParam.prototype.hasUseFloor = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    heatMapA: jspb.Message.getFieldWithDefault(msg, 1, 16),
    outputDim: jspb.Message.getFieldWithDefault(msg, 2, 10),
    groupHeight: jspb.Message.getFieldWithDefault(msg, 3, 7),
    groupWidth: jspb.Message.getFieldWithDefault(msg, 4, 7),
    pooledHeight: jspb.Message.getFieldWithDefault(msg, 5, 7),
    pooledWidth: jspb.Message.getFieldWithDefault(msg, 6, 7),
    samplePerPart: jspb.Message.getFieldWithDefault(msg, 7, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of PSROIPoolingParam as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.heatMapA;

  /** @type {?|undefined} */
  this.outputDim;

  /** @type {?|undefined} */
  this.groupHeight;

  /** @type {?|undefined} */
  this.groupWidth;

  /** @type {?|undefined} */
  this.pooledHeight;

  /** @type {?|undefined} */
  this.pooledWidth;

  /** @type {?|undefined} */
  this.samplePerPart;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam}
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.fromObject = function(obj) {
  var msg = new proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam();
  obj.heatMapA != null && jspb.Message.setField(msg, 1, obj.heatMapA);
  obj.outputDim != null && jspb.Message.setField(msg, 2, obj.outputDim);
  obj.groupHeight != null && jspb.Message.setField(msg, 3, obj.groupHeight);
  obj.groupWidth != null && jspb.Message.setField(msg, 4, obj.groupWidth);
  obj.pooledHeight != null && jspb.Message.setField(msg, 5, obj.pooledHeight);
  obj.pooledWidth != null && jspb.Message.setField(msg, 6, obj.pooledWidth);
  obj.samplePerPart != null && jspb.Message.setField(msg, 7, obj.samplePerPart);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam}
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam;
  return proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam}
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeatMapA(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOutputDim(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGroupHeight(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGroupWidth(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPooledHeight(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPooledWidth(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSamplePerPart(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional int32 heat_map_a = 1;
 * @return {number}
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.getHeatMapA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 16));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.setHeatMapA = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.clearHeatMapA = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.hasHeatMapA = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 output_dim = 2;
 * @return {number}
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.getOutputDim = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 10));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.setOutputDim = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.clearOutputDim = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.hasOutputDim = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 group_height = 3;
 * @return {number}
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.getGroupHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 7));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.setGroupHeight = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.clearGroupHeight = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.hasGroupHeight = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 group_width = 4;
 * @return {number}
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.getGroupWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 7));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.setGroupWidth = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.clearGroupWidth = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.hasGroupWidth = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 pooled_height = 5;
 * @return {number}
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.getPooledHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 7));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.setPooledHeight = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.clearPooledHeight = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.hasPooledHeight = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 pooled_width = 6;
 * @return {number}
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.getPooledWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 7));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.setPooledWidth = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.clearPooledWidth = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.hasPooledWidth = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 sample_per_part = 7;
 * @return {number}
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.getSamplePerPart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 4));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.setSamplePerPart = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.clearSamplePerPart = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.PSROIPoolingParam.prototype.hasSamplePerPart = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.perception.camera.tracking_feature.ExternalParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.perception.camera.tracking_feature.ExternalParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelType: jspb.Message.getFieldWithDefault(msg, 1, "CaffeNet"),
    protoFile: jspb.Message.getFieldWithDefault(msg, 2, "caffe.pt"),
    weightFile: jspb.Message.getFieldWithDefault(msg, 3, "caffe.model"),
    resizeHeight: jspb.Message.getFieldWithDefault(msg, 4, 1080),
    resizeWidth: jspb.Message.getFieldWithDefault(msg, 5, 1920),
    inputBlob: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    featBlob: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    offsetRatio: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.288889),
    featureFile: jspb.Message.getFieldWithDefault(msg, 9, "feature.pt")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ExternalParam as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.modelType;

  /** @type {?|undefined} */
  this.protoFile;

  /** @type {?|undefined} */
  this.weightFile;

  /** @type {?|undefined} */
  this.resizeHeight;

  /** @type {?|undefined} */
  this.resizeWidth;

  /** @type {?|undefined} */
  this.inputBlob;

  /** @type {?|undefined} */
  this.featBlob;

  /** @type {?|undefined} */
  this.offsetRatio;

  /** @type {?|undefined} */
  this.featureFile;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.perception.camera.tracking_feature.ExternalParam.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.perception.camera.tracking_feature.ExternalParam}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.fromObject = function(obj) {
  var msg = new proto.apollo.perception.camera.tracking_feature.ExternalParam();
  obj.modelType != null && jspb.Message.setField(msg, 1, obj.modelType);
  obj.protoFile != null && jspb.Message.setField(msg, 2, obj.protoFile);
  obj.weightFile != null && jspb.Message.setField(msg, 3, obj.weightFile);
  obj.resizeHeight != null && jspb.Message.setField(msg, 4, obj.resizeHeight);
  obj.resizeWidth != null && jspb.Message.setField(msg, 5, obj.resizeWidth);
  obj.inputBlob != null && jspb.Message.setField(msg, 6, obj.inputBlob);
  obj.featBlob != null && jspb.Message.setField(msg, 7, obj.featBlob);
  obj.offsetRatio != null && jspb.Message.setField(msg, 8, obj.offsetRatio);
  obj.featureFile != null && jspb.Message.setField(msg, 9, obj.featureFile);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.perception.camera.tracking_feature.ExternalParam}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.perception.camera.tracking_feature.ExternalParam;
  return proto.apollo.perception.camera.tracking_feature.ExternalParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.perception.camera.tracking_feature.ExternalParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.perception.camera.tracking_feature.ExternalParam}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProtoFile(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setWeightFile(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResizeHeight(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResizeWidth(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setInputBlob(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeatBlob(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOffsetRatio(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeatureFile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.perception.camera.tracking_feature.ExternalParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.perception.camera.tracking_feature.ExternalParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string model_type = 1;
 * @return {string}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.getModelType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "CaffeNet"));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.camera.tracking_feature.ExternalParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.setModelType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.ExternalParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.clearModelType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.hasModelType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string proto_file = 2;
 * @return {string}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.getProtoFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "caffe.pt"));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.camera.tracking_feature.ExternalParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.setProtoFile = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.ExternalParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.clearProtoFile = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.hasProtoFile = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string weight_file = 3;
 * @return {string}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.getWeightFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "caffe.model"));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.camera.tracking_feature.ExternalParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.setWeightFile = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.ExternalParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.clearWeightFile = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.hasWeightFile = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 resize_height = 4;
 * @return {number}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.getResizeHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 1080));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.tracking_feature.ExternalParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.setResizeHeight = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.ExternalParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.clearResizeHeight = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.hasResizeHeight = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 resize_width = 5;
 * @return {number}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.getResizeWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 1920));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.tracking_feature.ExternalParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.setResizeWidth = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.ExternalParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.clearResizeWidth = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.hasResizeWidth = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string input_blob = 6;
 * @return {string}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.getInputBlob = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.camera.tracking_feature.ExternalParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.setInputBlob = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.ExternalParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.clearInputBlob = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.hasInputBlob = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string feat_blob = 7;
 * @return {string}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.getFeatBlob = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.camera.tracking_feature.ExternalParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.setFeatBlob = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.ExternalParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.clearFeatBlob = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.hasFeatBlob = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional float offset_ratio = 8;
 * @return {number}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.getOffsetRatio = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.288889));
};


/**
 * @param {number} value
 * @return {!proto.apollo.perception.camera.tracking_feature.ExternalParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.setOffsetRatio = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.ExternalParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.clearOffsetRatio = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.hasOffsetRatio = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string feature_file = 9;
 * @return {string}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.getFeatureFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, "feature.pt"));
};


/**
 * @param {string} value
 * @return {!proto.apollo.perception.camera.tracking_feature.ExternalParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.setFeatureFile = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.perception.camera.tracking_feature.ExternalParam} returns this
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.clearFeatureFile = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.perception.camera.tracking_feature.ExternalParam.prototype.hasFeatureFile = function() {
  return jspb.Message.getField(this, 9) != null;
};


goog.object.extend(exports, proto.apollo.perception.camera.tracking_feature);
